"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[8743],{3905:(n,e,t)=>{t.d(e,{Zo:()=>l,kt:()=>y});var o=t(7294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,o)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function p(n,e){if(null==n)return{};var t,o,a=function(n,e){if(null==n)return{};var t,o,a={},r=Object.keys(n);for(o=0;o<r.length;o++)t=r[o],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(o=0;o<r.length;o++)t=r[o],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var m=o.createContext({}),i=function(n){var e=o.useContext(m),t=e;return n&&(t="function"==typeof n?n(e):s(s({},e),n)),t},l=function(n){var e=i(n.components);return o.createElement(m.Provider,{value:e},n.children)},u="mdxType",c={inlineCode:"code",wrapper:function(n){var e=n.children;return o.createElement(o.Fragment,{},e)}},d=o.forwardRef((function(n,e){var t=n.components,a=n.mdxType,r=n.originalType,m=n.parentName,l=p(n,["components","mdxType","originalType","parentName"]),u=i(t),d=a,y=u["".concat(m,".").concat(d)]||u[d]||c[d]||r;return t?o.createElement(y,s(s({ref:e},l),{},{components:t})):o.createElement(y,s({ref:e},l))}));function y(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var r=t.length,s=new Array(r);s[0]=d;var p={};for(var m in e)hasOwnProperty.call(e,m)&&(p[m]=e[m]);p.originalType=n,p[u]="string"==typeof n?n:a,s[1]=p;for(var i=2;i<r;i++)s[i]=t[i];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3307:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>m,contentTitle:()=>s,default:()=>g,frontMatter:()=>r,metadata:()=>p,toc:()=>i});var o=t(7462),a=(t(7294),t(3905));const r={title:"mount",componentSpecific:!0},s=void 0,p={unversionedId:"api/commands/mount",id:"api/commands/mount",title:"mount",description:"Cypress does not have a built-in cy.mount() command. The command must be set",source:"@site/docs/api/commands/mount.mdx",sourceDirName:"api/commands",slug:"/api/commands/mount",permalink:"/api/commands/mount",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/commands/mount.mdx",tags:[],version:"current",lastUpdatedAt:1717543864,formattedLastUpdatedAt:"Jun 4, 2024",frontMatter:{title:"mount",componentSpecific:!0},sidebar:"api",previous:{title:"log",permalink:"/api/commands/log"},next:{title:"origin",permalink:"/api/commands/origin"}},m={},i=[{value:"Creating a New <code>cy.mount()</code> Command",id:"Creating-a-New-cymount-Command",level:2},{value:"Adding TypeScript Typings for <code>cy.mount()</code> Commands",id:"Adding-TypeScript-Typings-for-cymount-Commands",level:2},{value:"Additional Mount Command Examples",id:"Additional-Mount-Command-Examples",level:2}],l=n=>function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)},u=l("ImportMountFunctions"),c=l("Tabs"),d=l("TabItem"),y={toc:i};function g(n){let{components:e,...t}=n;return(0,a.kt)("wrapper",(0,o.Z)({},y,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Cypress does not have a built-in ",(0,a.kt)("inlineCode",{parentName:"p"},"cy.mount()")," command. The command must be set\nup in your support file. By default, when you use Cypress to configure your\nproject, one will be automatically scaffolded for you."),(0,a.kt)("p",null,"This guide covers how to customize the ",(0,a.kt)("inlineCode",{parentName:"p"},"cy.mount()")," command to fit the needs of\nyour app."),(0,a.kt)("p",null,"We recommend setting up a custom ",(0,a.kt)("inlineCode",{parentName:"p"},"cy.mount()")," command instead of importing the\nmount command from the mounting libraries. Doing so offers a few advantages:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You don't need to import the mount command into every test as the ",(0,a.kt)("inlineCode",{parentName:"li"},"cy.mount()"),"\ncommand is available globally."),(0,a.kt)("li",{parentName:"ul"},"You can set up common scenarios that you usually have to do in each test, like\nwrapping a component in a\n",(0,a.kt)("a",{parentName:"li",href:"https://reactjs.org/docs/context.html"},"React Provider")," or adding\n",(0,a.kt)("a",{parentName:"li",href:"https://vuejs.org/v2/guide/plugins.html"},"Vue plugins"),".")),(0,a.kt)("p",null,"Let's take a look at how to implement the command."),(0,a.kt)("h2",{id:"Creating-a-New-cymount-Command"},"Creating a New ",(0,a.kt)("inlineCode",{parentName:"h2"},"cy.mount()")," Command"),(0,a.kt)(u,{mdxType:"ImportMountFunctions"}),(0,a.kt)("p",null,"To use ",(0,a.kt)("inlineCode",{parentName:"p"},"cy.mount()"),", add a ",(0,a.kt)("a",{parentName:"p",href:"/api/cypress-api/custom-commands"},"custom command")," to\nthe commands file using\n",(0,a.kt)("a",{parentName:"p",href:"/api/cypress-api/custom-commands"},(0,a.kt)("inlineCode",{parentName:"a"},"Cypress.Commands.add()")),". Below are examples\nto start with for your commands:"),(0,a.kt)(c,{mdxType:"Tabs"},(0,a.kt)(d,{value:"React",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// React 18\nimport { mount } from 'cypress/react18'\n\n// React 16, 17\nimport { mount } from 'cypress/react'\n\nCypress.Commands.add('mount', (component, options) => {\n  // Wrap any parent components needed\n  // ie: return mount(<MyProvider>{component}</MyProvider>, options)\n  return mount(component, options)\n})\n"))),(0,a.kt)(d,{value:"Vue 2",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { mount } from 'cypress/vue2'\n\nCypress.Commands.add('mount', (component, options = {}) => {\n  // Setup options object\n  options.extensions = options.extensions || {}\n  options.extensions.plugins = options.extensions.plugins || []\n  options.extensions.components = options.extensions.components || {}\n\n  /* Add any global plugins */\n  // options.extensions.plugins.push({\n  //   install(app) {\n  //     app.use(MyPlugin);\n  //   },\n  // });\n\n  /* Add any global components */\n  // options.extensions.components['Button'] = Button;\n\n  return mount(component, options)\n})\n"))),(0,a.kt)(d,{value:"Vue 3",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { mount } from 'cypress/vue'\n\nCypress.Commands.add('mount', (component, options = {}) => {\n  // Setup options object\n  options.global = options.global || {}\n  options.global.stubs = options.global.stubs || {}\n  options.global.stubs['transition'] = false\n  options.global.components = options.global.components || {}\n  options.global.plugins = options.global.plugins || []\n\n  /* Add any global plugins */\n  // options.global.plugins.push({\n  //   install(app) {\n  //     app.use(MyPlugin);\n  //   },\n  // });\n\n  /* Add any global components */\n  // options.global.components['Button'] = Button;\n\n  return mount(component, options)\n})\n"))),(0,a.kt)(d,{value:"Angular",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { mount } from 'cypress/angular'\n\nCypress.Commands.add('mount', (component, config) => {\n  return mount(component, config)\n})\n")))),(0,a.kt)("h2",{id:"Adding-TypeScript-Typings-for-cymount-Commands"},"Adding TypeScript Typings for ",(0,a.kt)("inlineCode",{parentName:"h2"},"cy.mount()")," Commands"),(0,a.kt)("p",null,"When working in\n",(0,a.kt)("a",{parentName:"p",href:"https://docs.cypress.io/guides/tooling/typescript-support"},"TypeScript"),", you\nwill need to add custom typings for your commands to get code completion and to\navoid any TypeScript errors."),(0,a.kt)("p",null,"The typings need to be in a location that any code can access, therefore, we\nrecommend creating a ",(0,a.kt)("inlineCode",{parentName:"p"},"cypress.d.ts")," file in the root directory, and use this\nexample as a starting point for customizing your own command:"),(0,a.kt)(c,{mdxType:"Tabs"},(0,a.kt)(d,{value:"React",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { mount } from 'cypress/react'\n\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      mount: typeof mount\n    }\n  }\n}\n"))),(0,a.kt)(d,{value:"Vue",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { mount } from 'cypress/vue'\n\ntype MountParams = Parameters<typeof mount>\ntype OptionsParam = MountParams[1]\n\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      mount: typeof mount\n    }\n  }\n}\n"))),(0,a.kt)(d,{value:"Angular",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { mount } from 'cypress/angular'\n\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      mount: typeof mount\n    }\n  }\n}\n")))),(0,a.kt)("p",null,"If your tests have trouble finding the types for the custom commands, manually\ninclude the ",(0,a.kt)("inlineCode",{parentName:"p"},"cypress.d.ts")," file in all your ",(0,a.kt)("inlineCode",{parentName:"p"},"tsconfig.json")," files like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'"include": ["./src", "cypress.d.ts"]\n')),(0,a.kt)("h2",{id:"Additional-Mount-Command-Examples"},"Additional Mount Command Examples"),(0,a.kt)("p",null,"Visit the guides for scenarios in\n",(0,a.kt)("a",{parentName:"p",href:"/guides/component-testing/react/examples"},"React"),",\n",(0,a.kt)("a",{parentName:"p",href:"/guides/component-testing/vue/examples"},"Vue"),",\n",(0,a.kt)("a",{parentName:"p",href:"/guides/component-testing/angular/examples"},"Angular"),", and\n",(0,a.kt)("a",{parentName:"p",href:"/guides/component-testing/svelte/examples"},"Svelte")," for customizing a mount\ncommand."))}g.isMDXComponent=!0}}]);