"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[4500],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(n),d=o,f=u["".concat(p,".").concat(d)]||u[d]||h[d]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3093:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={title:"Preprocessors API"},i=void 0,s={unversionedId:"api/plugins/preprocessors-api",id:"api/plugins/preprocessors-api",title:"Preprocessors API",description:"A preprocessor is the plugin responsible for preparing a",source:"@site/docs/api/plugins/preprocessors-api.mdx",sourceDirName:"api/plugins",slug:"/api/plugins/preprocessors-api",permalink:"/api/plugins/preprocessors-api",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/plugins/preprocessors-api.mdx",tags:[],version:"current",lastUpdatedAt:1717543864,formattedLastUpdatedAt:"Jun 4, 2024",frontMatter:{title:"Preprocessors API"},sidebar:"api",previous:{title:"Configuration API",permalink:"/api/plugins/configuration-api"},next:{title:"Writing a Plugin",permalink:"/api/plugins/writing-a-plugin"}},p={},l=[{value:"Examples",id:"Examples",level:2},{value:"See also",id:"See-also",level:3},{value:"Defaults",id:"Defaults",level:2},{value:"Usage",id:"Usage",level:2},{value:"The callback function should return one of the following:",id:"The-callback-function-should-return-one-of-the-following",level:3},{value:"File object",id:"File-object",level:2},{value:"File events",id:"File-events",level:2},{value:"Receiving &#39;close&#39; event",id:"Receiving-close-event",level:3},{value:"Sending &#39;rerun&#39; event",id:"Sending-rerun-event",level:3},{value:"Publishing",id:"Publishing",level:2}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},u=c("WarningSetupNodeEvents"),h=c("CypressConfigFileTabs"),d={toc:l};function f(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"A preprocessor is the plugin responsible for preparing a\n",(0,o.kt)("a",{parentName:"p",href:"/guides/core-concepts/writing-and-organizing-tests#Support-file"},"support file"),"\nor a ",(0,o.kt)("a",{parentName:"p",href:"/guides/core-concepts/writing-and-organizing-tests#Test-files"},"test file"),"\nfor the browser."),(0,o.kt)("p",null,"A preprocessor could transpile your file from another language (CoffeeScript or\nClojureScript) or from a newer version of JavaScript (ES2017)."),(0,o.kt)("p",null,"A preprocessor also typically watches the source files for changes, processes\nthem again, and then notifies Cypress to re-run the tests."),(0,o.kt)("h2",{id:"Examples"},"Examples"),(0,o.kt)("p",null,"We've created three preprocessors as examples for you to look at. These are\nfully functioning preprocessors."),(0,o.kt)("p",null,"The code contains comments that explain how it utilizes the preprocessor API."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/cypress-io/cypress/tree/develop/npm/webpack-preprocessor"},"webpack preprocessor")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/cypress-io/cypress-browserify-preprocessor"},"Browserify preprocessor")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/cypress-io/cypress-watch-preprocessor"},"Watch preprocessor"))),(0,o.kt)("h3",{id:"See-also"},"See also"),(0,o.kt)("p",null,"The blog post\n",(0,o.kt)("a",{parentName:"p",href:"https://glebbahmutov.com/blog/write-cypress-preprocessor/"},"Write Cypress Markdown Preprocessor"),"\nshows how to write your own file preprocessor."),(0,o.kt)("h2",{id:"Defaults"},"Defaults"),(0,o.kt)("p",null,"By default, Cypress comes packaged with the ",(0,o.kt)("strong",{parentName:"p"},"webpack preprocessor")," already\ninstalled."),(0,o.kt)("p",null,"The webpack preprocessor handles:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"ES2015 and JSX via Babel"),(0,o.kt)("li",{parentName:"ul"},"TypeScript"),(0,o.kt)("li",{parentName:"ul"},"CoffeeScript ",(0,o.kt)("inlineCode",{parentName:"li"},"1.x.x")),(0,o.kt)("li",{parentName:"ul"},"Watching and caching files")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Are you looking to change the ",(0,o.kt)("strong",{parentName:"p"},"default options")," for webpack?")),(0,o.kt)("p",null,"If you already use webpack in your project, you can pass in your webpack config\nas\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress/tree/develop/npm/webpack-preprocessor#options"},"shown here"),"."),(0,o.kt)("p",null,"If you don't use webpack in your project or would like to keep the majority of\nthe default options, you can\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress/tree/develop/npm/webpack-preprocessor#modifying-default-options"},"modify the default options"),".\nEditing the options allows you to do things like:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Add your own Babel plugins"),(0,o.kt)("li",{parentName:"ul"},"Modify options for TypeScript compilation"),(0,o.kt)("li",{parentName:"ul"},"Add support for CoffeeScript ",(0,o.kt)("inlineCode",{parentName:"li"},"2.x.x"))),(0,o.kt)("h2",{id:"Usage"},"Usage"),(0,o.kt)(u,{mdxType:"WarningSetupNodeEvents"}),(0,o.kt)("p",null,"To use a preprocessor, you should bind to the ",(0,o.kt)("inlineCode",{parentName:"p"},"file:preprocessor")," event in your\n",(0,o.kt)("a",{parentName:"p",href:"/guides/tooling/plugins-guide#Using-a-plugin"},"setupNodeEvents")," function:"),(0,o.kt)("cypress-config-plugin-example",null,(0,o.kt)(h,{mdxType:"CypressConfigFileTabs"},(0,o.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('file:preprocessor', (file) => {\n        // ...\n      })\n    },\n  },\n})\n")),(0,o.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('file:preprocessor', (file) => {\n        // ...\n      })\n    },\n  },\n})\n")))),(0,o.kt)("h3",{id:"The-callback-function-should-return-one-of-the-following"},"The callback function should return one of the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A promise","*"," that eventually resolves the path to the ",(0,o.kt)("strong",{parentName:"li"},"built file"),"*","*","."),(0,o.kt)("li",{parentName:"ul"},"A promise","*"," that eventually rejects with an error that occurred during\nprocessing.")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"*"," The promise should resolve only after the file has completed writing to disk.\nThe promise resolving is a signal that the file is ready to be served to the\nbrowser.")),(0,o.kt)("hr",null),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"*","*"," The built file is the file that is created by the preprocessor that will\neventually be served to the browser.")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"If, for example, the source file is ",(0,o.kt)("inlineCode",{parentName:"p"},"spec.coffee"),", the preprocessor should:")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Compile the CoffeeScript into JavaScript ",(0,o.kt)("inlineCode",{parentName:"li"},"spec.js")),(0,o.kt)("li",{parentName:"ol"},"Write that JavaScript file to disk (example: ",(0,o.kt)("inlineCode",{parentName:"li"},"/Users/foo/tmp/spec.js"),")"),(0,o.kt)("li",{parentName:"ol"},"Resolve with the absolute path to that file: ",(0,o.kt)("inlineCode",{parentName:"li"},"/Users/foo/tmp/spec.js"))),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"This callback function can and ",(0,o.kt)("em",{parentName:"p"},"will")," be called multiple times with the same\n",(0,o.kt)("inlineCode",{parentName:"p"},"filePath"),"."),(0,o.kt)("p",{parentName:"admonition"},"The callback function is called any time a file is requested by the browser.\nThis happens on each run of the tests."),(0,o.kt)("p",{parentName:"admonition"},"Make sure not to start a new watcher each time it is called. Instead, cache the\nwatcher and, on subsequent calls, return a promise that resolves when the latest\nversion of the file has been processed.")),(0,o.kt)("h2",{id:"File-object"},"File object"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"file")," object passed to the callback function has the following properties:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Property"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"filePath")),(0,o.kt)("td",{parentName:"tr",align:null},"The full path to the source file.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"outputPath")),(0,o.kt)("td",{parentName:"tr",align:null},"The suggested path for saving the preprocessed file to disk. This is unique to the source file. A preprocessor can choose to write the file elsewhere, but Cypress automatically provides you this value as a convenient default.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"shouldWatch")),(0,o.kt)("td",{parentName:"tr",align:null},"A boolean indicating whether the preprocessor should watch for file changes or not.")))),(0,o.kt)("h2",{id:"File-events"},"File events"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"file")," object passed to the callback function is an\n",(0,o.kt)("a",{parentName:"p",href:"https://nodejs.org/api/events.html#events_class_eventemitter"},"Event Emitter"),"."),(0,o.kt)("h3",{id:"Receiving-close-event"},"Receiving 'close' event"),(0,o.kt)("p",null,"When the running spec, the project, or the browser is closed while running\ntests, the ",(0,o.kt)("inlineCode",{parentName:"p"},"close")," event will be emitted. The preprocessor should do any\nnecessary cleanup in this function, like closing the watcher when watching."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"// example\nconst watcher = fs.watch(filePath /* ... */)\n\nfile.on('close', () => {\n  watcher.close()\n})\n")),(0,o.kt)("h3",{id:"Sending-rerun-event"},"Sending 'rerun' event"),(0,o.kt)("p",null,"If watching for file changes, emit ",(0,o.kt)("inlineCode",{parentName:"p"},"rerun")," after a file has finished being\nprocessed to let Cypress know to rerun the tests."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"// example\nfs.watch(filePath, () => {\n  file.emit('rerun')\n})\n")),(0,o.kt)("h2",{id:"Publishing"},"Publishing"),(0,o.kt)("p",null,"Publish preprocessors to ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/"},"npm")," with the naming\nconvention ",(0,o.kt)("inlineCode",{parentName:"p"},"cypress-*-preprocessor")," (e.g. cypress-clojurescript-preprocessor)."),(0,o.kt)("p",null,"Use the following npm keywords:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"keywords": [\n  "cypress",\n  "cypress-plugin",\n  "cypress-preprocessor"\n]\n')),(0,o.kt)("p",null,"Feel free to submit your published plugins to our ",(0,o.kt)("a",{parentName:"p",href:"/plugins"},"list of plugins"),"."))}f.isMDXComponent=!0}}]);