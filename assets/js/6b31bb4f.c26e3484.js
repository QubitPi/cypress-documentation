"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[7802],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,k=u["".concat(s,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(k,r(r({ref:t},c),{},{components:n})):a.createElement(k,r({ref:t},c))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,r[1]=l;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2129:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const i={title:"Stubs, Spies, and Clocks"},r=void 0,l={unversionedId:"guides/guides/stubs-spies-and-clocks",id:"guides/guides/stubs-spies-and-clocks",title:"Stubs, Spies, and Clocks",description:"What you'll learn",source:"@site/docs/guides/guides/stubs-spies-and-clocks.mdx",sourceDirName:"guides/guides",slug:"/guides/guides/stubs-spies-and-clocks",permalink:"/cypress-documentation/guides/guides/stubs-spies-and-clocks",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/guides/guides/stubs-spies-and-clocks.mdx",tags:[],version:"current",lastUpdatedAt:1696481464,formattedLastUpdatedAt:"Oct 5, 2023",frontMatter:{title:"Stubs, Spies, and Clocks"},sidebar:"guides",previous:{title:"Screenshots and Videos",permalink:"/cypress-documentation/guides/guides/screenshots-and-videos"},next:{title:"Test Retries",permalink:"/cypress-documentation/guides/guides/test-retries"}},s={},p=[{value:"Capabilities",id:"Capabilities",level:2},{value:"Libraries and Tools",id:"Libraries-and-Tools",level:2},{value:"Common Scenarios",id:"Common-Scenarios",level:2},{value:"Stubs",id:"Stubs",level:3},{value:"Common Scenarios:",id:"Common-Scenarios-1",level:4},{value:"Spies",id:"Spies",level:3},{value:"Clock",id:"Clock",level:3},{value:"Common Scenarios",id:"Common-Scenarios-2",level:4},{value:"Control <code>setInterval</code>",id:"Control-setInterval",level:5},{value:"Restore the clock",id:"Restore-the-clock",level:5},{value:"Assertions",id:"Assertions",level:3},{value:"Integration and Extensions",id:"Integration-and-Extensions",level:2},{value:"See also",id:"See-also",level:2}],c=(u="Icon",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var u;const m={toc:p};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("h2",{parentName:"admonition",id:"What-youll-learn"},(0,o.kt)(c,{name:"graduation-cap",mdxType:"Icon"})," What you'll learn"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"Which libraries Cypress includes to provide typical testing functionality"),(0,o.kt)("li",{parentName:"ul"},"How to use stubs for asserting that code was called but preventing it from\nexecuting"),(0,o.kt)("li",{parentName:"ul"},"How to use spies for asserting that code was called without interfering with\nits execution"),(0,o.kt)("li",{parentName:"ul"},"How to control time for deterministically testing code that is time-dependent"),(0,o.kt)("li",{parentName:"ul"},"How Cypress improves and extends the included libraries"))),(0,o.kt)("h2",{id:"Capabilities"},"Capabilities"),(0,o.kt)("p",null,"Cypress comes built in with the ability to stub and spy with\n",(0,o.kt)("a",{parentName:"p",href:"/api/commands/stub"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.stub()")),", ",(0,o.kt)("a",{parentName:"p",href:"/api/commands/spy"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.spy()"))," or modify\nyour application's time with ",(0,o.kt)("a",{parentName:"p",href:"/api/commands/clock"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.clock()"))," - which lets\nyou manipulate ",(0,o.kt)("inlineCode",{parentName:"p"},"Date"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"setTimeout"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"clearTimeout"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"setInterval"),", or\n",(0,o.kt)("inlineCode",{parentName:"p"},"clearInterval"),"."),(0,o.kt)("p",null,"These commands are useful when writing both ",(0,o.kt)("strong",{parentName:"p"},"unit tests")," and ",(0,o.kt)("strong",{parentName:"p"},"integration\ntests"),"."),(0,o.kt)("h2",{id:"Libraries-and-Tools"},"Libraries and Tools"),(0,o.kt)("p",null,"Cypress automatically bundles and wraps these libraries:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"What it does"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"http://sinonjs.org"},(0,o.kt)("inlineCode",{parentName:"a"},"sinon"))),(0,o.kt)("td",{parentName:"tr",align:null},"provides the ",(0,o.kt)("a",{parentName:"td",href:"/api/commands/stub"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.stub()"))," and ",(0,o.kt)("a",{parentName:"td",href:"/api/commands/spy"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.spy()"))," APIs")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/sinonjs/lolex"},(0,o.kt)("inlineCode",{parentName:"a"},"lolex"))),(0,o.kt)("td",{parentName:"tr",align:null},"provides the ",(0,o.kt)("a",{parentName:"td",href:"/api/commands/clock"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.clock()"))," and ",(0,o.kt)("a",{parentName:"td",href:"/api/commands/tick"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.tick()"))," APIs")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://github.com/domenic/sinon-chai"},(0,o.kt)("inlineCode",{parentName:"a"},"sinon-chai"))),(0,o.kt)("td",{parentName:"tr",align:null},"adds ",(0,o.kt)("inlineCode",{parentName:"td"},"chai")," assertions for stubs and spies")))),(0,o.kt)("p",null,"You can refer to each of these libraries' documentation for more examples and\nexplanations."),(0,o.kt)("h2",{id:"Common-Scenarios"},"Common Scenarios"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("strong",null,"Example test!"),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{parentName:"p",href:"/examples/recipes#Stubbing-and-spying"},"Check out our example recipe testing spying, stubbing, and time"))),(0,o.kt)("h3",{id:"Stubs"},"Stubs"),(0,o.kt)("p",null,"A stub is a way to modify a function and delegate control over its behavior to\nyou (the programmer)."),(0,o.kt)("p",null,"A stub is most commonly used in a unit test but is still useful during some\nintegration/e2e tests."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"// create a standalone stub (generally for use in unit test)\ncy.stub()\n\n// replace obj.method() with a stubbed function\ncy.stub(obj, 'method')\n\n// force obj.method() to return \"foo\"\ncy.stub(obj, 'method').returns('foo')\n\n// force obj.method() when called with \"bar\" argument to return \"foo\"\ncy.stub(obj, 'method').withArgs('bar').returns('foo')\n\n// force obj.method() to return a promise which resolves to \"foo\"\ncy.stub(obj, 'method').resolves('foo')\n\n// force obj.method() to return a promise rejected with an error\ncy.stub(obj, 'method').rejects(new Error('foo'))\n")),(0,o.kt)("p",null,"You generally stub a function when it has side effects you are trying to\ncontrol."),(0,o.kt)("h4",{id:"Common-Scenarios-1"},"Common Scenarios:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You have a function that accepts a callback, and want to invoke the callback."),(0,o.kt)("li",{parentName:"ul"},"Your function returns a ",(0,o.kt)("inlineCode",{parentName:"li"},"Promise"),", and you want to automatically resolve or\nreject it."),(0,o.kt)("li",{parentName:"ul"},"You have a function that wraps ",(0,o.kt)("inlineCode",{parentName:"li"},"window.location")," and don't want your\napplication to be navigated."),(0,o.kt)("li",{parentName:"ul"},"You're trying to test your application's \"failure path\" by forcing things to\nfail."),(0,o.kt)("li",{parentName:"ul"},"You're trying to test your application's \"happy path\" by forcing things to\npass."),(0,o.kt)("li",{parentName:"ul"},'You want to "trick" your application into thinking it\'s logged in or logged\nout.'),(0,o.kt)("li",{parentName:"ul"},"You're using ",(0,o.kt)("inlineCode",{parentName:"li"},"oauth")," and want to stub login methods.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("strong",null,"cy.stub()"),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{parentName:"p",href:"/api/commands/stub"},"Read more about how to use ",(0,o.kt)("inlineCode",{parentName:"a"},"cy.stub()")),".")),(0,o.kt)("h3",{id:"Spies"},"Spies"),(0,o.kt)("p",null,'A spy gives you the ability to "spy" on a function, by letting you capture and\nthen assert that the function was called with the right arguments, or that the\nfunction was called a certain number of times, or even what the return value was\nor what context the function was called with.'),(0,o.kt)("p",null,"A spy does ",(0,o.kt)("strong",{parentName:"p"},"not")," modify the behavior of the function - it is left perfectly\nintact. A spy is most useful when you are testing the contract between multiple\nfunctions and you don't care about the side effects the real function may create\n(if any)."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.spy(obj, 'method')\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("strong",null,"cy.spy()"),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{parentName:"p",href:"/api/commands/spy"},"Read more about how to use ",(0,o.kt)("inlineCode",{parentName:"a"},"cy.spy()")),".")),(0,o.kt)("h3",{id:"Clock"},"Clock"),(0,o.kt)("p",null,"There are situations when it is useful to control your application's ",(0,o.kt)("inlineCode",{parentName:"p"},"date")," and\n",(0,o.kt)("inlineCode",{parentName:"p"},"time")," in order to override its behavior or avoid slow tests."),(0,o.kt)("p",null,"With ",(0,o.kt)("a",{parentName:"p",href:"/api/commands/clock"},"cy.clock()")," you can control:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Date")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"setTimeout")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"setInterval"))),(0,o.kt)("h4",{id:"Common-Scenarios-2"},"Common Scenarios"),(0,o.kt)("h5",{id:"Control-setInterval"},"Control ",(0,o.kt)("inlineCode",{parentName:"h5"},"setInterval")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You're polling something in your application with ",(0,o.kt)("inlineCode",{parentName:"li"},"setInterval")," and want to\ncontrol that."),(0,o.kt)("li",{parentName:"ul"},"You have ",(0,o.kt)("strong",{parentName:"li"},"throttled")," or ",(0,o.kt)("strong",{parentName:"li"},"debounced")," functions which you want to control.")),(0,o.kt)("p",null,"Once you've enabled ",(0,o.kt)("a",{parentName:"p",href:"/api/commands/clock"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.clock()"))," you can control time by\n",(0,o.kt)("strong",{parentName:"p"},"ticking")," it ahead by milliseconds."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.clock()\ncy.visit('http://localhost:3333')\ncy.get('#search').type('Acme Company')\ncy.tick(1000)\n")),(0,o.kt)("p",null,"You can call ",(0,o.kt)("a",{parentName:"p",href:"/api/commands/clock"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.clock()"))," ",(0,o.kt)("strong",{parentName:"p"},"prior")," to visiting your\napplication and we will automatically bind it to the application on the next\n",(0,o.kt)("a",{parentName:"p",href:"/api/commands/visit"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.visit()")),". The same concept applies to mounting a\ncomponent with ",(0,o.kt)("a",{parentName:"p",href:"/api/commands/mount"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.mount()")),". We bind ",(0,o.kt)("strong",{parentName:"p"},"before")," any\ntimers from your code can be invoked."),(0,o.kt)("h5",{id:"Restore-the-clock"},"Restore the clock"),(0,o.kt)("p",null,"You can restore the clock and allow your application to resume normally without\nmanipulating native global functions related to time. This is automatically\ncalled between tests."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.clock()\ncy.visit('http://localhost:3333')\ncy.get('#search').type('Acme Company')\ncy.tick(1000)\n// more test code here\n\n// restore the clock\ncy.clock().then((clock) => {\n  clock.restore()\n})\n// more test code here\n")),(0,o.kt)("p",null,"You could also restore by using ",(0,o.kt)("a",{parentName:"p",href:"/api/commands/invoke"},".invoke()")," to invoke the\n",(0,o.kt)("inlineCode",{parentName:"p"},"restore")," function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"cy.clock().invoke('restore')\n")),(0,o.kt)("h3",{id:"Assertions"},"Assertions"),(0,o.kt)("p",null,"Once you have a ",(0,o.kt)("inlineCode",{parentName:"p"},"stub")," or a ",(0,o.kt)("inlineCode",{parentName:"p"},"spy")," in hand, you can then create assertions about\nthem."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const user = {\n  getName: (arg) => {\n    return arg\n  },\n\n  updateEmail: (arg) => {\n    return arg\n  },\n\n  fail: () => {\n    throw new Error('fail whale')\n  },\n}\n\n// force user.getName() to return \"Jane\"\ncy.stub(user, 'getName').returns('Jane Lane')\n\n// spy on updateEmail but do not change its behavior\ncy.spy(user, 'updateEmail')\n\n// spy on fail but do not change its behavior\ncy.spy(user, 'fail')\n\n// invoke getName\nconst name = user.getName(123)\n\n// invoke updateEmail\nconst email = user.updateEmail('jane@devs.com')\n\ntry {\n  // invoke fail\n  user.fail()\n} catch (e) {}\n\nexpect(name).to.eq('Jane Lane') // true\nexpect(user.getName).to.be.calledOnce // true\nexpect(user.getName).not.to.be.calledTwice // true\nexpect(user.getName).to.be.calledWith(123)\nexpect(user.getName).to.be.calledWithExactly(123) // true\nexpect(user.getName).to.be.calledOn(user) // true\n\nexpect(email).to.eq('jane@devs.com') // true\nexpect(user.updateEmail).to.be.calledWith('jane@devs.com') // true\nexpect(user.updateEmail).to.have.returned('jane@devs.com') // true\n\nexpect(user.fail).to.have.thrown('Error') // true\n")),(0,o.kt)("h2",{id:"Integration-and-Extensions"},"Integration and Extensions"),(0,o.kt)("p",null,"Beyond integrating these tools together, we have also extended and improved\ncollaboration between these tools."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Some examples:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"We replaced Sinon's argument stringifier for a much less noisy, more\nperformant, custom version."),(0,o.kt)("li",{parentName:"ul"},"We improved the ",(0,o.kt)("inlineCode",{parentName:"li"},"sinon-chai")," assertion output by changing what is displayed\nduring a passing vs. failing test."),(0,o.kt)("li",{parentName:"ul"},"We added aliasing support to ",(0,o.kt)("inlineCode",{parentName:"li"},"stub")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"spy")," APIs."),(0,o.kt)("li",{parentName:"ul"},"We automatically restore and tear down ",(0,o.kt)("inlineCode",{parentName:"li"},"stub"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"spy"),", and ",(0,o.kt)("inlineCode",{parentName:"li"},"clock")," between\ntests.")),(0,o.kt)("p",null,"We also integrated all of these APIs directly into the Command Log, so you can\nvisually see what's happening in your application."),(0,o.kt)("p",null,"We visually indicate when:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("inlineCode",{parentName:"li"},"stub")," is called"),(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("inlineCode",{parentName:"li"},"spy")," is called"),(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("inlineCode",{parentName:"li"},"clock")," is ticked")),(0,o.kt)("p",null,"When you use aliasing with the ",(0,o.kt)("a",{parentName:"p",href:"/api/commands/as"},(0,o.kt)("inlineCode",{parentName:"a"},".as()"))," command, we also\ncorrelate those aliases with the calls. This works identically to aliasing\n",(0,o.kt)("a",{parentName:"p",href:"/api/commands/intercept"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.intercept()")),"."),(0,o.kt)("p",null,"When stubs are created by calling the method ",(0,o.kt)("inlineCode",{parentName:"p"},".withArgs(...)")," we also visually\nlink these together."),(0,o.kt)("p",null,"When you click on a stub or spy, we also output ",(0,o.kt)("strong",{parentName:"p"},"remarkably")," helpful debugging\ninformation."),(0,o.kt)("p",null,"For instance we automatically display:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The call count (and the total number of calls)"),(0,o.kt)("li",{parentName:"ul"},"The arguments, without transforming them (they are the real arguments)"),(0,o.kt)("li",{parentName:"ul"},"The return value of the function"),(0,o.kt)("li",{parentName:"ul"},"The context the function was invoked with")),(0,o.kt)("h2",{id:"See-also"},"See also"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://example.cypress.io/commands/spies-stubs-clocks"},"Spies, stubs, and clocks"),"\nexamples"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://glebbahmutov.com/blog/stub-navigator-api/"},"Stub navigator API in end-to-end tests")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.cypress.io/blog/2019/02/28/shrink-the-untestable-code-with-app-actions-and-effects/"},"Shrink the Untestable Code With App Actions And Effects")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.cypress.io/blog/2021/02/23/cy-intercept-and-cy-clock/"},"Testing periodic network requests with cy.intercept and cy.clock combination"))))}d.isMDXComponent=!0}}]);