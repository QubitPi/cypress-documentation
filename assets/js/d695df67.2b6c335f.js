"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[1662],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,l=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),c=u(n),d=i,h=c["".concat(l,".").concat(d)]||c[d]||m[d]||s;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,o=new Array(s);o[0]=d;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r[c]="string"==typeof e?e:i,o[1]=r;for(var u=2;u<s;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5750:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>b,frontMatter:()=>s,metadata:()=>r,toc:()=>u});var a=n(7462),i=(n(7294),n(3905));const s={title:"GitHub Actions"},o=void 0,r={unversionedId:"guides/continuous-integration/github-actions",id:"guides/continuous-integration/github-actions",title:"GitHub Actions",description:"What you'll learn",source:"@site/docs/guides/continuous-integration/github-actions.mdx",sourceDirName:"guides/continuous-integration",slug:"/guides/continuous-integration/github-actions",permalink:"/cypress-documentation/guides/continuous-integration/github-actions",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/guides/continuous-integration/github-actions.mdx",tags:[],version:"current",lastUpdatedAt:1696481464,formattedLastUpdatedAt:"Oct 5, 2023",frontMatter:{title:"GitHub Actions"},sidebar:"guides",previous:{title:"CircleCI",permalink:"/cypress-documentation/guides/continuous-integration/circleci"},next:{title:"GitLab CI",permalink:"/cypress-documentation/guides/continuous-integration/gitlab-ci"}},l={},u=[{value:"Cypress GitHub Action",id:"Cypress-GitHub-Action",level:2},{value:"Version Number Selection",id:"Version-Number-Selection",level:3},{value:"Basic Setup",id:"Basic-Setup",level:2},{value:"Testing on GitHub with Installed Browsers",id:"Testing-on-GitHub-with-Installed-Browsers",level:2},{value:"Testing with Cypress Docker Images",id:"Testing-with-Cypress-Docker-Images",level:2},{value:"Caching Dependencies and Build Artifacts",id:"Caching-Dependencies-and-Build-Artifacts",level:2},{value:"Parallelization",id:"Parallelization",level:2},{value:"Install Job",id:"Install-Job",level:3},{value:"Worker Jobs",id:"Worker-Jobs",level:3},{value:"Setting up Parallelization",id:"Setting-up-Parallelization",level:4},{value:"Specifying Browsers in Parallel Builds",id:"Specifying-Browsers-in-Parallel-Builds",level:3},{value:"Using Cypress Cloud with GitHub Actions",id:"Using-Cypress-Cloud-with-GitHub-Actions",level:2},{value:"Cypress Real World Example with GitHub Actions",id:"Cypress-Real-World-Example-with-GitHub-Actions",level:2},{value:"Common Problems and Solutions",id:"Common-Problems-and-Solutions",level:2},{value:"Re-run jobs passing with empty tests",id:"Re-run-jobs-passing-with-empty-tests",level:3},{value:"Pull requests commit message is <code>merge SHA into SHA</code>",id:"Pull-requests-commit-message-is-merge-SHA-into-SHA",level:3},{value:"See also",id:"See-also",level:2}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",t)},c=p("Icon"),m=p("DocsVideo"),d=p("DocsImage"),h={toc:u};function b(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("h2",{parentName:"admonition",id:"What-youll-learn"},(0,i.kt)(c,{name:"graduation-cap",mdxType:"Icon"})," What you'll learn"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"How to run Cypress tests with GitHub Actions as part of a CI/CD pipeline"),(0,i.kt)("li",{parentName:"ul"},"How to parallelize Cypress test runs within GitHub Actions"),(0,i.kt)("li",{parentName:"ul"},"How to cache build artifacts between installation jobs and worker jobs"))),(0,i.kt)(m,{src:"https://youtube.com/embed/videoseries?list=PL8GlT7H3xOcLJMIPhxlZ8W9kgbeMqW7cH",mdxType:"DocsVideo"}),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("h2",{parentName:"admonition",id:"GitHub-Actions--Cypress-Screencasts"},"GitHub Actions + Cypress Screencasts"),(0,i.kt)("ol",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://youtu.be/USX6AntcPyg"},"What is Continuous Integration?")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://youtu.be/N0TOFWy1Xvg"},"Actions & Workflows")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://youtu.be/zGrAhZkCoUE"},"Example App Overview")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://youtu.be/vVr7DXDdUks"},"Understanding how to configure a workflow")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://youtu.be/23ZGSrmbV_4"},"Running Tests in GitHub Actions CI/CD Workflow")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://youtu.be/Oqq-_QZWzhg"},"Debugging Test Failures in CI")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://youtu.be/96Yn_IiQUJI"},"Running Tests in Parallel")))),(0,i.kt)("p",null,"GitHub offers developers ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/features/actions"},"Actions")," that\nprovide a way to ",(0,i.kt)("strong",{parentName:"p"},"automate, customize, and execute your software development\nworkflows")," within your GitHub repository. Detailed documentation is available\nin the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions"},"GitHub Action Documentation"),"."),(0,i.kt)("h2",{id:"Cypress-GitHub-Action"},"Cypress GitHub Action"),(0,i.kt)(m,{src:"https://youtube.com/embed/N0TOFWy1Xvg",mdxType:"DocsVideo"}),(0,i.kt)("p",null,"Workflows can be packaged and shared as\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/features/actions"},"GitHub Actions"),". GitHub maintains many,\nsuch as the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/marketplace/actions/checkout"},"checkout")," and\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/guides/storing-workflow-data-as-artifacts"},"Upload/Download Artifact Actions"),"\nactions used below."),(0,i.kt)("p",null,"The official\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/marketplace/actions/cypress-io"},"Cypress GitHub Action")," is\nmaintained by Cypress and our community to help ease the setup of Cypress in a\nGitHub Action. The action provides dependency installation (via npm, yarn, or\npnpm), built-in caching of Node dependencies, and additional configuration\noptions for advanced workflows."),(0,i.kt)("h3",{id:"Version-Number-Selection"},"Version Number Selection"),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("strong",null,"GitHub Action Version Number"),(0,i.kt)("p",{parentName:"admonition"},"We recommend binding to the action's latest major version by specifying ",(0,i.kt)("inlineCode",{parentName:"p"},"v6"),"\nwhen using the action.")),(0,i.kt)("p",null,"For Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"jobs:\n  cypress-run:\n    steps:\n      uses: cypress-io/github-action@v6\n")),(0,i.kt)("p",null,"Alternatively, as a mitigation strategy for unforeseen breaks, bind to a\nspecific\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/github-action/releases"},"release version tag"),", for\nexample ",(0,i.kt)("inlineCode",{parentName:"p"},"cypress-io/github-action@v6.1.0"),". Read the\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/github-action#action-version"},"Cypress GitHub Action documentation"),"\nfor more information."),(0,i.kt)("h2",{id:"Basic-Setup"},"Basic Setup"),(0,i.kt)(m,{src:"https://youtube.com/embed/vVr7DXDdUks",mdxType:"DocsVideo"}),(0,i.kt)("p",null,"The example below is a basic CI setup and job using the\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/marketplace/actions/cypress-io"},"Cypress GitHub Action")," to\nrun Cypress tests within the Electron browser. This GitHub Action configuration\nis placed within ",(0,i.kt)("inlineCode",{parentName:"p"},".github/workflows/main.yml"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Cypress Tests\n\non: push\n\njobs:\n  cypress-run:\n    runs-on: ubuntu-22.04\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n      # Install NPM dependencies, cache them correctly\n      # and run all Cypress tests\n      - name: Cypress run\n        uses: cypress-io/github-action@v6\n        with:\n          build: npm run build\n          start: npm start\n")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("strong",null,"Try it out"),(0,i.kt)("p",{parentName:"admonition"},"To try out the example above yourself, fork the\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress-example-kitchensink"},"Cypress Kitchen Sink"),"\nexample project and place the above GitHub Action configuration in a newly\ncreated ",(0,i.kt)("inlineCode",{parentName:"p"},"main.yml")," file within ",(0,i.kt)("inlineCode",{parentName:"p"},".github/workflows/"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"How this action works:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"On ",(0,i.kt)("em",{parentName:"li"},"push")," to this repository, this job will provision and start a\nGitHub-hosted Ubuntu Linux instance to run the outlined ",(0,i.kt)("inlineCode",{parentName:"li"},"steps")," for the\ndeclared ",(0,i.kt)("inlineCode",{parentName:"li"},"cypress-run")," job within the ",(0,i.kt)("inlineCode",{parentName:"li"},"jobs")," section of the configuration."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/marketplace/actions/checkout"},"GitHub checkout Action"),"\nis used to check out our code from our GitHub repository."),(0,i.kt)("li",{parentName:"ul"},"Finally, our Cypress GitHub Action will:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Install npm dependencies"),(0,i.kt)("li",{parentName:"ul"},"Build the project (",(0,i.kt)("inlineCode",{parentName:"li"},"npm run build"),")"),(0,i.kt)("li",{parentName:"ul"},"Start the project web server (",(0,i.kt)("inlineCode",{parentName:"li"},"npm start"),")"),(0,i.kt)("li",{parentName:"ul"},"Run the Cypress tests within our GitHub repository within Electron.")))),(0,i.kt)("h2",{id:"Testing-on-GitHub-with-Installed-Browsers"},"Testing on GitHub with Installed Browsers"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/actions/runner-images"},"GitHub-hosted runners")," offer images\nwith pre-installed browsers to use for testing. The ",(0,i.kt)("inlineCode",{parentName:"p"},"ubuntu")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"windows"),"\nrunners each include Google Chrome, Mozilla Firefox, and Microsoft Edge\npre-installed. The ",(0,i.kt)("inlineCode",{parentName:"p"},"macos")," runners additionally include Apple Safari. Refer to\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/actions/runner-images/blob/main/README.md"},"GitHub Actions Runner Images"),"\nfor current details."),(0,i.kt)("p",null,"Use the action's ",(0,i.kt)("inlineCode",{parentName:"p"},"browser")," parameter to select the desired browser. To change\nthe above example to select Chrome instead of the default browser Electron, add\n",(0,i.kt)("inlineCode",{parentName:"p"},"browser: chrome")," as follows."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"- name: Cypress run\n  uses: cypress-io/github-action@v6\n  with:\n    build: npm run build\n    start: npm start\n    browser: chrome\n")),(0,i.kt)("p",null,"For more examples, see the action's\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/github-action#browser"},"Browser")," section."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"If you are specifying a browser in a parallel job, see\n",(0,i.kt)("a",{parentName:"p",href:"#Specifying-Browsers-in-Parallel-Builds"},"Specifying Browsers in Parallel Builds"),"\nfor more info on how to avoid errors during runs due to GitHub runner images\nbeing updated with the latest browsers.")),(0,i.kt)("h2",{id:"Testing-with-Cypress-Docker-Images"},"Testing with Cypress Docker Images"),(0,i.kt)("p",null,"GitHub Actions provides the option to specify a container image for the job.\nCypress offers various\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress-docker-images"},"Docker Images")," for running\nCypress locally and in CI."),(0,i.kt)("p",null,"Below we extend the previous example by adding the ",(0,i.kt)("inlineCode",{parentName:"p"},"container")," attribute using a\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress-docker-images"},"Cypress Docker Image"),"\nbuilt with Google Chrome ",(0,i.kt)("inlineCode",{parentName:"p"},"106"),". Specifying a browser version allows our tests to\nexecute without any influence from browser version changes in the GitHub runner\nimage."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Cypress Tests using Cypress Docker Image\n\non: push\n\njobs:\n  cypress-run:\n    runs-on: ubuntu-22.04\n    container:\n      image: cypress/browsers:node18.12.0-chrome106-ff106\n      options: --user 1001\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n      - name: Cypress run\n        uses: cypress-io/github-action@v6\n        with:\n          build: npm run build\n          start: npm start\n          browser: chrome\n")),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"If you are testing with Firefox, you must specify the non-root user ",(0,i.kt)("inlineCode",{parentName:"p"},"1001")," as above. Refer to ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress-docker-images#firefox-not-found"},"Firefox not found")," for more information.")),(0,i.kt)("h2",{id:"Caching-Dependencies-and-Build-Artifacts"},"Caching Dependencies and Build Artifacts"),(0,i.kt)("p",null,'When working with actions that have multiple jobs, it is recommended to have an\ninitial "install" job that will download any dependencies and build your app,\nand then cache these assets for use later by subsequent jobs.'),(0,i.kt)("p",null,"The Cypress GitHub Action will automatically cache and restore your Node\ndependencies for you."),(0,i.kt)("p",null,"For build assets, you will need to cache and restore them manually."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"install")," job below uses the\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/marketplace/actions/upload-a-build-artifact"},"upload-artifact"),"\naction and saves the state of the ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," directory for the ",(0,i.kt)("inlineCode",{parentName:"p"},"cypress-run")," worker\njob."),(0,i.kt)("p",null,"The\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/marketplace/actions/download-a-build-artifact"},"download-artifact"),"\naction retrieves the ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," directory saved in the ",(0,i.kt)("inlineCode",{parentName:"p"},"install")," job, as seen below\nin the ",(0,i.kt)("inlineCode",{parentName:"p"},"cypress-run")," worker job."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Cypress Tests with Dependency and Artifact Caching\n\non: push\n\njobs:\n  install:\n    runs-on: ubuntu-22.04\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Cypress install\n        uses: cypress-io/github-action@v6\n        with:\n          # Disable running of tests within install job\n          runTests: false\n          build: npm run build\n\n      - name: Save build folder\n        uses: actions/upload-artifact@v3\n        with:\n          name: build\n          if-no-files-found: error\n          path: build\n\n  cypress-run:\n    runs-on: ubuntu-22.04\n    needs: install\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Download the build folder\n        uses: actions/download-artifact@v3\n        with:\n          name: build\n          path: build\n\n      - name: Cypress run\n        uses: cypress-io/github-action@v6\n        with:\n          start: npm start\n          browser: chrome\n")),(0,i.kt)("p",null,"View GitHub's guide on\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/guides/storing-workflow-data-as-artifacts"},"Storing workflow data as artifacts"),"\nfor more info."),(0,i.kt)("h2",{id:"Parallelization"},"Parallelization"),(0,i.kt)(m,{src:"https://youtube.com/embed/96Yn_IiQUJI",mdxType:"DocsVideo"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/guides/cloud/introduction"},"Cypress Cloud")," offers the ability to\n",(0,i.kt)("a",{parentName:"p",href:"/guides/cloud/smart-orchestration/parallelization"},"parallelize and group test runs"),"\nalong with additional insights and ",(0,i.kt)("a",{parentName:"p",href:"/guides/cloud/analytics"},"analytics")," for\nCypress tests."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Using parallelization with the Cypress GitHub Action requires setting up\nrecording to ",(0,i.kt)("a",{parentName:"p",href:"https://on.cypress.io/cloud"},"Cypress Cloud"),"."),(0,i.kt)("p",{parentName:"admonition"},"In general, it is a good strategy to confine all CI/CD logics, including tests, in one realm. To have everything\ncontained in GitHub Action, please use this\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/QubitPi/github-management#cypress-e2e-tests-in-parallel-with-spec-file-granularity"},"reusable workflow"),"\nas an alternative to the Cypress Cloud")),(0,i.kt)("p",null,"GitHub Actions offers a\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstrategymatrix"},"matrix strategy"),"\nfor declaring different job configurations for a single job definition. Jobs\ndeclared within a matrix strategy can run in parallel, which enables us to run\nmultiples instances of Cypress at the same time, as we will see later in this\nsection."),(0,i.kt)("p",null,"Before diving into an example of a parallelization setup, it is important to\nunderstand the two different types of GitHub Action jobs that we will declare:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Install Job"),": A job that installs and caches dependencies that will be used\nby subsequent jobs later in the GitHub Action workflow."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Worker Job"),": A job that handles the execution of Cypress tests and depends\non the ",(0,i.kt)("em",{parentName:"li"},"install job"),".")),(0,i.kt)("h3",{id:"Install-Job"},"Install Job"),(0,i.kt)("p",null,"The separation of installation from test running is necessary when running\nparallel jobs. It allows for the reuse of various build steps aided by caching."),(0,i.kt)("p",null,"First, we'll define the ",(0,i.kt)("inlineCode",{parentName:"p"},"install")," step that will be used by the worker jobs\ndefined in the matrix strategy."),(0,i.kt)("p",null,"For the ",(0,i.kt)("inlineCode",{parentName:"p"},"steps"),", notice that we pass ",(0,i.kt)("inlineCode",{parentName:"p"},"runTests: false")," to the Cypress GitHub\nAction to instruct it only to install and cache Cypress and npm dependencies\n",(0,i.kt)("em",{parentName:"p"},"without running the tests"),"."),(0,i.kt)("p",null,"The\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/marketplace/actions/upload-a-build-artifact"},"upload-artifact"),"\naction will save the state of the ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," directory for the worker jobs."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Cypress Tests\n\non: push\n\njobs:\n  install:\n    runs-on: ubuntu-22.04\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Cypress install\n        uses: cypress-io/github-action@v6\n        with:\n          # Disable running of tests within install job\n          runTests: false\n          build: npm run build\n\n      - name: Save build folder\n        uses: actions/upload-artifact@v3\n        with:\n          name: build\n          if-no-files-found: error\n          path: dist\n")),(0,i.kt)("h3",{id:"Worker-Jobs"},"Worker Jobs"),(0,i.kt)("p",null,'Next, we define the worker job named "cypress-run" that will run Cypress tests\nas part of a parallelized matrix strategy.'),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"download-artifact")," action will retrieve the ",(0,i.kt)("strong",{parentName:"p"},"dist")," directory saved in the\ninstall job."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Cypress Tests\n\non: push\n\njobs:\n  install:\n  # ... omitted install job from above\n\n  cypress-run:\n    runs-on: ubuntu-22.04\n    needs: install\n    strategy:\n      # don't fail the entire matrix on failure\n      fail-fast: false\n      matrix:\n        # run copies of the current job in parallel\n        containers: [1, 2, 3, 4, 5]\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Download the build folder\n        uses: actions/download-artifact@v3\n        with:\n          name: build\n\n      - name: Cypress run\n        uses: cypress-io/github-action@v6\n        with:\n          record: true\n          parallel: true\n          group: 'UI-Chrome'\n          start: npm start\n")),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("strong",null,"Ensure Correct Container"),(0,i.kt)("p",{parentName:"admonition"},"If a docker container was used in the install job, the same docker container\nmust also be used in the worker jobs.")),(0,i.kt)("h4",{id:"Setting-up-Parallelization"},"Setting up Parallelization"),(0,i.kt)("p",null,"To set up multiple containers to run in parallel, the matrix option of the\nstrategy configuration can be set to containers: ","[1, 2, 3, 4, 5]",", where the\nnumber of items defined in the containers array will be how many instances of\nthe job will start up."),(0,i.kt)("p",null,"For instance, ",(0,i.kt)("inlineCode",{parentName:"p"},"containers: [1, 2, 3, 4, 5]")," will provision five worker instances\nto run in parallel. For our purposes, the array's values are arbitrary and\naren't used in the steps."),(0,i.kt)("h3",{id:"Specifying-Browsers-in-Parallel-Builds"},"Specifying Browsers in Parallel Builds"),(0,i.kt)("p",null,"If you specify a browser in parallel mode, we recommend using a\n",(0,i.kt)("a",{parentName:"p",href:"#Testing-with-Cypress-Docker-Images"},"Cypress Docker image")," to pin the browser\nversion used."),(0,i.kt)("p",null,"When GitHub updates the browsers in their runner images, not all runners get the\nnew version simultaneously. Your test run might fail if Cypress Cloud detects\ndifferences in the runners between parallel jobs. The Docker image helps ensure\nthe browser is consistent during an image upgrade."),(0,i.kt)("h2",{id:"Using-Cypress-Cloud-with-GitHub-Actions"},"Using Cypress Cloud with GitHub Actions"),(0,i.kt)(m,{src:"https://youtube.com/embed/Oqq-_QZWzhg",mdxType:"DocsVideo"}),(0,i.kt)("p",null,"In the GitHub Actions configuration, we have defined in the previous section, we\nare leveraging three useful features of\n",(0,i.kt)("a",{parentName:"p",href:"/guides/cloud/introduction"},"Cypress Cloud"),":"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://on.cypress.io/how-do-i-record-runs"},"Recording test results with the ",(0,i.kt)("inlineCode",{parentName:"a"},"record: true")," option"),"\nto ",(0,i.kt)("a",{parentName:"p",href:"https://on.cypress.io/cloud"},"Cypress Cloud"),":"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"In-depth and shareable\n",(0,i.kt)("a",{parentName:"li",href:"/guides/cloud/recorded-runs#Latest-Runs"},"test reports"),"."),(0,i.kt)("li",{parentName:"ul"},"Visibility into test failures via quick access to ",(0,i.kt)("a",{parentName:"li",href:"/guides/cloud/test-replay"},"Test Replay"),", error messages, stack\ntraces, screenshots, videos, and contextual details."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/guides/cloud/integrations/source-control/github"},"Integrating testing with the pull-request (PR) process"),"\nvia\n",(0,i.kt)("a",{parentName:"li",href:"/guides/cloud/integrations/source-control/github#Status-checks"},"commit status check guards"),"\nand convenient\n",(0,i.kt)("a",{parentName:"li",href:"/guides/cloud/integrations/source-control/github#Pull-request-comments"},"test report comments"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/guides/cloud/flaky-test-management"},"Detecting flaky tests")," and surfacing\nthem via ",(0,i.kt)("a",{parentName:"li",href:"/guides/cloud/flaky-test-management#Slack"},"Slack alerts")," or\n",(0,i.kt)("a",{parentName:"li",href:"/guides/cloud/flaky-test-management#GitHub"},"GitHub PR status checks"),"."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/guides/cloud/smart-orchestration/parallelization"},"Parallelizing test runs"),"\nand optimizing their execution via\n",(0,i.kt)("a",{parentName:"p",href:"/guides/cloud/smart-orchestration/load-balancing#Balance-strategy"},"intelligent load-balancing"),"\nof test specs across CI machines with the ",(0,i.kt)("inlineCode",{parentName:"p"},"parallel: true")," option.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Organizing and consolidating multiple ",(0,i.kt)("inlineCode",{parentName:"p"},"cypress run")," calls by labeled groups\ninto a single report within ",(0,i.kt)("a",{parentName:"p",href:"https://on.cypress.io/cloud"},"Cypress Cloud"),". In\nthe example above, we use the ",(0,i.kt)("inlineCode",{parentName:"p"},'group: "UI-Chrome"'),' option to organize all\nUI tests for the Chrome browser into a group labeled "UI - Chrome" in the\n',(0,i.kt)("a",{parentName:"p",href:"https://on.cypress.io/cloud"},"Cypress Cloud")," report."))),(0,i.kt)("h2",{id:"Cypress-Real-World-Example-with-GitHub-Actions"},"Cypress Real World Example with GitHub Actions"),(0,i.kt)("p",null,"A complete CI workflow against multiple browsers, viewports, and operating\nsystems is available in the ",(0,i.kt)("strong",{parentName:"p"},"Cypress Real World App"),"."),(0,i.kt)("p",null,"Clone the ",(0,i.kt)(c,{name:"github",inline:"true",contentType:"rwa",mdxType:"Icon"})," and refer to\nthe\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress-realworld-app/blob/develop/.github/workflows/main.yml"},".github/workflows/main.yml"),"\nfile."),(0,i.kt)(d,{src:"/img/guides/github-actions/rwa-run-matrix.png",alt:"Cypress Real World App GitHub Actions Matrix",mdxType:"DocsImage"}),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"To see additional how-to examples, you can also refer to our\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/github-action"},"Cypress GitHub Action repo"),".")),(0,i.kt)("h2",{id:"Common-Problems-and-Solutions"},"Common Problems and Solutions"),(0,i.kt)("h3",{id:"Re-run-jobs-passing-with-empty-tests"},"Re-run jobs passing with empty tests"),(0,i.kt)("p",null,"We recommend passing the ",(0,i.kt)("inlineCode",{parentName:"p"},"GITHUB_TOKEN")," secret (created by the GH Action\nautomatically) as an environment variable. This will allow the accurate\nidentification of each build to avoid confusion when re-running a build."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"name: Cypress tests\non: push\njobs:\n  cypress-run:\n    name: Cypress run\n    runs-on: ubuntu-22.04\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Cypress run\n        uses: cypress-io/github-action@v6\n        with:\n          record: true\n        env:\n          # pass GitHub token to detect new build vs re-run build\n          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}\n")),(0,i.kt)("h3",{id:"Pull-requests-commit-message-is-merge-SHA-into-SHA"},"Pull requests commit message is ",(0,i.kt)("inlineCode",{parentName:"h3"},"merge SHA into SHA")),(0,i.kt)("p",null,"You can overwrite the commit message sent to Cypress Cloud by setting an\nenvironment variable. See\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/github-action/issues/124"},"Issue #124")," for more\ndetails."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"name: Cypress tests\non: push\njobs:\n  cypress-run:\n    name: Cypress run\n    runs-on: ubuntu-22.04\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Cypress run\n        uses: cypress-io/github-action@v6\n        with:\n          record: true\n        env:\n          # overwrite commit message sent to Cypress Cloud\n          COMMIT_INFO_MESSAGE: ${{github.event.pull_request.title}}\n          # re-enable PR comment bot\n          COMMIT_INFO_SHA: ${{github.event.pull_request.head.sha}}\n")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"We also recommend adding ",(0,i.kt)("inlineCode",{parentName:"p"},"COMMIT_INFO_SHA")," to re-enable\n",(0,i.kt)("a",{parentName:"p",href:"https://on.cypress.io/github#Pull-request-comments"},"Cypress bot PR comments"),".\nSee\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/github-action/issues/124#issuecomment-716584972"},"this comment"),"\nfor more details.")),(0,i.kt)("h2",{id:"See-also"},"See also"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=gokM_zEmWLA"},"Test anything that runs in the browser with Cypress and GitHub Actions"))))}b.isMDXComponent=!0}}]);