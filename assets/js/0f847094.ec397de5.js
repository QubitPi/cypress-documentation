"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[8600],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),c=r,h=u["".concat(s,".").concat(c)]||u[c]||m[c]||o;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7192:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={title:"Tutorial Videos",sidebar_position:20},i=void 0,l={unversionedId:"examples/tutorials",id:"examples/tutorials",title:"Tutorial Videos",description:"Best Practices",source:"@site/docs/examples/tutorials.mdx",sourceDirName:"examples",slug:"/examples/tutorials",permalink:"/cypress-documentation/examples/tutorials",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/examples/tutorials.mdx",tags:[],version:"current",lastUpdatedAt:1702621628,formattedLastUpdatedAt:"Dec 15, 2023",sidebarPosition:20,frontMatter:{title:"Tutorial Videos",sidebar_position:20},sidebar:"examples",previous:{title:"Recipes",permalink:"/cypress-documentation/examples/recipes"},next:{title:"Applications",permalink:"/cypress-documentation/examples/applications"}},s={},p=[{value:"Best Practices",id:"Best-Practices",level:2},{value:"Video playlists",id:"Video-playlists",level:2},{value:"Test a React Todo App",id:"Test-a-React-Todo-App",level:2},{value:"1. Project setup",id:"1-Project-setup",level:3},{value:"2. Text inputs",id:"2-Text-inputs",level:3},{value:"3. Form submission and XHRs",id:"3-Form-submission-and-XHRs",level:3},{value:"4. Loading data with fixtures",id:"4-Loading-data-with-fixtures",level:3},{value:"5. Todo item behavior",id:"5-Todo-item-behavior",level:3},{value:"6. Toggling and debugging",id:"6-Toggling-and-debugging",level:3},{value:"7. Filters and data-driven tests",id:"7-Filters-and-data-driven-tests",level:3},{value:"8. Full end-to-end tests part 1",id:"8-Full-end-to-end-tests-part-1",level:3},{value:"9. Full end-to-end tests part 2",id:"9-Full-end-to-end-tests-part-2",level:3}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},u=d("Icon"),m=d("DocsVideo"),c={toc:p};function h(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"Best-Practices"},"Best Practices"),(0,r.kt)("p",null,"This video by the creator of Cypress Brian Mann shows what we consider the best\npractices for writing tests for a realistic application."),(0,r.kt)("p",null,'First we\'ll test our "Login Page", refactor, and then create a\n',(0,r.kt)("a",{parentName:"p",href:"/api/cypress-api/custom-commands"},"Custom Command"),". From there we'll use\n",(0,r.kt)("a",{parentName:"p",href:"/api/commands/request"},(0,r.kt)("inlineCode",{parentName:"a"},"cy.request()"))," to programmatically log in. Finally,\nwe'll discuss approaches for taking shortcuts by controlling your application's\nstate directly, and for writing your tests ",(0,r.kt)("strong",{parentName:"p"},"in isolation")," to prevent specs\nfrom being coupled together or having to share knowledge."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Tutorial"),(0,r.kt)("th",{parentName:"tr",align:null},"Length"),(0,r.kt)("th",{parentName:"tr",align:null},"Release date"),(0,r.kt)("th",{parentName:"tr",align:null},"Cypress version"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.youtube.com/watch?v=5XQOK0v_YRE"},"Organizing Tests, Logging In, Controlling State")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(u,{name:"video",mdxType:"Icon"})," 27:21"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("time",{datetime:"2018-02-22T16:00:00.000Z"},"02-22-2018")),(0,r.kt)("td",{parentName:"tr",align:null},"2.1.0")))),(0,r.kt)("h2",{id:"Video-playlists"},"Video playlists"),(0,r.kt)("p",null,"Learn how to use Cypress to solve specific testing problems from the videos in\nthe playlists below."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.youtube.com/cypress_io"},"Official Cypress.io YouTube Channel")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.youtube.com/playlist?list=PLzDWIPKHyNmK9NX9_ng2IdrkEr8L4WwB0"},"Cypress.io - end-to-end Testing Framework"),"\nby ",(0,r.kt)("a",{parentName:"li",href:"https://twitter.com/imBushraAlam"},"Bushra Alam")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.youtube.com/playlist?list=PLP9o9QNnQuAYYRpJzDNWpeuOVTwxmIxcI"},"Cypress Tips & Tricks"),"\nby ",(0,r.kt)("a",{parentName:"li",href:"https://twitter.com/bahmutov"},"Gleb Bahmutov")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.youtube.com/playlist?list=PLP9o9QNnQuAa50lwW3cUql5sgdKIWkapp"},"Cypress Component Testing for Svelte"),"\nby ",(0,r.kt)("a",{parentName:"li",href:"https://twitter.com/bahmutov"},"Gleb Bahmutov")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.youtube.com/playlist?list=PLP9o9QNnQuAYhotnIDEUQNXuvXL7ZmlyZ"},"Visually testing React component using open source tools"),"\nby ",(0,r.kt)("a",{parentName:"li",href:"https://twitter.com/bahmutov"},"Gleb Bahmutov"))),(0,r.kt)("p",null,"You can also find free Cypress video tutorials on the\n",(0,r.kt)("a",{parentName:"p",href:"/examples/media/courses-media"},"Courses")," page."),(0,r.kt)("h2",{id:"Test-a-React-Todo-App"},"Test a React Todo App"),(0,r.kt)("p",null,'In this tutorial, we will walk through building a "Todo" application in\n',(0,r.kt)("a",{parentName:"p",href:"https://reactjs.org"},"React")," while testing it with Cypress. We will look at ways\nwe can use Cypress to not only create a test suite for our application, but help\nus write our tests and guide feature implementation."),(0,r.kt)("p",null,"By the end of this tutorial, you will have a feel for what it is like to test\nyour application with Cypress while implementing features. You will gain\nexperience with many of the Cypress ",(0,r.kt)("a",{parentName:"p",href:"/api/commands/and"},"commands")," and see how\nCypress can help you build your application while creating a great safety net of\ntests along the way."),(0,r.kt)("p",null,"We have a lot of ground to cover, so let's get started!"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Contents:"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Tutorial"),(0,r.kt)("th",{parentName:"tr",align:null},"Length"),(0,r.kt)("th",{parentName:"tr",align:null},"Release date"),(0,r.kt)("th",{parentName:"tr",align:null},"Cypress version"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1. ",(0,r.kt)("a",{parentName:"td",href:"#1-Project-setup"},"Project setup")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(u,{name:"video",mdxType:"Icon"})," 3:52"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("time",{datetime:"2017-11-01T16:00:00.000Z"},"11-01-2017")),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2. ",(0,r.kt)("a",{parentName:"td",href:"#2-Text-inputs"},"Testing inputs")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(u,{name:"video",mdxType:"Icon"})," 7:17"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("time",{datetime:"2017-11-01T16:00:00.000Z"},"11-01-2017")),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3. ",(0,r.kt)("a",{parentName:"td",href:"#3-Form-submission-and-XHRs"},"Form submission and XHRs")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(u,{name:"video",mdxType:"Icon"})," 10:21"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("time",{datetime:"2017-11-04T10:45:00.000Z"},"11-04-2017")),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4. ",(0,r.kt)("a",{parentName:"td",href:"#4-Loading-data-with-fixtures"},"Loading data with fixtures")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(u,{name:"video",mdxType:"Icon"})," 9:00"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("time",{datetime:"2017-11-08T16:00:00.000Z"},"11-08-2017")),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5. ",(0,r.kt)("a",{parentName:"td",href:"#5-Todo-item-behavior"},"Todo item behavior")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(u,{name:"video",mdxType:"Icon"})," 8:19"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("time",{datetime:"2017-11-20T16:00:00.000Z"},"11-20-2017")),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"6. ",(0,r.kt)("a",{parentName:"td",href:"#6-Toggling-and-debugging"},"Toggling and debugging")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(u,{name:"video",mdxType:"Icon"})," 9:05"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("time",{datetime:"2017-11-20T16:00:00.000Z"},"11-20-2017")),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"7. ",(0,r.kt)("a",{parentName:"td",href:"#7-Filters-and-data-driven-tests"},"Filters and data-driven tests")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(u,{name:"video",mdxType:"Icon"})," 11:39"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("time",{datetime:"2017-11-29T16:00:00.000Z"},"11-29-2017")),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"8. ",(0,r.kt)("a",{parentName:"td",href:"#8-Full-end-to-end-tests-part-1"},"Full end-to-end tests part 1")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(u,{name:"video",mdxType:"Icon"})," 8:59"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("time",{datetime:"2017-12-07T16:00:00.000Z"},"12-07-2017")),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9. ",(0,r.kt)("a",{parentName:"td",href:"#9-Full-end-to-end-tests-part-2"},"Full end-to-end tests part 2")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(u,{name:"video",mdxType:"Icon"})," 7:04"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("time",{datetime:"2017-12-07T16:00:00.000Z"},"12-07-2017")),(0,r.kt)("td",{parentName:"tr",align:null},"1.0.2")))),(0,r.kt)("h3",{id:"1-Project-setup"},"1. Project setup"),(0,r.kt)("p",null,"We will start by cloning a starter\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress-tutorial-build-todo-starter"},"repository"),".\nThis repo already has the build and server configuration handled. We will take a\nlook at the project's ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/"},(0,r.kt)("inlineCode",{parentName:"a"},"npm"))," dependencies and scripts,\nthen jump right into getting Cypress up and running."),(0,r.kt)(u,{name:"github",contentType:"lesson",url:"https://github.com/cypress-io/cypress-tutorial-build-todo/tree/01_setup",mdxType:"Icon"}),(0,r.kt)(m,{src:"https://vimeo.com/240554515",mdxType:"DocsVideo"}),(0,r.kt)("h3",{id:"2-Text-inputs"},"2. Text inputs"),(0,r.kt)("p",null,"We will work through creating our first real test and implementing the feature\nunder test as we go. We will see how to find and interact with elements on the\npage and how to make assertions about their behavior. We will also look into\nsome best practices like using ",(0,r.kt)("inlineCode",{parentName:"p"},"beforeEach")," and defining our application's\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#Global"},"baseUrl")," to remove duplicated code."),(0,r.kt)(u,{name:"github",contentType:"lesson",url:"https://github.com/cypress-io/cypress-tutorial-build-todo/tree/02_inputs",mdxType:"Icon"}),(0,r.kt)(m,{src:"https://vimeo.com/240554808",mdxType:"DocsVideo"}),(0,r.kt)("h3",{id:"3-Form-submission-and-XHRs"},"3. Form submission and XHRs"),(0,r.kt)("p",null,"We will implement form submission for our todo app, leveraging ",(0,r.kt)("inlineCode",{parentName:"p"},"cy.server()")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"cy.route()")," to stub calls to our API. We will iterate on our test and\nimplementation, focusing on the application's \"happy path\" first. Once our form\nis working, we'll use another stubbed XHR call to setup a failure scenario and\nimplement the code to properly display an error message."),(0,r.kt)(u,{name:"github",contentType:"lesson",url:"https://github.com/cypress-io/cypress-tutorial-build-todo/tree/03_form_sub",mdxType:"Icon"}),(0,r.kt)(m,{src:"https://vimeo.com/241063147",mdxType:"DocsVideo"}),(0,r.kt)("h3",{id:"4-Loading-data-with-fixtures"},"4. Loading data with fixtures"),(0,r.kt)("p",null,"We will implement the initial data load for our todo app, leveraging\n",(0,r.kt)("inlineCode",{parentName:"p"},"cy.server()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"cy.route()")," to stub the API call to load our data. We will\nuse ",(0,r.kt)("a",{parentName:"p",href:"/api/commands/fixture#Shortcuts"},"fixture data")," to seed our application\nstate. As we iterate on our test and app code, we will create and use a\n",(0,r.kt)("a",{parentName:"p",href:"/api/cypress-api/custom-commands"},"custom command")," to avoid unnecessary code\nduplication and keep our tests clean and readable."),(0,r.kt)("p",null,"We will be using this list of todo objects to stub our XHR calls. For\nconvenience, you can copy it from here and paste it in as you follow along."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "id": 1,\n    "name": "Buy Milk",\n    "isComplete": false\n  },\n  {\n    "id": 2,\n    "name": "Buy Eggs",\n    "isComplete": false\n  },\n  {\n    "id": 3,\n    "name": "Buy Bread",\n    "isComplete": false\n  },\n  {\n    "id": 4,\n    "name": "Make French Toast",\n    "isComplete": false\n  }\n]\n')),(0,r.kt)(u,{name:"github",contentType:"lesson",url:"https://github.com/cypress-io/cypress-tutorial-build-todo/tree/04_custom_cmd",mdxType:"Icon"}),(0,r.kt)(m,{src:"https://vimeo.com/241773142",mdxType:"DocsVideo"}),(0,r.kt)("h3",{id:"5-Todo-item-behavior"},"5. Todo item behavior"),(0,r.kt)("p",null,"We will update our app to properly display todo items based on their\n",(0,r.kt)("inlineCode",{parentName:"p"},"isComplete")," property, adding tests to verify the proper behavior as we go. From\nthere, we'll test and implement the item deletion functionality. We will cover\ninteracting with an element that is hidden unless hovered over and look at\ndifferent ways of handling this situation. We'll also look at the appropriate\nway to hold onto references to previously queried DOM elements using\n",(0,r.kt)("a",{parentName:"p",href:"/api/commands/as"},(0,r.kt)("inlineCode",{parentName:"a"},".as()"))," to create aliases."),(0,r.kt)(u,{name:"github",contentType:"lesson",url:"https://github.com/cypress-io/cypress-tutorial-build-todo/tree/05_todo_items",mdxType:"Icon"}),(0,r.kt)(m,{src:"https://vimeo.com/242954792",mdxType:"DocsVideo"}),(0,r.kt)("h3",{id:"6-Toggling-and-debugging"},"6. Toggling and debugging"),(0,r.kt)("p",null,"We will create a test for todo item toggling. As we implement the toggle\nfeature, we will encounter a problem with our code and look at how Cypress can\nhelp us debug our code. We will use the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/core-concepts/cypress-app#Command-Log"},"Cypress Command Log")," to narrow\ndown our problem. Then, we can use the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/debugging#Using-the-Developer-Tools"},"Developer Tools right in Cypress"),"\nto step through the code to dig into the issue. We'll even see how we can update\napplication state while debugging and let our test confirm our theory about the\ncause of the bug. Once the debugging is complete, we will refactor our code to\nbe less error prone, relying on the test to help us get it right."),(0,r.kt)(u,{name:"github",contentType:"lesson",url:"https://github.com/cypress-io/cypress-tutorial-build-todo/tree/06_toggle_debug",mdxType:"Icon"}),(0,r.kt)(m,{src:"https://vimeo.com/242961930",mdxType:"DocsVideo"}),(0,r.kt)("h3",{id:"7-Filters-and-data-driven-tests"},"7. Filters and data-driven tests"),(0,r.kt)("p",null,"We will test the application's footer behavior. First, we will ensure that our\nfooter properly displays singular or plural text, based on the number of\nremaining todos. From there, we will test and implement the list filtering\nfeature. We will create a test for one of the filters and see how to wire up\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ReactTraining/react-router"},"React Router")," to make our filter\nlinks work. We will then look at how we can use standard JavaScript data\nstructures to drive multiple assertions in our test, allowing us to test\nmultiple variations of the filter behavior in a single test."),(0,r.kt)(u,{name:"github",contentType:"lesson",url:"https://github.com/cypress-io/cypress-tutorial-build-todo/tree/07_data_driven",mdxType:"Icon"}),(0,r.kt)(m,{src:"https://vimeo.com/244696145",mdxType:"DocsVideo"}),(0,r.kt)("h3",{id:"8-Full-end-to-end-tests-part-1"},"8. Full end-to-end tests part 1"),(0,r.kt)("p",null,"We will connect our back end API to the front end we've been building. Once we\nhave the back end API connected, then we will create our first true end-to-end\ntest. Using the back end API, we will ensure a consistent starting state by\ndeleting any existing data from the database. Then we will test that our\napplication can create and save new todos without a stubbed back end. We will\nalso see how we can listen to and ",(0,r.kt)("a",{parentName:"p",href:"/api/commands/wait"},(0,r.kt)("inlineCode",{parentName:"a"},"cy.wait()"))," for XHR\nresponses in our tests to avoid flake caused by unpredictable response times."),(0,r.kt)(u,{name:"github",contentType:"lesson",url:"https://github.com/cypress-io/cypress-tutorial-build-todo/tree/08_smoke_1",mdxType:"Icon"}),(0,r.kt)(m,{src:"https://vimeo.com/245387683",mdxType:"DocsVideo"}),(0,r.kt)("h3",{id:"9-Full-end-to-end-tests-part-2"},"9. Full end-to-end tests part 2"),(0,r.kt)("p",null,"We will continue building on our full end-to-end tests, this time seeding the\ndatabase to test our application against a populated database. We will repeat\nthe pattern of adding ",(0,r.kt)("a",{parentName:"p",href:"/api/commands/wait"},(0,r.kt)("inlineCode",{parentName:"a"},"cy.wait()"))," commands to our tests to\nensure our back end has responded before moving on. Once we have tests for\ndeleting and updating items against a real back end, we will see how to run our\nCypress tests using ",(0,r.kt)("inlineCode",{parentName:"p"},"cypress run"),", giving us an ideal setup for running our\ntests in a CI environment."),(0,r.kt)(u,{name:"github",contentType:"lesson",url:"https://github.com/cypress-io/cypress-tutorial-build-todo/tree/09_smoke_2",mdxType:"Icon"}),(0,r.kt)(m,{src:"https://vimeo.com/245388948",mdxType:"DocsVideo"}))}h.isMDXComponent=!0}}]);