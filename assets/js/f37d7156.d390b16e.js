"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[378],{3905:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>m});var t=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=t.createContext({}),l=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},c=function(e){var n=l(e.components);return t.createElement(p.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,s=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),u=l(r),f=i,m=u["".concat(p,".").concat(f)]||u[f]||d[f]||s;return r?t.createElement(m,o(o({ref:n},c),{},{components:r})):t.createElement(m,o({ref:n},c))}));function m(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=r.length,o=new Array(s);o[0]=f;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a[u]="string"==typeof e?e:i,o[1]=a;for(var l=2;l<s;l++)o[l]=r[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3477:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var t=r(7462),i=(r(7294),r(3905));const s={title:"Before Run API"},o=void 0,a={unversionedId:"api/plugins/before-run-api",id:"api/plugins/before-run-api",title:"Before Run API",description:"The before:run event fires before a run starts. When running cypress via",source:"@site/docs/api/plugins/before-run-api.mdx",sourceDirName:"api/plugins",slug:"/api/plugins/before-run-api",permalink:"/cypress-documentation/api/plugins/before-run-api",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/plugins/before-run-api.mdx",tags:[],version:"current",frontMatter:{title:"Before Run API"},sidebar:"api",previous:{title:"After Spec API",permalink:"/cypress-documentation/api/plugins/after-spec-api"},next:{title:"Before Spec API",permalink:"/cypress-documentation/api/plugins/before-spec-api"}},p={},l=[{value:"Syntax",id:"Syntax",level:2},{value:"Usage",id:"Usage",level:2},{value:"Log the browser and the number of specs that will be run",id:"Log-the-browser-and-the-number-of-specs-that-will-be-run",level:3},{value:"See also",id:"See-also",level:2}],c=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",n)},u=c("WarningSetupNodeEvents"),d=c("CypressConfigFileTabs"),f=c("Icon"),m={toc:l};function g(e){let{components:n,...r}=e;return(0,i.kt)("wrapper",(0,t.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"before:run")," event fires before a run starts. When running cypress via\n",(0,i.kt)("inlineCode",{parentName:"p"},"cypress open"),", the event will fire when opening a project."),(0,i.kt)("p",null,"The event will fire each time ",(0,i.kt)("inlineCode",{parentName:"p"},"cypress run")," executes. As a result, if running\nyour specs in ",(0,i.kt)("a",{parentName:"p",href:"/guides/guides/parallelization"},"parallel"),", the event will fire\nonce for each machine on which the tests are run."),(0,i.kt)("h2",{id:"Syntax"},"Syntax"),(0,i.kt)(u,{mdxType:"WarningSetupNodeEvents"}),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"\u26a0\ufe0f When running via ",(0,i.kt)("inlineCode",{parentName:"p"},"cypress open"),", the ",(0,i.kt)("inlineCode",{parentName:"p"},"before:run")," event only fires if the\n",(0,i.kt)("a",{parentName:"p",href:"/guides/references/configuration#Experiments"},"experimentalInteractiveRunEvents flag"),"\nis enabled.")),(0,i.kt)("cypress-config-plugin-example",null,(0,i.kt)(d,{mdxType:"CypressConfigFileTabs"},(0,i.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('before:run', (details) => {\n        /* ... */\n      })\n    },\n  },\n})\n")),(0,i.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('before:run', (details) => {\n        /* ... */\n      })\n    },\n  },\n})\n")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(f,{name:"angle-right",mdxType:"Icon"})," details")," ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"(Object)"))),(0,i.kt)("p",null,"Details of the run, including the project config, system information, and the\nversion of Cypress. More details are included when running via ",(0,i.kt)("inlineCode",{parentName:"p"},"cypress run"),"."),(0,i.kt)("h2",{id:"Usage"},"Usage"),(0,i.kt)("p",null,"You can return a promise from the ",(0,i.kt)("inlineCode",{parentName:"p"},"before:run")," event handler and it will be\nawaited before Cypress proceeds running your specs."),(0,i.kt)("h3",{id:"Log-the-browser-and-the-number-of-specs-that-will-be-run"},"Log the browser and the number of specs that will be run"),(0,i.kt)("cypress-config-plugin-example",null,(0,i.kt)(d,{mdxType:"CypressConfigFileTabs"},(0,i.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('before:run', (details) => {\n        // details will look something like this when run via `cypress run`:\n        // {\n        //   config: {\n        //     projectId: '12345',\n        //     baseUrl: 'http://example.com/',\n        //     viewportWidth: 1000,\n        //     viewportHeight: 660,\n        //     // ...more properties...\n        //   },\n        //   browser: {\n        //     name: 'electron',\n        //     version: '59.0.3071.115',\n        //     // ...more properties...\n        //   },\n        //   system: {\n        //     osName: 'darwin',\n        //     osVersion: '16.7.0',\n        //   }\n        //   cypressVersion: '6.1.0',\n        //   specs: [\n        //     {\n        //       name: 'login_cy.js',\n        //       relative: 'cypress/e2e/login_cy.js',\n        //       absolute: '/Users/janelane/app/cypress/e2e/login_cy.js',\n        //     },\n        //     // ... more specs\n        //   ],\n        //   specPattern: [\n        //     '**/*.cy.{js,jsx,ts,tsx}'\n        //   ],\n        //   parallel: false,\n        //   group: 'group-1',\n        //   tag: 'tag-1'\n        // }\n        // details will look something like this when run via `cypress open`:\n        // {\n        //   config: {\n        //     projectId: '12345',\n        //     baseUrl: 'http://example.com/',\n        //     viewportWidth: 1000,\n        //     viewportHeight: 660,\n        //     // ...more properties...\n        //   },\n        //   system: {\n        //     osName: 'darwin',\n        //     osVersion: '16.7.0',\n        //   }\n        //   cypressVersion: '7.0.0'\n        // }\n        if (details.specs && details.browser) {\n          // details.specs and details.browser will be undefined in interactive mode\n          console.log(\n            'Running',\n            details.specs.length,\n            'specs in',\n            details.browser.name\n          )\n        }\n      })\n    },\n  },\n})\n")),(0,i.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('before:run', (details) => {\n        // details will look something like this when run via `cypress run`:\n        // {\n        //   config: {\n        //     projectId: '12345',\n        //     baseUrl: 'http://example.com/',\n        //     viewportWidth: 1000,\n        //     viewportHeight: 660,\n        //     // ...more properties...\n        //   },\n        //   browser: {\n        //     name: 'electron',\n        //     version: '59.0.3071.115',\n        //     // ...more properties...\n        //   },\n        //   system: {\n        //     osName: 'darwin',\n        //     osVersion: '16.7.0',\n        //   }\n        //   cypressVersion: '6.1.0',\n        //   specs: [\n        //     {\n        //       name: 'login_cy.js',\n        //       relative: 'cypress/e2e/login_cy.js',\n        //       absolute: '/Users/janelane/app/cypress/e2e/login_cy.js',\n        //     },\n        //     // ... more specs\n        //   ],\n        //   specPattern: [\n        //     '**/*.cy.{js,jsx,ts,tsx}'\n        //   ],\n        //   parallel: false,\n        //   group: 'group-1',\n        //   tag: 'tag-1'\n        // }\n        // details will look something like this when run via `cypress open`:\n        // {\n        //   config: {\n        //     projectId: '12345',\n        //     baseUrl: 'http://example.com/',\n        //     viewportWidth: 1000,\n        //     viewportHeight: 660,\n        //     // ...more properties...\n        //   },\n        //   system: {\n        //     osName: 'darwin',\n        //     osVersion: '16.7.0',\n        //   }\n        //   cypressVersion: '7.0.0'\n        // }\n        if (details.specs && details.browser) {\n          // details.specs and details.browser will be undefined in interactive mode\n          console.log(\n            'Running',\n            details.specs.length,\n            'specs in',\n            details.browser.name\n          )\n        }\n      })\n    },\n  },\n})\n")))),(0,i.kt)("h2",{id:"See-also"},"See also"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/plugins/after-run-api"},"After Run API")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/plugins/before-spec-api"},"Before Spec API")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/plugins/after-spec-api"},"After Spec API")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/guides/tooling/plugins-guide"},"Plugins Guide")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/plugins/writing-a-plugin"},"Writing a Plugin"))))}g.isMDXComponent=!0}}]);