"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[8743],{8846:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>r,toc:()=>m});var t=o(5893),s=o(1151);const a={title:"mount | Cypress Documentation",description:"Set up a mount command in your support file for Cypress Component Testing",sidebar_label:"mount",slug:"/api/commands/mount",componentSpecific:!0},i="mount",r={id:"api/commands/mount",title:"mount | Cypress Documentation",description:"Set up a mount command in your support file for Cypress Component Testing",source:"@site/docs/api/commands/mount.mdx",sourceDirName:"api/commands",slug:"/api/commands/mount",permalink:"/api/commands/mount",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/commands/mount.mdx",tags:[],version:"current",lastUpdatedAt:1749520976,formattedLastUpdatedAt:"Jun 10, 2025",frontMatter:{title:"mount | Cypress Documentation",description:"Set up a mount command in your support file for Cypress Component Testing",sidebar_label:"mount",slug:"/api/commands/mount",componentSpecific:!0},sidebar:"api",previous:{title:"log",permalink:"/api/commands/log"},next:{title:"next",permalink:"/api/commands/next"}},c={},m=[{value:"Creating a New <code>cy.mount()</code> Command",id:"Creating-a-New-cymount-Command",level:2},{value:"Adding TypeScript Typings for <code>cy.mount()</code> Commands",id:"Adding-TypeScript-Typings-for-cymount-Commands",level:2},{value:"Additional Mount Command Examples",id:"Additional-Mount-Command-Examples",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...n.components},{ImportMountFunctions:o,ProductHeading:a,TabItem:i,Tabs:r}=e;return o||p("ImportMountFunctions",!0),a||p("ProductHeading",!0),i||p("TabItem",!0),r||p("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a,{product:"app"}),"\n",(0,t.jsx)(e.h1,{id:"mount",children:"mount"}),"\n",(0,t.jsxs)(e.p,{children:["Cypress does not have a built-in ",(0,t.jsx)(e.code,{children:"cy.mount()"})," command. The command must be set\nup in your support file. By default, when you use Cypress to configure your\nproject, one will be automatically scaffolded for you."]}),"\n",(0,t.jsxs)(e.p,{children:["This guide covers how to customize the ",(0,t.jsx)(e.code,{children:"cy.mount()"})," command to fit the needs of\nyour app."]}),"\n",(0,t.jsxs)(e.p,{children:["We recommend setting up a custom ",(0,t.jsx)(e.code,{children:"cy.mount()"})," command instead of importing the\nmount command from the mounting libraries. Doing so offers a few advantages:"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["You don't need to import the mount command into every test as the ",(0,t.jsx)(e.code,{children:"cy.mount()"}),"\ncommand is available globally."]}),"\n",(0,t.jsxs)(e.li,{children:["You can set up common scenarios that you usually have to do in each test, like\nwrapping a component in a\n",(0,t.jsx)(e.a,{href:"https://reactjs.org/docs/context.html",children:"React Provider"})," or adding\n",(0,t.jsx)(e.a,{href:"https://vuejs.org/v2/guide/plugins.html",children:"Vue plugins"}),"."]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"Let's take a look at how to implement the command."}),"\n",(0,t.jsxs)(e.h2,{id:"Creating-a-New-cymount-Command",children:["Creating a New ",(0,t.jsx)(e.code,{children:"cy.mount()"})," Command"]}),"\n",(0,t.jsx)(o,{}),"\n",(0,t.jsxs)(e.p,{children:["To use ",(0,t.jsx)(e.code,{children:"cy.mount()"}),", add a ",(0,t.jsx)(e.a,{href:"/api/cypress-api/custom-commands",children:"custom command"})," to\nthe commands file using\n",(0,t.jsx)(e.a,{href:"/api/cypress-api/custom-commands",children:(0,t.jsx)(e.code,{children:"Cypress.Commands.add()"})}),". Below are examples\nto start with for your commands:"]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)(i,{value:"React",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"import { mount } from 'cypress/react'\n\nCypress.Commands.add('mount', (component, options) => {\n  // Wrap any parent components needed\n  // ie: return mount(<MyProvider>{component}</MyProvider>, options)\n  return mount(component, options)\n})\n"})})}),(0,t.jsx)(i,{value:"Vue",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"import { mount } from 'cypress/vue'\n\nCypress.Commands.add('mount', (component, options = {}) => {\n  // Setup options object\n  options.global = options.global || {}\n  options.global.stubs = options.global.stubs || {}\n  options.global.stubs['transition'] = false\n  options.global.components = options.global.components || {}\n  options.global.plugins = options.global.plugins || []\n\n  /* Add any global plugins */\n  // options.global.plugins.push({\n  //   install(app) {\n  //     app.use(MyPlugin);\n  //   },\n  // });\n\n  /* Add any global components */\n  // options.global.components['Button'] = Button;\n\n  return mount(component, options)\n})\n"})})}),(0,t.jsx)(i,{value:"Angular",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"import { mount } from 'cypress/angular'\n\nCypress.Commands.add('mount', (component, config) => {\n  return mount(component, config)\n})\n"})})})]}),"\n",(0,t.jsxs)(e.h2,{id:"Adding-TypeScript-Typings-for-cymount-Commands",children:["Adding TypeScript Typings for ",(0,t.jsx)(e.code,{children:"cy.mount()"})," Commands"]}),"\n",(0,t.jsxs)(e.p,{children:["When working in\n",(0,t.jsx)(e.a,{href:"/app/tooling/typescript-support",children:"TypeScript"}),", you\nwill need to add custom typings for your commands to get code completion and to\navoid any TypeScript errors."]}),"\n",(0,t.jsxs)(e.p,{children:["The typings need to be in a location that any code can access, therefore, we\nrecommend creating a ",(0,t.jsx)(e.code,{children:"cypress.d.ts"})," file in the root directory, and use this\nexample as a starting point for customizing your own command:"]}),"\n",(0,t.jsxs)(r,{children:[(0,t.jsx)(i,{value:"React",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:"import { mount } from 'cypress/react'\n\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      mount: typeof mount\n    }\n  }\n}\n"})})}),(0,t.jsx)(i,{value:"Vue",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:"import { mount } from 'cypress/vue'\n\ntype MountParams = Parameters<typeof mount>\ntype OptionsParam = MountParams[1]\n\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      mount: typeof mount\n    }\n  }\n}\n"})})}),(0,t.jsx)(i,{value:"Angular",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:"import { mount } from 'cypress/angular'\n\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      mount: typeof mount\n    }\n  }\n}\n"})})})]}),"\n",(0,t.jsxs)(e.p,{children:["If your tests have trouble finding the types for the custom commands, manually\ninclude the ",(0,t.jsx)(e.code,{children:"cypress.d.ts"})," file in all your ",(0,t.jsx)(e.code,{children:"tsconfig.json"})," files like so:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",children:'"include": ["./src", "cypress.d.ts"]\n'})}),"\n",(0,t.jsx)(e.h2,{id:"Additional-Mount-Command-Examples",children:"Additional Mount Command Examples"}),"\n",(0,t.jsxs)(e.p,{children:["Visit the guides for scenarios in\n",(0,t.jsx)(e.a,{href:"/app/component-testing/react/examples",children:"React"}),",\n",(0,t.jsx)(e.a,{href:"/app/component-testing/vue/examples",children:"Vue"}),",\n",(0,t.jsx)(e.a,{href:"/app/component-testing/angular/examples",children:"Angular"}),", and\n",(0,t.jsx)(e.a,{href:"/app/component-testing/svelte/examples",children:"Svelte"})," for customizing a mount\ncommand."]})]})}function l(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}function p(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(n,e,o)=>{o.d(e,{Z:()=>r,a:()=>i});var t=o(7294);const s={},a=t.createContext(s);function i(n){const e=t.useContext(a);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),t.createElement(a.Provider,{value:e},n.children)}}}]);