"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[6845],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>g});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},f=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(t),f=r,g=c["".concat(l,".").concat(f)]||c[f]||d[f]||i;return t?a.createElement(g,o(o({ref:n},u),{},{components:t})):a.createElement(g,o({ref:n},u))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=f;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[c]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},2926:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const i={title:"Writing a Plugin"},o=void 0,s={unversionedId:"api/plugins/writing-a-plugin",id:"api/plugins/writing-a-plugin",title:"Writing a Plugin",description:"The Plugins API allows you to hook into and extend Cypress behavior.",source:"@site/docs/api/plugins/writing-a-plugin.mdx",sourceDirName:"api/plugins",slug:"/api/plugins/writing-a-plugin",permalink:"/api/plugins/writing-a-plugin",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/plugins/writing-a-plugin.mdx",tags:[],version:"current",lastUpdatedAt:1717543864,formattedLastUpdatedAt:"Jun 4, 2024",frontMatter:{title:"Writing a Plugin"},sidebar:"api",previous:{title:"Preprocessors API",permalink:"/api/plugins/preprocessors-api"}},l={},p=[{value:"Plugins API",id:"Plugins-API",level:2},{value:"on",id:"on",level:3},{value:"config",id:"config",level:3},{value:"List of events",id:"List-of-events",level:3},{value:"The following events are available:",id:"The-following-events-are-available",level:4},{value:"Execution context",id:"Execution-context",level:2},{value:"npm modules",id:"npm-modules",level:3},{value:"Error handling",id:"Error-handling",level:2},{value:"File changes",id:"File-changes",level:2}],u=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",n)},c=u("WarningPluginsFile"),d=u("CypressConfigFileTabs"),f={toc:p};function g(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The Plugins API allows you to hook into and extend Cypress behavior."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"Note:")," This document assumes you have read the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/tooling/plugins-guide"},"Plugins Guide"),".")),(0,r.kt)(c,{mdxType:"WarningPluginsFile"}),(0,r.kt)("h2",{id:"Plugins-API"},"Plugins API"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#setupNodeEvents"},(0,r.kt)("inlineCode",{parentName:"a"},"setupNodeEvents")),"\nfunction (or deprecated ",(0,r.kt)("a",{parentName:"p",href:"/guides/references/legacy-configuration#Plugins"},"plugins file")," function) receives 2\narguments: ",(0,r.kt)("a",{parentName:"p",href:"#on"},(0,r.kt)("inlineCode",{parentName:"a"},"on"))," and ",(0,r.kt)("a",{parentName:"p",href:"#config"},(0,r.kt)("inlineCode",{parentName:"a"},"config")),". It can return a synchronous\nvalue or can also return a Promise, which will be awaited until it resolves.\nThis enables you to perform asynchronous actions such as reading files in from\nthe filesystem."),(0,r.kt)("p",null,"If you return or resolve with an object, Cypress will then merge this object\ninto the ",(0,r.kt)("inlineCode",{parentName:"p"},"config")," which enables you to overwrite configuration or environment\nvariables."),(0,r.kt)("cypress-config-plugin-example",null,(0,r.kt)(d,{mdxType:"CypressConfigFileTabs"},(0,r.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      // configure plugins here\n    },\n  },\n})\n")),(0,r.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      // configure plugins here\n    },\n  },\n})\n")))),(0,r.kt)("h3",{id:"on"},"on"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"on")," is a function that you will use to register listeners on various ",(0,r.kt)("strong",{parentName:"p"},"events"),"\nthat Cypress exposes."),(0,r.kt)("p",null,"Registering to listen on an event looks like this:"),(0,r.kt)("cypress-config-plugin-example",null,(0,r.kt)(d,{mdxType:"CypressConfigFileTabs"},(0,r.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('<event>', (arg1, arg2) => {\n        // plugin stuff here\n      })\n    },\n  },\n})\n")),(0,r.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('<event>', (arg1, arg2) => {\n        // plugin stuff here\n      })\n    },\n  },\n})\n")))),(0,r.kt)("p",null,"Each event documents its own argument signature. To understand how to use them,\nplease ",(0,r.kt)("a",{parentName:"p",href:"#List-of-events"},"refer to the docs for each one"),"."),(0,r.kt)("h3",{id:"config"},"config"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"config")," is the resolved\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration"},"Cypress configuration")," of the opened project."),(0,r.kt)("p",null,"This configuration contains all of the values that get passed into the browser\nfor your project."),(0,r.kt)("p",null,"Some plugins may utilize or require these values, so they can take certain\nactions based on the configuration. If these values are programmatically\nmodified, Cypress will use the new values."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"config")," object also includes the following extra values that are not part\nof the standard configuration. ",(0,r.kt)("strong",{parentName:"p"},"These values are read only and cannot be\nmodified from the plugins file.")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"configFile"),": The absolute path to the\n",(0,r.kt)("a",{parentName:"li",href:"/guides/references/configuration"},"Cypress configuration file"),". See the\n",(0,r.kt)("a",{parentName:"li",href:"/guides/guides/command-line#cypress-open"},"--config-file")," and\n",(0,r.kt)("a",{parentName:"li",href:"/guides/guides/module-api"},"configFile")," docs for more information on this\nvalue."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"projectRoot"),": The absolute path to the root of the project (e.g.\n",(0,r.kt)("inlineCode",{parentName:"li"},"/Users/me/dev/my-project"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"version"),": The version number of Cypress. This can be used to handle breaking\nchanges."))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/api/plugins/configuration-api"},"Please check out our API docs for modifying configuration here.")),(0,r.kt)("h3",{id:"List-of-events"},"List of events"),(0,r.kt)("h4",{id:"The-following-events-are-available"},"The following events are available:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Event"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/plugins/after-run-api"},(0,r.kt)("inlineCode",{parentName:"a"},"after:run"))),(0,r.kt)("td",{parentName:"tr",align:null},"Occurs after the run is finished.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/plugins/after-screenshot-api"},(0,r.kt)("inlineCode",{parentName:"a"},"after:screenshot"))),(0,r.kt)("td",{parentName:"tr",align:null},"Occurs after a screenshot is taken.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/plugins/after-spec-api"},(0,r.kt)("inlineCode",{parentName:"a"},"after:spec"))),(0,r.kt)("td",{parentName:"tr",align:null},"Occurs after a spec is finished running.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/plugins/browser-launch-api"},(0,r.kt)("inlineCode",{parentName:"a"},"before:browser:launch"))),(0,r.kt)("td",{parentName:"tr",align:null},"Occurs immediately before launching a browser.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/plugins/before-run-api"},(0,r.kt)("inlineCode",{parentName:"a"},"before:run"))),(0,r.kt)("td",{parentName:"tr",align:null},"Occurs before the run starts.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/plugins/before-spec-api"},(0,r.kt)("inlineCode",{parentName:"a"},"before:spec"))),(0,r.kt)("td",{parentName:"tr",align:null},"Occurs when a spec is about to be run.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/plugins/preprocessors-api"},(0,r.kt)("inlineCode",{parentName:"a"},"file:preprocessor"))),(0,r.kt)("td",{parentName:"tr",align:null},"Occurs when a spec or spec-related file needs to be transpiled for the browser.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/api/commands/task"},(0,r.kt)("inlineCode",{parentName:"a"},"task"))),(0,r.kt)("td",{parentName:"tr",align:null},"Occurs in conjunction with the ",(0,r.kt)("inlineCode",{parentName:"td"},"cy.task")," command.")))),(0,r.kt)("h2",{id:"Execution-context"},"Execution context"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#setupNodeEvents"},(0,r.kt)("inlineCode",{parentName:"a"},"setupNodeEvents")),"\nfunction (or deprecated ",(0,r.kt)("a",{parentName:"p",href:"/guides/references/legacy-configuration#Plugins"},"plugins file")," function) is invoked\nwhen Cypress opens a project."),(0,r.kt)("p",null,"Cypress does this by spawning an independent ",(0,r.kt)("inlineCode",{parentName:"p"},"child_process")," which then\n",(0,r.kt)("inlineCode",{parentName:"p"},"requires")," the ",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration"},"Cypress configuration file"),".\nThis is similar to the way Visual Studio Code or Atom works."),(0,r.kt)("p",null,"This code will be executed using the the Node version that launched Cypress."),(0,r.kt)("h3",{id:"npm-modules"},"npm modules"),(0,r.kt)("p",null,"When Cypress executes the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#setupNodeEvents"},(0,r.kt)("inlineCode",{parentName:"a"},"setupNodeEvents"))," function\n(or deprecated ",(0,r.kt)("a",{parentName:"p",href:"/guides/references/legacy-configuration#Plugins"},"plugins file")," function) it will execute with\n",(0,r.kt)("inlineCode",{parentName:"p"},"process.cwd()")," set to your project's path. Additionally - you will be able to\n",(0,r.kt)("inlineCode",{parentName:"p"},"require")," ",(0,r.kt)("strong",{parentName:"p"},"any node module")," you have installed, including local files inside\nyour project."),(0,r.kt)("p",null,"For example, if your ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json")," looked like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "My Project",\n  "dependencies": {\n    "debug": "x.x.x"\n  },\n  "devDependencies": {\n    "lodash": "x.x.x"\n  }\n}\n')),(0,r.kt)("p",null,"Then you could do any of the following in your ",(0,r.kt)("inlineCode",{parentName:"p"},"setupNodeEvents")," function:"),(0,r.kt)("cypress-config-plugin-example",null,(0,r.kt)(d,{mdxType:"CypressConfigFileTabs"},(0,r.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      const _ = require('lodash') // yup, dev dependencies\n      const path = require('path') // yup, core node library\n      const debug = require('debug') // yup, dependencies\n      const User = require('./lib/models/user') // yup, relative local modules\n\n      console.log(__dirname) // /Users/janelane/Dev/my-project\n      console.log(process.cwd()) // /Users/janelane/Dev/my-project\n    },\n  },\n})\n")),(0,r.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      const _ = require('lodash') // yup, dev dependencies\n      const path = require('path') // yup, core node library\n      const debug = require('debug') // yup, dependencies\n      const User = require('./lib/models/user') // yup, relative local modules\n\n      console.log(__dirname) // /Users/janelane/Dev/my-project\n      console.log(process.cwd()) // /Users/janelane/Dev/my-project\n    },\n  },\n})\n")))),(0,r.kt)("h2",{id:"Error-handling"},"Error handling"),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration"},"Cypress configuration file")," is loaded in\nits own child process so it is isolated away from the context that Cypress\nitself runs in. That means you cannot accidentally modify or change Cypress's\nown execution in any way."),(0,r.kt)("p",null,"If your ",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#setupNodeEvents"},(0,r.kt)("inlineCode",{parentName:"a"},"setupNodeEvents")),"\nfunction (or deprecated ",(0,r.kt)("a",{parentName:"p",href:"/guides/references/legacy-configuration#Plugins"},"plugins file")," function) has an\nuncaught exception, an unhandled rejection from a promise, or a syntax error -\nCypress will automatically catch those and display them to you inside of the\nconsole and even in Cypress itself."),(0,r.kt)("p",null,"Errors in your ",(0,r.kt)("inlineCode",{parentName:"p"},"setupNodeEvents")," function ",(0,r.kt)("em",{parentName:"p"},"will not crash")," Cypress."),(0,r.kt)("h2",{id:"File-changes"},"File changes"),(0,r.kt)("p",null,"Normally when writing code in Node, you typically have to restart the process\nafter changing any files."),(0,r.kt)("p",null,"Cypress automatically watches your\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration"},"Cypress configuration file")," and any changes\nmade will take effect immediately. We will read the file in and execute the\nexported function again."),(0,r.kt)("p",null,"This enables you to iterate on plugin code even with Cypress already running."))}g.isMDXComponent=!0}}]);