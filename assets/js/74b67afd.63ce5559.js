"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[3148],{6585:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var n=t(5893),s=t(1151);const r={title:"Uniquely identify test elements | Cypress Accessibility",description:"Elements are uniquely identified across views and snapshots by their HTML attributes, location, and other signals in the DOM.",sidebar_label:"Element identification",sidebar_position:20},a="Element Identification",c={id:"accessibility/core-concepts/element-identification",title:"Uniquely identify test elements | Cypress Accessibility",description:"Elements are uniquely identified across views and snapshots by their HTML attributes, location, and other signals in the DOM.",source:"@site/docs/accessibility/core-concepts/element-identification.mdx",sourceDirName:"accessibility/core-concepts",slug:"/accessibility/core-concepts/element-identification",permalink:"/accessibility/core-concepts/element-identification",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/accessibility/core-concepts/element-identification.mdx",tags:[],version:"current",lastUpdatedAt:1750130633,formattedLastUpdatedAt:"Jun 17, 2025",sidebarPosition:20,frontMatter:{title:"Uniquely identify test elements | Cypress Accessibility",description:"Elements are uniquely identified across views and snapshots by their HTML attributes, location, and other signals in the DOM.",sidebar_label:"Element identification",sidebar_position:20},sidebar:"accessibility",previous:{title:"Run-level reports",permalink:"/accessibility/core-concepts/run-level-reports"},next:{title:"Inspect violation details",permalink:"/accessibility/core-concepts/inspecting-violation-details"}},o={},l=[{value:"Significant attributes for identification",id:"Significant-attributes-for-identification",level:2},{value:"Configuring element identification",id:"Configuring-element-identification",level:2},{value:"Attribute filters",id:"Attribute-filters",level:3},{value:"Significant attributes",id:"Significant-attributes",level:3}];function d(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components},{ProductHeading:t}=i;return t||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ProductHeading",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t,{product:"accessibility"}),"\n",(0,n.jsx)(i.h1,{id:"Element-Identification",children:"Element Identification"}),"\n",(0,n.jsx)(i.p,{children:"Cypress Accessibility uniquely identifies elements across views and snapshots using a combination of HTML attributes, location, and other signals in the DOM. Stable and unique identifiers are crucial for accurately tracking and de-duplicating elements throughout the various snapshots captured in your tests."}),"\n",(0,n.jsx)(i.p,{children:"This process replaces the underlying Axe-Core\xae library's default mechanism for identifying elements, which also uses strings but focusing on capturing a unique identifier for a given element in a specific DOM context. The default behavior does not account for situations where sometimes tens of thousands of Axe-Core\xae scans need to be merged together for a single run, or later compared based on different builds of the application. Both of these happen in Cypress Cloud, and are much more effective when the element identification process is controllable by the user and can be customized for your project."}),"\n",(0,n.jsx)(i.h2,{id:"Significant-attributes-for-identification",children:"Significant attributes for identification"}),"\n",(0,n.jsx)(i.p,{children:"Certain attributes are prioritized by Cypress Accessibility for element identification. These include:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"data-cy"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"data-test"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"data-testid"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"data-test-id"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"data-qa"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"row-id"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"id"})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.code,{children:"name"})}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"If you already have Test IDs or similar attributes in your application, Cypress Accessibility will pick these up and use them to recognize the same element in a new place for improved deduplication. This behavior itself is configurable as well, so that highly-dynamic Test IDs can be avoided, for example."}),"\n",(0,n.jsx)(i.h2,{id:"Configuring-element-identification",children:"Configuring element identification"}),"\n",(0,n.jsx)(i.p,{children:"Using these configuration properties helps you adjust the amount of deduplication Cypress will do to match what makes sense in your application. For example, a component-based Test ID might make a great identifier if the component renders static content, but the same exact test ID would be a poor identifier if the component renders different things everywhere - you might rather treat those instances as unique for accessibility purposes."}),"\n",(0,n.jsx)(i.h3,{id:"Attribute-filters",children:"Attribute filters"}),"\n",(0,n.jsx)(i.p,{children:"Exclude irrelevant or dynamically generated attributes to reduce noise in Cypress Accessibility reports. For example:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-json",children:'{\n  "attributeFilters": [\n    {\n      "attribute": "id",\n      "value": ":r.*:",\n      "include": false\n    }\n  ]\n}\n'})}),"\n",(0,n.jsxs)(i.p,{children:["Learn more about attribute filtering in the ",(0,n.jsx)(i.a,{href:"/accessibility/configuration/attributefilters",children:"Attribute Filters"})," guide."]}),"\n",(0,n.jsx)(i.h3,{id:"Significant-attributes",children:"Significant attributes"}),"\n",(0,n.jsx)(i.p,{children:"Define custom significant attributes to prioritize specific selectors that align with your application\u2019s structure. For example:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-json",children:'{\n  "significantAttributes": ["data-custom-id"]\n}\n'})}),"\n",(0,n.jsxs)(i.p,{children:["Refer to the ",(0,n.jsx)(i.a,{href:"/accessibility/configuration/significantattributes",children:"Significant Attributes"})," guide for detailed instructions."]})]})}function u(e={}){const{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,i,t)=>{t.d(i,{Z:()=>c,a:()=>a});var n=t(7294);const s={},r=n.createContext(s);function a(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);