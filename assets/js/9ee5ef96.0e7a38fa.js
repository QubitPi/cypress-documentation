"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[4788],{815:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var t=s(5893),i=s(1151);const o={title:"Social Authentication",slug:"/guides/end-to-end-testing/social-authentication"},c=void 0,a={id:"guides/end-to-end-testing/testing-strategies/social-authentication",title:"Social Authentication",description:"What you'll learn",source:"@site/docs/guides/end-to-end-testing/testing-strategies/social-authentication.mdx",sourceDirName:"guides/end-to-end-testing/testing-strategies",slug:"/guides/end-to-end-testing/social-authentication",permalink:"/guides/end-to-end-testing/social-authentication",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/guides/end-to-end-testing/testing-strategies/social-authentication.mdx",tags:[],version:"current",lastUpdatedAt:1728611023,formattedLastUpdatedAt:"Oct 11, 2024",frontMatter:{title:"Social Authentication",slug:"/guides/end-to-end-testing/social-authentication"},sidebar:"guides",previous:{title:"Okta Authentication",permalink:"/guides/end-to-end-testing/okta-authentication"},next:{title:"Working with GraphQL",permalink:"/guides/end-to-end-testing/working-with-graphql"}},r={},l=[{value:"<Icon></Icon> What you&#39;ll learn",id:"What-youll-learn",level:2},{value:"Application Setup",id:"Application-Setup",level:2},{value:"Setting up the Auth0 tenant",id:"Setting-up-the-Auth0-tenant",level:3},{value:"Setting up the application",id:"Setting-up-the-application",level:3},{value:"Testing with Cypress",id:"Testing-with-Cypress",level:2},{value:"Setting Auth0 app credentials in Cypress",id:"Setting-Auth0-app-credentials-in-Cypress",level:2},{value:"Login with <code>cy.origin()</code>",id:"Login-with-cyorigin",level:3},{value:"See also",id:"See-also",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components},{DocsVideo:s,Icon:o}=n;return s||p("DocsVideo",!0),o||p("Icon",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.h2,{id:"What-youll-learn",children:[(0,t.jsx)(o,{name:"graduation-cap"})," What you'll learn"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Log into your application via Google, Facebook, or Microsoft through the UI\nwith ",(0,t.jsx)(n.a,{href:"/api/commands/origin",children:(0,t.jsx)(n.code,{children:"cy.origin()"})})," using Auth0 social connections. The\nsame patterns will work with Github, LinkedIn, and others."]}),"\n",(0,t.jsxs)(n.li,{children:["Understanding ",(0,t.jsx)(n.a,{href:"/guides/references/best-practices#When-logging-in",children:"challenges"}),"\nwith social connections"]}),"\n"]})]}),"\n",(0,t.jsxs)(n.admonition,{type:"caution",children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(o,{name:"exclamation-triangle"})," ",(0,t.jsx)(n.strong,{children:"Not recommended in CI"})]}),(0,t.jsxs)(n.p,{children:["Cypress does ",(0,t.jsx)(n.strong,{children:"not"})," recommend testing social connection authentication as a\nprimary means of application authentication testing. This is due to the\n",(0,t.jsx)(n.a,{href:"/guides/references/best-practices#Potential-Challenges-Authenticating-with-Social-Platforms",children:"challenges"}),"\nmentioned in our\n",(0,t.jsx)(n.a,{href:"/guides/references/best-practices",children:"Best Practices Guide"}),"."]}),(0,t.jsx)(n.p,{children:"Relying on social authentication in CI will likely result in bot detection and\nin some cases, account suspension due to violating the provider's Terms of\nService."})]}),"\n",(0,t.jsx)(n.h2,{id:"Application-Setup",children:"Application Setup"}),"\n",(0,t.jsx)(n.p,{children:"For this guide, we are going to set up an application that uses Auth0 for Tenant\nwill have social connections set up for Google, Facebook, and Microsoft which\nwill authenticate users on our behalf to our application."}),"\n",(0,t.jsx)(n.h3,{id:"Setting-up-the-Auth0-tenant",children:"Setting up the Auth0 tenant"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["To get started, first create your free ",(0,t.jsx)(n.a,{href:"https://auth0.com/signup",children:"Auth0"}),"\naccount and select the ",(0,t.jsx)(n.code,{children:'"I am a new Auth0 User"'})," flow. This will have 4 steps:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Step 1: When configuring your Sample App, please select the\n",(0,t.jsx)(n.code,{children:"Single-Page App"})," for you platform and",(0,t.jsx)(n.code,{children:"React"})," for the technology."]}),"\n",(0,t.jsxs)(n.li,{children:["Step 2: For ",(0,t.jsx)(n.code,{children:"Social Connections"}),", please select Facebook, Microsoft, and\nGoogle"]}),"\n",(0,t.jsx)(n.li,{children:"Step 3: Click try login and verify the connections are set up properly"}),"\n",(0,t.jsxs)(n.li,{children:["Step 4: You can either download the sample on the ",(0,t.jsx)(n.code,{children:"Download Sample App"}),"\nbutton or clone it\n",(0,t.jsx)(n.a,{href:"https://github.com/auth0-samples/auth0-react-samples/tree/d5848ed710db85d6ef060731b296603c0eca744b/Sample-01",children:"here"}),".\nWe will need this application in the next step. Select\n",(0,t.jsx)(n.code,{children:'"I am Ready to Use Auth0"'}),". Your social connections on your Auth0 tenant\nshould now be configured correctly"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"Setting-up-the-application",children:"Setting up the application"}),"\n",(0,t.jsxs)(n.p,{children:["On your Auth0 dashboard, visit the ",(0,t.jsx)(n.code,{children:"Applications Dropdown"})," in the left menu.\nSelect the dropdown and go to ",(0,t.jsx)(n.code,{children:"Applications"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Select the ",(0,t.jsx)(n.code,{children:"Default Application"})]}),"\n",(0,t.jsxs)(n.li,{children:["Visit the ",(0,t.jsx)(n.code,{children:"Settings"})," tab","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Copy the ",(0,t.jsx)(n.code,{children:"domain"})," and ",(0,t.jsx)(n.code,{children:"client ID"})," fields inside ",(0,t.jsx)(n.code,{children:"Basic Information"}),". These\nwill be needed shortly."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"Application Properties"})," should have ",(0,t.jsx)(n.code,{children:"Single Page Application"})," selected\nfor ",(0,t.jsx)(n.code,{children:"Application Type"}),","]}),"\n",(0,t.jsxs)(n.li,{children:["Inside ",(0,t.jsx)(n.code,{children:"Application URIs"}),", please add ",(0,t.jsx)(n.code,{children:"http://localhost:3000"})," to\n",(0,t.jsx)(n.code,{children:"Allowed Callback URLs"}),", ",(0,t.jsx)(n.code,{children:"Allowed Web Origins"})," and ",(0,t.jsx)(n.code,{children:"Allowed Logout URLs"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Create the ",(0,t.jsx)(n.code,{children:"src/auth_config.json"})," file from the\n",(0,t.jsx)(n.a,{href:"https://github.com/auth0-samples/auth0-react-samples/blob/d5848ed710db85d6ef060731b296603c0eca744b/Sample-01/src/auth_config.json.example",children:(0,t.jsx)(n.code,{children:"src/auth_config.json.example"})}),"\nfile as described in the\n",(0,t.jsx)(n.a,{href:"https://github.com/auth0-samples/auth0-react-samples/tree/d5848ed710db85d6ef060731b296603c0eca744b/Sample-01#create-an-api",children:"sample app"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Once created, paste the ",(0,t.jsx)(n.code,{children:"domain"})," and ",(0,t.jsx)(n.code,{children:"client ID"})," into their respective fields\ninside ",(0,t.jsx)(n.code,{children:"src/auth_config.json"}),". The ",(0,t.jsx)(n.code,{children:"audience"})," key can be removed. The\nlogin/callback URIs will default to ",(0,t.jsx)(n.code,{children:"http://localhost:3000"})," which is the url\nof our test application."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/auth0-samples/auth0-react-samples/tree/d5848ed710db85d6ef060731b296603c0eca744b/Sample-01#project-setup",children:"install"}),"\nthe application dependencies and\n",(0,t.jsx)(n.a,{href:"https://github.com/auth0-samples/auth0-react-samples/tree/d5848ed710db85d6ef060731b296603c0eca744b/Sample-01#compile-and-hot-reload-for-development",children:"start the dev server"})]}),"\n",(0,t.jsxs)(n.li,{children:["Verify the application is running correctly by visiting\n",(0,t.jsx)(n.code,{children:"http://localhost:3000"})," and clicking the blue ",(0,t.jsx)(n.code,{children:"Log in"})," button in the top right\ncorner. Select one of our social connections and log in and make sure to\ncomplete the ",(0,t.jsx)(n.code,{children:"Authorize App"})," prompt. This only needs to be done once. This\nshould take you back to the sample app authenticated as the test user. When\nfinished, click the ",(0,t.jsx)(n.code,{children:"Log Out"})," dropdown button. Repeat for Google, Microsoft,\nand Facebook or the accounts you would like to test."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Here is what this process should look like for Facebook setup:"}),"\n",(0,t.jsx)(s,{src:"https://vimeo.com/789093604"}),"\n",(0,t.jsx)(n.h2,{id:"Testing-with-Cypress",children:"Testing with Cypress"}),"\n",(0,t.jsxs)(n.p,{children:["Now that our application is set up and ready to go, we are ready to write our\nautomated tests. For these social connections, the\n",(0,t.jsx)(n.a,{href:"/guides/guides/web-security#Modifying-Obstructive-Third-Party-Code",children:(0,t.jsx)(n.code,{children:"experimentalModifyObstructiveThirdPartyCode"})}),"\nconfiguration option must be enabled."]}),"\n",(0,t.jsx)(n.h2,{id:"Setting-Auth0-app-credentials-in-Cypress",children:"Setting Auth0 app credentials in Cypress"}),"\n",(0,t.jsxs)(n.p,{children:["To have access to test user credentials within our tests we need to configure\nCypress to use the social username, password, and name environment variables set\nin the ",(0,t.jsx)(n.code,{children:"cypress.env.json"})," file or by one of our\n",(0,t.jsx)(n.a,{href:"/guides/guides/environment-variables#Setting",children:"supported methods"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'// cypress.env.json\n\n{\n  "GOOGLE_USERNAME": "",\n  "GOOGLE_PASSWORD": "",\n  "GOOGLE_NAME": "",\n  "MICROSOFT_USERNAME": "",\n  "MICROSOFT_PASSWORD": "",\n  "MICROSOFT_NAME": "",\n  "FACEBOOK_USERNAME": "",\n  "FACEBOOK_PASSWORD": "",\n  "FACEBOOK_NAME": ""\n}\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"Login-with-cyorigin",children:["Login with ",(0,t.jsx)(n.a,{href:"/api/commands/origin",children:(0,t.jsx)(n.code,{children:"cy.origin()"})})]}),"\n",(0,t.jsxs)(n.p,{children:["Next, we'll write a custom command called ",(0,t.jsx)(n.code,{children:"loginToAuth0ViaSocial"})," to perform a\nlogin to either Facebook, Google, or Microsoft. This command will use\n",(0,t.jsx)(n.a,{href:"/api/commands/origin",children:(0,t.jsx)(n.code,{children:"cy.origin()"})})," to:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Navigate to the Auth0 login"}),"\n",(0,t.jsxs)(n.li,{children:["Select the ",(0,t.jsx)(n.code,{children:"Continue with ..."})," button and sign in with social credentials"]}),"\n",(0,t.jsxs)(n.li,{children:["Sign in and redirect back to the\n",(0,t.jsx)(n.a,{href:"https://github.com/auth0-samples/auth0-react-samples/tree/d5848ed710db85d6ef060731b296603c0eca744b/Sample-01",children:"sample app"})]}),"\n",(0,t.jsxs)(n.li,{children:["Cache the results with ",(0,t.jsx)(n.a,{href:"/api/commands/session",children:(0,t.jsx)(n.code,{children:"cy.session()"})})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"For demonstration, we will have a function for each provider."}),"\n",(0,t.jsx)(n.p,{children:"The Facebook Login Function"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// cypress/support/commands.ts\nimport { domain as Auth0Domain } from '../../src/auth_config.json'\n\nfunction logIntoFacebook(username: string, password: string, name: string) {\n  cy.visit('http://localhost:3000')\n  cy.get('#qsLoginBtn').click()\n\n  cy.origin(Auth0Domain, () => {\n    cy.scrollTo('bottom')\n    cy.get('form[data-provider=\"facebook\"]').submit()\n  })\n\n  cy.origin(\n    'https://www.facebook.com',\n    {\n      args: {\n        username,\n        password,\n      },\n    },\n    ({ username, password }) => {\n      cy.get('input#email').type(username)\n      cy.get('input#pass').type(password, {\n        log: false,\n      })\n      cy.get('[type=\"submit\"]').contains('Log In').click()\n    }\n  )\n\n  cy.get('h6.dropdown-header').should('contain', name)\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"The Google Login Function"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// cypress/support/commands.ts\nimport { domain as Auth0Domain } from '../../src/auth_config.json'\n\nfunction logIntoGoogle(username: string, password: string, name: string) {\n  Cypress.on(\n    'uncaught:exception',\n    (err) =>\n      !err.message.includes('ResizeObserver loop') &&\n      !err.message.includes('Error in protected function')\n  )\n  cy.visit('http://localhost:3000')\n  cy.get('#qsLoginBtn').click()\n\n  cy.origin(Auth0Domain, () => {\n    cy.scrollTo('bottom')\n    cy.get('form[data-provider=\"google\"]').submit()\n  })\n\n  cy.origin(\n    'https://accounts.google.com',\n    {\n      args: {\n        username,\n        password,\n      },\n    },\n    ({ username, password }) => {\n      Cypress.on(\n        'uncaught:exception',\n        (err) =>\n          !err.message.includes('ResizeObserver loop') &&\n          !err.message.includes('Error in protected function')\n      )\n\n      cy.get('input[type=\"email\"]').type(username, {\n        log: false,\n      })\n      // NOTE: The element exists on the original form but is hidden and gets rerendered, which leads to intermittent detached DOM issues\n      cy.contains('Next').click().wait(4000)\n      cy.get('[type=\"password\"]').type(password, {\n        log: false,\n      })\n      cy.contains('Next').click().wait(4000)\n    }\n  )\n\n  cy.get('h6.dropdown-header').should('contain', name)\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"And lastly, our Microsoft Login Function"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// cypress/support/commands.ts\nimport { domain as Auth0Domain } from '../../src/auth_config.json'\n\nfunction logIntoMicrosoft(username: string, password: string, name: string) {\n  cy.visit('http://localhost:3000')\n  cy.get('#qsLoginBtn').click()\n\n  cy.origin(Auth0Domain, () => {\n    cy.scrollTo('bottom')\n    cy.get('form[data-provider=\"windowslive\"]').submit()\n  })\n\n  cy.origin(\n    'login.live.com',\n    {\n      args: {\n        username,\n        password,\n      },\n    },\n    ({ username, password }) => {\n      cy.get('input[type=\"email\"]').type(username)\n      cy.get('input[type=\"submit\"]').click()\n      cy.get('input[type=\"password\"]').type(password, {\n        log: false,\n      })\n      cy.get('input[type=\"submit\"]').click()\n      cy.get('#idBtn_Back').click()\n    }\n  )\n\n  cy.get('h6.dropdown-header').should('contain', name)\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"We can wire these functions together in a single command, like so:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// cypress/support/commands.ts\n\nCypress.Commands.add(\n  'loginToAuth0ViaSocial',\n  (SOCIAL_PROVIDER: 'microsoft' | 'google' | 'facebook') => {\n    const log = Cypress.log({\n      displayName: 'Social LOGIN',\n      message: [`\ud83d\udd10 Authenticating | ${SOCIAL_PROVIDER}`],\n      // @ts-ignore\n      autoEnd: false,\n    })\n    log.snapshot('before')\n\n    switch (SOCIAL_PROVIDER) {\n      case 'microsoft':\n        logIntoMicrosoft(\n          Cypress.env('MICROSOFT_USERNAME'),\n          Cypress.env('MICROSOFT_PASSWORD'),\n          Cypress.env('MICROSOFT_NAME')\n        )\n        break\n      case 'google':\n        logIntoGoogle(\n          Cypress.env('GOOGLE_USERNAME'),\n          Cypress.env('GOOGLE_PASSWORD'),\n          Cypress.env('GOOGLE_NAME')\n        )\n        break\n      case 'facebook':\n        logIntoFacebook(\n          Cypress.env('FACEBOOK_USERNAME'),\n          Cypress.env('FACEBOOK_PASSWORD'),\n          Cypress.env('FACEBOOK_NAME')\n        )\n        break\n      default:\n        throw new Error('no social provider configured!')\n    }\n\n    log.snapshot('after')\n    log.end()\n  }\n)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Now, we can use our ",(0,t.jsx)(n.code,{children:"loginToAuth0ViaSocial"})," command in the test. Below is our\ntest to login as a user via Auth0 and run a basic check."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"describe('Social Logins Demo', () => {\n  beforeEach(() => {\n    // can provide Facebook, Google, or Microsoft here\n    cy.loginToAuth0ViaSocial('facebook')\n    cy.visit('http://localhost:3000/')\n  })\n\n  it('navigates to the app after navigation and displays the sample project header', () => {\n    cy.get('h1').should('contain', 'React.js Sample Project')\n  })\n})\n"})}),"\n",(0,t.jsx)(n.p,{children:"Here is a sample of what all 3 should look like in order."}),"\n",(0,t.jsx)(s,{src:"https://vimeo.com/789093473"}),"\n",(0,t.jsxs)(n.p,{children:["Lastly, we can refactor our login command to take advantage of\n",(0,t.jsx)(n.a,{href:"/api/commands/session",children:(0,t.jsx)(n.code,{children:"cy.session()"})})," to store our logged in user so we don't\nhave to reauthenticate before every test. This also largely cuts down on the\nlikelihood your account is blocked for frequent authentication attempts. Feel\nfree to DRY this up a bit!"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"Cypress.Commands.add(\n  'loginToAuth0ViaSocial',\n  (SOCIAL_PROVIDER: 'microsoft' | 'google' | 'facebook') => {\n    const log = Cypress.log({\n      displayName: 'Social LOGIN',\n      message: [`\ud83d\udd10 Authenticating | ${SOCIAL_PROVIDER}`],\n      // @ts-ignore\n      autoEnd: false,\n    })\n    log.snapshot('before')\n\n    cy.session(\n      `social-${SOCIAL_PROVIDER}`,\n      () => {\n        switch (SOCIAL_PROVIDER) {\n          case 'microsoft':\n            logIntoMicrosoft(\n              Cypress.env('MICROSOFT_USERNAME'),\n              Cypress.env('MICROSOFT_PASSWORD'),\n              Cypress.env('MICROSOFT_NAME')\n            )\n            break\n          case 'google':\n            logIntoGoogle(\n              Cypress.env('GOOGLE_USERNAME'),\n              Cypress.env('GOOGLE_PASSWORD'),\n              Cypress.env('GOOGLE_NAME')\n            )\n            break\n          case 'facebook':\n            logIntoFacebook(\n              Cypress.env('FACEBOOK_USERNAME'),\n              Cypress.env('FACEBOOK_PASSWORD'),\n              Cypress.env('FACEBOOK_NAME')\n            )\n            break\n          default:\n            throw new Error('no social provider configured!')\n        }\n      },\n      {\n        validate: () => {\n          cy.visit('http://localhost:3000')\n          switch (SOCIAL_PROVIDER) {\n            case 'microsoft':\n              cy.get('h6.dropdown-header').should(\n                'contain',\n                Cypress.env('MICROSOFT_NAME')\n              )\n              break\n            case 'google':\n              cy.get('h6.dropdown-header').should(\n                'contain',\n                Cypress.env('GOOGLE_NAME')\n              )\n              break\n            case 'facebook':\n              cy.get('h6.dropdown-header').should(\n                'contain',\n                Cypress.env('FACEBOOK_NAME')\n              )\n              break\n            default:\n              throw new Error('no social provider configured!')\n          }\n        },\n      }\n    )\n\n    log.snapshot('after')\n    log.end()\n  }\n)\n"})}),"\n",(0,t.jsx)(s,{src:"https://vimeo.com/789093516"}),"\n",(0,t.jsxs)(n.p,{children:["With the use of ",(0,t.jsx)(n.a,{href:"/api/commands/session",children:(0,t.jsx)(n.code,{children:"cy.session()"})}),", our tests should now\nrun quicker!"]}),"\n",(0,t.jsxs)(n.p,{children:["We hope this guide was able to get you up and running with\n",(0,t.jsx)(n.a,{href:"/api/commands/origin",children:(0,t.jsx)(n.code,{children:"cy.origin()"})})," and\n",(0,t.jsx)(n.a,{href:"/api/commands/session",children:(0,t.jsx)(n.code,{children:"cy.session()"})}),". If you ran into any issues while\nfollowing this guide, or have any feedback, please let us know and submit a\n",(0,t.jsx)(n.a,{href:"https://github.com/cypress-io/cypress-documentation/issues/new/choose",children:"Github issue"}),".\nHappy testing!"]}),"\n",(0,t.jsx)(n.h2,{id:"See-also",children:"See also"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/guides/guides/cross-origin-testing",children:"Cross Origin Testing Guide"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/guides/end-to-end-testing/amazon-cognito-authentication",children:"AWS Cognito Authentication Guide"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/guides/end-to-end-testing/azure-active-directory-authentication",children:"Azure Active Directory Authentication Guide"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/commands/origin",children:(0,t.jsx)(n.code,{children:"cy.origin()"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/api/commands/session",children:(0,t.jsx)(n.code,{children:"cy.session()"})})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>c});var t=s(7294);const i={},o=t.createContext(i);function c(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);