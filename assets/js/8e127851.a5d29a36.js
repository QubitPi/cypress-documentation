"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[5095],{209:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var t=n(5893),i=n(1151);const r={title:"Cypress testing solutions | Cypress Documentation",description:"Explore Cypress documentation for a comprehensive guide on end-to-end, component, and accessibility testing. Discover features, commands, best practices, and get started with Cypress today",sidebar_label:"Why Cypress?",sidebar_position:10},o="Why Cypress?",a={id:"app/get-started/why-cypress",title:"Cypress testing solutions | Cypress Documentation",description:"Explore Cypress documentation for a comprehensive guide on end-to-end, component, and accessibility testing. Discover features, commands, best practices, and get started with Cypress today",source:"@site/docs/app/get-started/why-cypress.mdx",sourceDirName:"app/get-started",slug:"/app/get-started/why-cypress",permalink:"/app/get-started/why-cypress",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/app/get-started/why-cypress.mdx",tags:[],version:"current",lastUpdatedAt:1754586914,formattedLastUpdatedAt:"Aug 7, 2025",sidebarPosition:10,frontMatter:{title:"Cypress testing solutions | Cypress Documentation",description:"Explore Cypress documentation for a comprehensive guide on end-to-end, component, and accessibility testing. Discover features, commands, best practices, and get started with Cypress today",sidebar_label:"Why Cypress?",sidebar_position:10},sidebar:"app",next:{title:"Install Cypress",permalink:"/app/get-started/install-cypress"}},l={},c=[{value:"<Icon></Icon> What you&#39;ll learn",id:"What-youll-learn",level:5},{value:"In a nutshell",id:"In-a-nutshell",level:2},{value:"Products",id:"Products",level:2},{value:"Features",id:"Features",level:2},{value:"Cypress App",id:"Cypress-App",level:3},{value:"Cypress Cloud",id:"Cypress-Cloud",level:3},{value:"UI Coverage",id:"UI-Coverage",level:3},{value:"Cypress Accessibility",id:"Cypress-Accessibility",level:3},{value:"Solutions",id:"Solutions",level:2},{value:"End-to-end Testing",id:"End-to-end-Testing",level:3},{value:"Component Testing",id:"Component-Testing",level:3},{value:"Accessibility Testing",id:"Accessibility-Testing",level:3},{value:"UI Coverage",id:"UI-Coverage-1",level:3},{value:"Other",id:"Other",level:3},{value:"Our mission",id:"Our-mission",level:2},{value:"Key Differences",id:"Key-Differences",level:2},{value:"Architecture",id:"Architecture",level:3},{value:"Native access",id:"Native-access",level:3},{value:"Shortcuts",id:"Shortcuts",level:3},{value:"Flake resistant",id:"Flake-resistant",level:3},{value:"Debuggability",id:"Debuggability",level:3},{value:"Trade offs",id:"Trade-offs",level:3},{value:"Get Started",id:"Get-Started",level:2},{value:"Cypress in the Real World",id:"Cypress-in-the-Real-World",level:2}];function d(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components},{DocsImage:n,Icon:r,TabItem:o,Tabs:a}=s;return n||p("DocsImage",!0),r||p("Icon",!0),o||p("TabItem",!0),a||p("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"Why-Cypress",children:"Why Cypress?"}),"\n",(0,t.jsxs)(s.admonition,{type:"info",children:[(0,t.jsxs)(s.h5,{id:"What-youll-learn",children:[(0,t.jsx)(r,{name:"question-circle",color:"#0097A8"})," What you'll learn"]}),(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"The solutions Cypress provides for testing"}),"\n",(0,t.jsx)(s.li,{children:"The features of Cypress App, Cypress Cloud, UI Coverage, and Cypress Accessibility"}),"\n",(0,t.jsx)(s.li,{children:"Our mission and what we believe in"}),"\n",(0,t.jsx)(s.li,{children:"Key differences between Cypress and other testing tools"}),"\n"]})]}),"\n",(0,t.jsx)(s.h2,{id:"In-a-nutshell",children:"In a nutshell"}),"\n",(0,t.jsx)(s.p,{children:"Cypress is a next generation front end testing tool built for the modern web.\nWe address the key pain points teams\nface when testing modern applications and maintaining test suites."}),"\n",(0,t.jsx)(s.p,{children:"Our users are typically developers, QA engineers, and teams looking to build web applications\nand increase the quality of their existing applications."}),"\n",(0,t.jsx)(s.p,{children:"Cypress provides solutions for:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"#End-to-end-Testing",children:"End-to-end testing"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"#Component-Testing",children:"Component testing"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"#Accessibility-Testing",children:"Accessibility testing"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"#UI-Coverage-1",children:"UI Coverage"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"#Other",children:"and more..."})}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Cypress can test anything that runs in a browser and surface insights into how to improve the health\nof your test suite and the quality of your application."}),"\n",(0,t.jsx)(s.h2,{id:"Products",children:"Products"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"/app/core-concepts/open-mode",children:"Cypress App"}),", a free,\n",(0,t.jsx)(s.a,{href:"https://github.com/cypress-io/cypress",children:"open source"}),",\nlocally installed app for writing and running tests."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"/cloud/get-started/introduction",children:"Cypress Cloud"}),", a paid service for recording tests, surfacing test results, and providing test analytics."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"/ui-coverage/get-started/introduction",children:"UI Coverage"}),", a premium solution providing a visual overview of test coverage across every page and component of your app, offering clear insights into uncovered areas that everyone can understand."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"/accessibility/get-started/introduction",children:"Cypress Accessibility"}),", a premium solution providing accessibility checks, which helps detect barriers for people with disabilities using your application."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Cypress is a robust solution that can improve the quality of your application."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"First:"})," Cypress helps you set up and start writing tests every day while\nyou build your application locally. ",(0,t.jsx)(s.em,{children:"Test Driven Development at its best!"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Next:"})," After building up a suite of tests and\n",(0,t.jsx)(s.a,{href:"/app/continuous-integration/overview",children:"integrating Cypress"})," with your\nCI Provider, ",(0,t.jsx)(s.a,{href:"/cloud/get-started/introduction",children:"Cypress Cloud"})," can record your test\nruns surfacing exactly what happened during the test in ",(0,t.jsx)(s.a,{href:"/cloud/features/test-replay",children:"Test Replay"}),".\nYou'll never have to wonder: ",(0,t.jsx)(s.em,{children:"Why did this fail?"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Finally:"})," Add on ",(0,t.jsx)(s.a,{href:"/accessibility/get-started/introduction",children:"Cypress Accessibility"})," to get continuous feedback on accessibility issues and regressions, and ",(0,t.jsx)(s.a,{href:"/ui-coverage/get-started/introduction",children:"UI Coverage"})," to ensure you've tested\nevery part of your application."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"Features",children:"Features"}),"\n",(0,t.jsx)(s.p,{children:"Below are listed some of the key features of each product."}),"\n",(0,t.jsx)(s.h3,{id:"Cypress-App",children:"Cypress App"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Time Travel:"})," Cypress takes snapshots as your tests run. Hover over\ncommands in the ",(0,t.jsx)(s.a,{href:"/app/core-concepts/open-mode#Command-Log",children:"Command Log"}),"\nto see exactly what happened at each step."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Debuggability:"})," Stop guessing why your tests are failing.\n",(0,t.jsx)(s.a,{href:"/app/guides/debugging",children:"Debug directly"})," from familiar tools like Developer\nTools. Our readable errors and stack traces make debugging lightning fast."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Automatic Waiting:"})," Never add waits or sleeps to your tests. Cypress\n",(0,t.jsx)(s.a,{href:"/app/core-concepts/introduction-to-cypress#Cypress-is-Not-Like-jQuery",children:"automatically waits"}),"\nfor commands and assertions before moving on. No more async hell."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Spies, Stubs, and Clocks:"})," Verify and\n",(0,t.jsx)(s.a,{href:"/app/guides/stubs-spies-and-clocks",children:"control the behavior"})," of functions,\nserver responses, or timers. The same functionality you love from unit testing\nis right at your fingertips."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Network Traffic Control:"})," Easily\n",(0,t.jsx)(s.a,{href:"/app/guides/network-requests",children:"control, stub, and test edge cases"})," without\ninvolving your server. You can stub network traffic however you like."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Consistent Results:"})," Our architecture doesn't use Selenium or WebDriver.\nSay hello to fast, consistent and reliable tests that are flake-free."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Cross Browser Testing:"})," Run tests within Firefox and Chrome-family browsers\n(including Edge and Electron) locally and\n",(0,t.jsx)(s.a,{href:"/app/guides/cross-browser-testing",children:"in a Continuous Integration pipeline"}),"."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"Cypress-Cloud",children:"Cypress Cloud"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Test Replay:"})," Record to ",(0,t.jsx)(s.a,{href:"/cloud/get-started/introduction",children:"Cypress Cloud"})," and replay the test exactly as it executed during the run for zero-configuration debugging using ",(0,t.jsx)(s.a,{href:"/cloud/features/test-replay",children:"Test Replay"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Smart Orchestration:"})," Once you're set up to record to Cypress Cloud, easily\n",(0,t.jsx)(s.a,{href:"/cloud/features/smart-orchestration/parallelization",children:"parallelize"})," your test\nsuite, rerun failed specs first with\n",(0,t.jsx)(s.a,{href:"/cloud/features/smart-orchestration/spec-prioritization",children:"Spec Prioritization"}),",\nand cancel test runs on failures with\n",(0,t.jsx)(s.a,{href:"/cloud/features/smart-orchestration/run-cancellation",children:"Auto Cancellation"})," for\ntight feedback loops."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Flake Detection:"})," Discover and diagnose unreliable tests with Cypress\nCloud's ",(0,t.jsx)(s.a,{href:"/cloud/features/flaky-test-management",children:"Flaky test management"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Branch Review:"})," Quickly identify the impact a pull request might have on your test suite in a single view using ",(0,t.jsx)(s.a,{href:"/cloud/features/branch-review",children:"Branch Review"}),". Compare which tests are failing, flaky, pending, added, or modified between the source and base branches and prevent the merging of low-quality code."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Integrations:"})," Integrate with ",(0,t.jsx)(s.a,{href:"/cloud/integrations/source-control/github",children:"GitHub"}),", ",(0,t.jsx)(s.a,{href:"/cloud/integrations/source-control/gitlab",children:"GitLab"}),", or ",(0,t.jsx)(s.a,{href:"/cloud/integrations/source-control/bitbucket",children:"Bitbucket"})," to see test results directly on every push or pull request. Cypress Cloud also integrates with\n",(0,t.jsx)(s.a,{href:"/cloud/integrations/slack",children:"Slack"}),", ",(0,t.jsx)(s.a,{href:"/cloud/integrations/jira",children:"Jira"}),", and ",(0,t.jsx)(s.a,{href:"/cloud/integrations/teams",children:"Microsoft Teams"})," to keep your team in the loop."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Test Analytics:"})," Track test results over time with ",(0,t.jsx)(s.a,{href:"/cloud/features/analytics/overview",children:"Test Analytics"})," to identify trends, regressions, and improvements in your test suite. Use our ",(0,t.jsx)(s.a,{href:"/cloud/integrations/data-extract-api",children:"Data Extract API"})," to extract the data that is important to your team."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"UI-Coverage",children:"UI Coverage"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Visualize Coverage:"})," ",(0,t.jsx)(s.a,{href:"/ui-coverage/get-started/introduction",children:"UI Coverage"})," provides a visual overview of test coverage across every page and component of your app, offering clear insights into uncovered areas that everyone can understand."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Results API:"})," Use the UI Coverage ",(0,t.jsx)(s.a,{href:"/ui-coverage/results-api",children:"Results API"})," to programmatically access test coverage data and integrate it into your existing workflows."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Branch Review:"})," Compare runs to see newly introduced elements in your application or unexpected reductions in test coverage."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"Cypress-Accessibility",children:"Cypress Accessibility"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Accessibility Checks:"})," Maximize the value of your existing Cypress tests by instantly adding thousands of ",(0,t.jsx)(s.a,{href:"/accessibility/get-started/introduction",children:"accessibility checks"})," with no setup, code changes, or performance penalty."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Run-level reports:"})," Get a detailed report of accessibility issues found in your test runs with ",(0,t.jsx)(s.a,{href:"/accessibility/core-concepts/run-level-reports",children:"Run-level reports"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Results API:"})," Use the Cypress Accessibility's ",(0,t.jsx)(s.a,{href:"/accessibility/results-api",children:"Results API"})," to programmatically access Accessibility results in a CI environment."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Branch Review:"})," Compare any report against a baseline to review only the new violations, without any noise from existing issues."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"Solutions",children:"Solutions"}),"\n",(0,t.jsx)(s.p,{children:"Cypress can be used to ensure several different types of test. This can provide\neven more confidence that your application under test is working as intended and accessible to all users."}),"\n",(0,t.jsx)(s.h3,{id:"End-to-end-Testing",children:"End-to-end Testing"}),"\n",(0,t.jsxs)(s.p,{children:["Cypress was originally designed to run ",(0,t.jsx)(s.a,{href:"/app/end-to-end-testing/writing-your-first-end-to-end-test",children:"end-to-end (E2E) tests"})," on anything that\nruns in a browser. A typical E2E test visits the application in a browser and\nperforms actions via the UI just like a real user would."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"it('adds todos', () => {\n  cy.visit('https://example.cypress.io/')\n  cy.get('[data-cy=\"new-todo\"]').type('write tests{enter}')\n  // confirm the application is showing one item\n  cy.get('[data-cy=\"todos\"]').should('have.length', 1)\n})\n"})}),"\n",(0,t.jsx)(s.h3,{id:"Component-Testing",children:"Component Testing"}),"\n",(0,t.jsxs)(s.p,{children:["Cypress ",(0,t.jsx)(s.a,{href:"/app/component-testing/get-started",children:"Component Testing"})," provides a component workbench for you to quickly\nbuild and test components from multiple front-end UI libraries \u2014 no matter how\nsimple or complex."]}),"\n",(0,t.jsxs)(s.p,{children:["Learn more about how to test components for\n",(0,t.jsx)(s.a,{href:"/app/component-testing/react/overview",children:"React"}),",\n",(0,t.jsx)(s.a,{href:"/app/component-testing/angular/overview",children:"Angular"}),",\n",(0,t.jsx)(s.a,{href:"/app/component-testing/vue/overview",children:"Vue"}),", and\n",(0,t.jsx)(s.a,{href:"/app/component-testing/svelte/overview",children:"Svelte"}),"."]}),"\n",(0,t.jsxs)(a,{children:[(0,t.jsx)(o,{value:"React",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"import Button from './Button'\n\nit('uses custom text for the button label', () => {\n  cy.mount(<Button>Click me!</Button>)\n  // Assert that a button component has the correct text\n  cy.get('button').should('contains.text', 'Click me!')\n})\n"})})}),(0,t.jsx)(o,{value:"Angular",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"import ButtonComponent from './button.component'\n\nit('uses custom text for the button label', () => {\n  cy.mount('<app-button>Click me!</app-button>', {\n    declarations: [ButtonComponent],\n  })\n  // Assert that a button component has the correct text\n  cy.get('button').should('contains.text', 'Click me!')\n})\n"})})}),(0,t.jsx)(o,{value:"Vue",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"import Button from './Button.vue'\n\nit('uses custom text for the button label', () => {\n  cy.mount(Button, {\n    slots: {\n      default: 'Click me!',\n    },\n  })\n  // Assert that a button component has the correct text\n  cy.get('button').should('contains.text', 'Click me!')\n})\n"})})}),(0,t.jsx)(o,{value:"Svelte",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"import Button from './Button.svelte'\n\nit('uses custom text for the button label', () => {\n  cy.mount(Button, { props: { msg: 'Click me!' } })\n  // Assert that a button component has the correct text\n  cy.get('button').should('contains.text', 'Click me!')\n})\n"})})})]}),"\n",(0,t.jsx)(s.h3,{id:"Accessibility-Testing",children:"Accessibility Testing"}),"\n",(0,t.jsxs)(s.p,{children:["You can write Cypress tests to check the accessibility of your application, and use plugins to run broad accessibility scans.\nWhen combined with ",(0,t.jsx)(s.a,{href:"/accessibility/get-started/introduction",children:"Cypress Accessibility"})," in Cypress Cloud, insights can be surfaced when specific\naccessibility standards are not met through your testing - with no configuration required. See our ",(0,t.jsx)(s.a,{href:"/app/guides/accessibility-testing",children:"Accessibility Testing guide"})," for more details."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"it('adds todos', () => {\n  cy.visit('https://example.cypress.io/')\n  cy.get('img#logo')\n    // Assert that an image has the correct alt text\n    .should('have.attr', 'alt', 'Cypress Logo')\n})\n"})}),"\n",(0,t.jsx)(n,{src:"/img/accessibility/get-started/cypress-accessibility-overview.png",alt:"A graphic showing the Cypress Accessibility dashboard including list of rules, views, and the user interface showing how devtools can be used"}),"\n",(0,t.jsx)(s.h3,{id:"UI-Coverage-1",children:"UI Coverage"}),"\n",(0,t.jsxs)(s.p,{children:["You can increase release confidence by closing testing gaps in critical app flows using ",(0,t.jsx)(s.a,{href:"/ui-coverage/get-started/introduction",children:"UI Coverage"}),". Leverage data-driven insights to cover untested areas, reduce incidents, and improve app quality."]}),"\n",(0,t.jsx)(n,{src:"/img/ui-coverage/get-started/uicov-docs-1.gif",alt:"UI Coverage demo showing UI of Cloud product"}),"\n",(0,t.jsx)(s.h3,{id:"Other",children:"Other"}),"\n",(0,t.jsx)(s.p,{children:"Cypress can perform arbitrary HTTP calls, thus you can use it for API testing."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"it('adds a todo', () => {\n  cy.request('POST', '/todos', { title: 'Write API Tests' })\n    .its('body')\n    .should('contain', { title: 'Write API Tests' })\n})\n"})}),"\n",(0,t.jsxs)(s.p,{children:["And through a large number of ",(0,t.jsx)(s.a,{href:"/app/plugins/plugins-list",children:"official and 3rd party plugins"}),"\nyou can write many other types of tests!"]}),"\n",(0,t.jsx)(s.h2,{id:"Our-mission",children:"Our mission"}),"\n",(0,t.jsxs)(s.p,{children:["Our mission is to build a thriving testing solution that enhances\nproductivity, makes testing an enjoyable experience, and generates developer\nhappiness. We hold ourselves accountable to champion a testing process ",(0,t.jsx)(s.strong,{children:"that\nactually works"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["We believe our documentation should be approachable. This means enabling our\nreaders to understand fully not just the ",(0,t.jsx)(s.strong,{children:"what"})," but the ",(0,t.jsx)(s.strong,{children:"why"})," as well."]}),"\n",(0,t.jsx)(s.p,{children:"We want to help developers build a new generation of modern applications faster,\nbetter, and without the stress and anxiety associated with managing tests. We\naim to elevate the art of software development by leveraging test results to\ngenerate actionable insights for long-term stability by proactively identifying\nareas for improvement."}),"\n",(0,t.jsxs)(s.p,{children:["We know that in order for us to be successful we must enable, nurture, and\nfoster an ecosystem that thrives on open source. Every line of test code is an\ninvestment in ",(0,t.jsx)(s.strong,{children:"your codebase"}),", it will never be coupled to us as a paid\nservice or company. Tests will be able to run and work independently, ",(0,t.jsx)(s.em,{children:"always"}),"."]}),"\n",(0,t.jsx)(s.p,{children:"We believe testing needs a lot of \u2764\ufe0f and we are here to build a tool, a service,\nand a community that everyone can learn and benefit from. We're solving the\nhardest pain points shared by every developer working on the web. We believe in\nthis mission and hope that you will join us to make Cypress a lasting ecosystem\nthat makes everyone happy."}),"\n",(0,t.jsx)(s.h2,{id:"Key-Differences",children:"Key Differences"}),"\n",(0,t.jsx)(s.h3,{id:"Architecture",children:"Architecture"}),"\n",(0,t.jsxs)(s.p,{children:["Most testing tools (like Selenium) operate by running outside of the browser and\nexecuting remote commands across the network. ",(0,t.jsx)(s.em,{children:"Cypress is the exact opposite."}),"\nCypress is executed in the same run loop as your application."]}),"\n",(0,t.jsx)(s.p,{children:"Behind Cypress is a Node server process. Cypress and the Node process constantly\ncommunicate, synchronize, and perform tasks on behalf of each other. Having\naccess to both parts (front and back) gives us the ability to respond to your\napplication's events in real time, while at the same time work outside of the\nbrowser for tasks that require a higher privilege."}),"\n",(0,t.jsx)(s.p,{children:"Cypress ultimately controls the entire automation process from top to bottom,\nwhich puts it in the unique position of being able to understand everything\nhappening in and outside of the browser. This means Cypress is capable of\ndelivering more consistent results than any other testing tool."}),"\n",(0,t.jsxs)(s.p,{children:["Because Cypress is\n",(0,t.jsx)(s.a,{href:"/app/get-started/install-cypress",children:"installed locally"})," on your machine,\nit can additionally tap into the operating system for automation tasks. This\nmakes performing tasks such as\n",(0,t.jsx)(s.a,{href:"/app/guides/screenshots-and-videos",children:"taking screenshots, recording videos"}),",\ngeneral ",(0,t.jsx)(s.a,{href:"/api/commands/exec",children:"file system operations"})," and\n",(0,t.jsx)(s.a,{href:"/api/commands/request",children:"network operations"})," possible."]}),"\n",(0,t.jsx)(s.h3,{id:"Native-access",children:"Native access"}),"\n",(0,t.jsxs)(s.p,{children:["Because Cypress operates within your application, that means it has native\naccess to every single object. Whether it is the ",(0,t.jsx)(s.code,{children:"window"}),", the ",(0,t.jsx)(s.code,{children:"document"}),", a DOM\nelement, your application instance, a function, a timer, a service worker, or\nanything else - you have access to it in your Cypress tests."]}),"\n",(0,t.jsx)(s.p,{children:"For instance you can:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"/api/commands/stub",children:"Stub"})," the browser or your application's functions and\nforce them to behave as needed in your test case."]}),"\n",(0,t.jsx)(s.li,{children:"Expose data stores so you can programmatically alter the state\nof your application directly from your test code."}),"\n",(0,t.jsx)(s.li,{children:"Test edge cases like 'empty views' by forcing your server to send empty\nresponses."}),"\n",(0,t.jsx)(s.li,{children:"Test how your application responds to errors on your server by modifying\nresponse status codes to be 500."}),"\n",(0,t.jsx)(s.li,{children:"Modify DOM elements directly - like forcing hidden elements to be shown."}),"\n",(0,t.jsx)(s.li,{children:"Use 3rd party plugins programmatically. Instead of fussing with complex UI\nwidgets like multi selects, autocompletes, drop downs, tree views or\ncalendars, you can call methods directly from your test code to control them."}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsxs)(s.a,{href:"/app/references/configuration#blockHosts",children:["Prevent Google Analytics from loading ",(0,t.jsx)(s.em,{children:"before"})," any of your application code executes"]}),"\nwhen testing."]}),"\n",(0,t.jsx)(s.li,{children:"Get synchronous notifications whenever your application transitions to a new\npage or when it begins to unload."}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"/api/commands/clock",children:"Control time by moving forward or backward"})," so that\ntimers or polls automatically fire without having to wait for the required\ntime in your tests."]}),"\n",(0,t.jsx)(s.li,{children:"Add your own event listeners to respond to your application. You could update\nyour application code to behave differently when under tests in Cypress. You\ncan control WebSocket messages from within Cypress, conditionally load 3rd\nparty scripts, or call functions directly on your application."}),"\n",(0,t.jsxs)(s.li,{children:["For ",(0,t.jsx)(s.a,{href:"/app/component-testing/get-started",children:"Component Tests"}),", Cypress is browser-based, allowing you to test not only your component's\nfunctionality but also styles and appearance. You can visually see your\ncomponent in action and interact with it in the app."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"Shortcuts",children:"Shortcuts"}),"\n",(0,t.jsxs)(s.p,{children:["Cypress allows for browser context to be cached with\n",(0,t.jsx)(s.a,{href:"/api/commands/session",children:(0,t.jsx)(s.code,{children:"cy.session()"})}),". This means as a user, you only need to\nperform authentication once for the entirety of your test suite, and restore the\nsaved session between each test. That means you do not have to visit a login\npage, type in a username and password and wait for the page to load and/or\nredirect for every test you run. You can accomplish this once with\n",(0,t.jsx)(s.a,{href:"/api/commands/session",children:(0,t.jsx)(s.code,{children:"cy.session()"})})," and if needed,\n",(0,t.jsx)(s.a,{href:"/api/commands/origin",children:(0,t.jsx)(s.code,{children:"cy.origin()"})}),"."]}),"\n",(0,t.jsx)(s.h3,{id:"Flake-resistant",children:"Flake resistant"}),"\n",(0,t.jsxs)(s.p,{children:["Cypress knows and understands everything that happens in your application\nsynchronously. It is notified the moment the page loads and the moment the page\nunloads. Cypress even knows how fast an element is animating and will\n",(0,t.jsx)(s.a,{href:"/app/core-concepts/interacting-with-elements#Animations",children:"wait for it to stop animating"}),".\nAdditionally, it\n",(0,t.jsx)(s.a,{href:"/app/core-concepts/interacting-with-elements#Visibility",children:"automatically waits for elements to become visible"}),",\nto ",(0,t.jsx)(s.a,{href:"/app/core-concepts/interacting-with-elements#Disability",children:"become enabled"}),",\nand to\n",(0,t.jsx)(s.a,{href:"/app/core-concepts/interacting-with-elements#Covering",children:"stop being covered"}),".\nWhen pages begin to transition, Cypress will pause command execution until the\nfollowing page is fully loaded. You can also tell Cypress to\n",(0,t.jsx)(s.a,{href:"/api/commands/wait",children:"wait"})," on specific network requests to finish."]}),"\n",(0,t.jsx)(s.h3,{id:"Debuggability",children:"Debuggability"}),"\n",(0,t.jsx)(s.p,{children:"Above all else Cypress is built for usability."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"There are hundreds of custom error messages describing the exact reason Cypress\nfailed your test."}),"\n",(0,t.jsx)(s.li,{children:"There is a rich UI which visually shows you the command execution, assertions,\nnetwork requests, spies, stubs, page loads, or URL changes."}),"\n",(0,t.jsx)(s.li,{children:"The Cypress App takes snapshots of your application and enables you to time travel back\nto the state it was in when commands ran."}),"\n",(0,t.jsx)(s.li,{children:"You can use the Developer Tools while your tests run to see every console\nmessage or network request. You can inspect elements and use\ndebugger statements in your spec or application code - you can use all the tools you're already comfortable with. This\nenables you to test and develop all at the same time."}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"Trade-offs",children:"Trade offs"}),"\n",(0,t.jsx)(s.p,{children:"While there are many new and powerful capabilities of Cypress - there are also\nimportant trade-offs that we've made in making this possible."}),"\n",(0,t.jsxs)(s.p,{children:["If you're interested in understanding more, we've written\n",(0,t.jsx)(s.a,{href:"/app/references/trade-offs",children:"an entire guide"})," on this topic."]}),"\n",(0,t.jsx)(s.h2,{id:"Get-Started",children:"Get Started"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/app/get-started/install-cypress",children:"Install Cypress"})," so you can quickly see your first passing test within minutes for\n",(0,t.jsx)(s.a,{href:"/app/end-to-end-testing/writing-your-first-end-to-end-test",children:"End-to-end tests"})," or\n",(0,t.jsx)(s.a,{href:"/app/component-testing/get-started",children:"Component tests"}),"."]}),"\n",(0,t.jsx)(s.h2,{id:"Cypress-in-the-Real-World",children:"Cypress in the Real World"}),"\n",(0,t.jsx)(n,{src:"/img/app/get-started/real-world-app.png",alt:"Cypress Real World App"}),"\n",(0,t.jsxs)(s.p,{children:["Cypress makes it quick and easy to start testing, and as you begin to test your\napp, ",(0,t.jsx)(s.strong,{children:"you'll often wonder if you're using best practices or scalable\nstrategies"}),"."]}),"\n","\n",(0,t.jsxs)(s.p,{children:["To guide the way, the Cypress team has created the ",(0,t.jsx)(r,{name:"github",inline:"true",contentType:"rwa"}),",\na full stack example application that demonstrates testing with ",(0,t.jsx)(s.strong,{children:"Cypress in practical and realistic\nscenarios."})]}),"\n",(0,t.jsxs)(s.p,{children:["The RWA achieves full ",(0,t.jsx)(s.a,{href:"/app/tooling/code-coverage",children:"code-coverage"})," with\nend-to-end tests\n",(0,t.jsx)(s.a,{href:"/app/guides/cross-browser-testing",children:"across multiple browsers"})," and\n",(0,t.jsx)(s.a,{href:"/api/commands/viewport",children:"device sizes"}),", but also includes\n",(0,t.jsx)(s.a,{href:"/app/tooling/visual-testing",children:"visual regression tests"}),", API tests, unit\ntests, and runs them all in an\n",(0,t.jsx)(s.a,{href:"https://cloud.cypress.io/projects/7s5okt",children:"efficient CI pipeline"}),". Use the RWA\nto ",(0,t.jsx)(s.strong,{children:"learn, experiment, tinker, and practice"})," web application testing with\nCypress."]}),"\n",(0,t.jsxs)(s.p,{children:["The app is bundled with everything you need,\n",(0,t.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-realworld-app",children:"just clone the repository"}),"\nand start testing."]})]})}function h(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function p(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,s,n)=>{n.d(s,{Z:()=>a,a:()=>o});var t=n(7294);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);