"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[2871],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=c(n),u=r,k=p["".concat(l,".").concat(u)]||p[u]||d[u]||o;return n?a.createElement(k,i(i({ref:t},m),{},{components:n})):a.createElement(k,i({ref:t},m))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},811:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>k,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={title:"exec"},i=void 0,s={unversionedId:"api/commands/exec",id:"api/commands/exec",title:"exec",description:"Execute a system command.",source:"@site/docs/api/commands/exec.mdx",sourceDirName:"api/commands",slug:"/api/commands/exec",permalink:"/cypress-documentation/api/commands/exec",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/commands/exec.mdx",tags:[],version:"current",lastUpdatedAt:1698908846,formattedLastUpdatedAt:"Nov 2, 2023",frontMatter:{title:"exec"},sidebar:"api",previous:{title:"end",permalink:"/cypress-documentation/api/commands/end"},next:{title:"fixture",permalink:"/cypress-documentation/api/commands/fixture"}},l={},c=[{value:"Syntax",id:"Syntax",level:2},{value:"Usage",id:"Usage",level:3},{value:"Arguments",id:"Arguments",level:3},{value:'Yields <Icon name="question-circle"/>',id:"Yields",level:3},{value:"Examples",id:"Examples",level:2},{value:"Command",id:"Command",level:3},{value:"Run a build command",id:"Run-a-build-command",level:4},{value:"Seed the database and assert it was successful",id:"Seed-the-database-and-assert-it-was-successful",level:4},{value:"Run an arbitrary script and assert its output",id:"Run-an-arbitrary-script-and-assert-its-output",level:4},{value:"Write to a file to create a fixture from response body",id:"Write-to-a-file-to-create-a-fixture-from-response-body",level:4},{value:"Options",id:"Options",level:3},{value:"Change the timeout",id:"Change-the-timeout",level:4},{value:"Choose to not fail on non-zero exit and assert on code and stderr",id:"Choose-to-not-fail-on-non-zero-exit-and-assert-on-code-and-stderr",level:4},{value:"Specify environment variables",id:"Specify-environment-variables",level:4},{value:"Notes",id:"Notes",level:2},{value:"Commands Must Exit",id:"Commands-Must-Exit",level:3},{value:"Commands that do not exit are not supported",id:"Commands-that-do-not-exit-are-not-supported",level:4},{value:"Reset timeout via <code>Cypress.config()</code>",id:"Reset-timeout-via-Cypressconfig",level:3},{value:"Set timeout in the test configuration",id:"Set-timeout-in-the-test-configuration",level:3},{value:"Rules",id:"Rules",level:2},{value:'Requirements <Icon name="question-circle"/>',id:"Requirements",level:3},{value:'Assertions <Icon name="question-circle"/>',id:"Assertions",level:3},{value:'Timeouts <Icon name="question-circle"/>',id:"Timeouts",level:3},{value:"Command Log",id:"Command-Log",level:2},{value:"See also",id:"See-also",level:2}],m=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},p=m("Icon"),d=m("DocsImage"),u={toc:c};function k(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Execute a system command."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("strong",null,"Anti-Pattern"),(0,r.kt)("p",{parentName:"admonition"},"Don't try to start a web server from ",(0,r.kt)("inlineCode",{parentName:"p"},"cy.exec()"),"."),(0,r.kt)("p",{parentName:"admonition"},"Read about ",(0,r.kt)("a",{parentName:"p",href:"/guides/references/best-practices#Web-Servers"},"best practices")," here.")),(0,r.kt)("h2",{id:"Syntax"},"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.exec(command)\ncy.exec(command, options)\n")),(0,r.kt)("h3",{id:"Usage"},"Usage"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)(p,{name:"check-circle",color:"green",mdxType:"Icon"})," Correct Usage")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.exec('npm run build')\n")),(0,r.kt)("h3",{id:"Arguments"},"Arguments"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)(p,{name:"angle-right",mdxType:"Icon"})," command")," ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"(String)"))),(0,r.kt)("p",null,"The system command to be executed from the project root (the directory that\ncontains the ",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration"},"Cypress configuration file"),")."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)(p,{name:"angle-right",mdxType:"Icon"})," options")," ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"(Object)"))),(0,r.kt)("p",null,"Pass in an options object to change the default behavior of ",(0,r.kt)("inlineCode",{parentName:"p"},"cy.exec()"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"log")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:null},"Displays the command in the ",(0,r.kt)("a",{parentName:"td",href:"/guides/core-concepts/cypress-app#Command-Log"},"Command log"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"env")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},"Object of environment variables to set before the command executes (e.g. ",(0,r.kt)("inlineCode",{parentName:"td"},"{USERNAME: 'johndoe'}"),"). Will be merged with existing system environment variables")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"failOnNonZeroExit")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:null},"whether to fail if the command exits with a non-zero code")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"timeout")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/guides/references/configuration#Timeouts"},(0,r.kt)("inlineCode",{parentName:"a"},"execTimeout"))),(0,r.kt)("td",{parentName:"tr",align:null},"Time to wait for ",(0,r.kt)("inlineCode",{parentName:"td"},"cy.exec()")," to resolve before ",(0,r.kt)("a",{parentName:"td",href:"#Timeouts"},"timing out"))))),(0,r.kt)("h3",{id:"Yields"},"Yields ",(0,r.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Subject-Management"},(0,r.kt)(p,{name:"question-circle",mdxType:"Icon"}))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"cy.exec()")," yields an object with the following properties:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"code")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"stdout")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"stderr"))),(0,r.kt)("h2",{id:"Examples"},"Examples"),(0,r.kt)("h3",{id:"Command"},"Command"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"cy.exec()")," provides an escape hatch for running arbitrary system commands, so\nyou can take actions necessary for your test outside the scope of Cypress. This\nis great for:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Running build scripts"),(0,r.kt)("li",{parentName:"ul"},"Seeding your test database"),(0,r.kt)("li",{parentName:"ul"},"Starting processes"),(0,r.kt)("li",{parentName:"ul"},"Killing processes")),(0,r.kt)("h4",{id:"Run-a-build-command"},"Run a build command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.exec('npm run build').then((result) => {\n  // yields the 'result' object\n  // {\n  //   code: 0,\n  //   stdout: \"Files successfully built\",\n  //   stderr: \"\"\n  // }\n})\n")),(0,r.kt)("h4",{id:"Seed-the-database-and-assert-it-was-successful"},"Seed the database and assert it was successful"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.exec('rake db:seed').its('code').should('eq', 0)\n")),(0,r.kt)("h4",{id:"Run-an-arbitrary-script-and-assert-its-output"},"Run an arbitrary script and assert its output"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.exec('npm run my-script')\n  .its('stdout')\n  .should('contain', 'Done running the script')\n")),(0,r.kt)("h4",{id:"Write-to-a-file-to-create-a-fixture-from-response-body"},"Write to a file to create a fixture from response body"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.intercept('POST', '/comments').as('postComment')\ncy.get('.add-comment').click()\ncy.wait('@postComment').then(({ response }) => {\n  cy.exec(\n    `echo ${JSON.stringify(response.body)} >cypress/fixtures/comment.json`\n  )\n  cy.fixture('comment.json').should('deep.eq', response.body)\n})\n")),(0,r.kt)("h3",{id:"Options"},"Options"),(0,r.kt)("h4",{id:"Change-the-timeout"},"Change the timeout"),(0,r.kt)("p",null,"You can increase the time allowed to execute the command, although ",(0,r.kt)("em",{parentName:"p"},"we don't\nrecommend executing commands that take a long time to exit"),"."),(0,r.kt)("p",null,"Cypress will ",(0,r.kt)("em",{parentName:"p"},"not")," continue running any other commands until ",(0,r.kt)("inlineCode",{parentName:"p"},"cy.exec()")," has\nfinished, so a long-running command will drastically slow down your test cycle."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// will fail if script takes longer than 20 seconds to finish\ncy.exec('npm run build', { timeout: 20000 })\n")),(0,r.kt)("h4",{id:"Choose-to-not-fail-on-non-zero-exit-and-assert-on-code-and-stderr"},"Choose to not fail on non-zero exit and assert on code and stderr"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.exec('man bear pig', { failOnNonZeroExit: false }).then((result) => {\n  expect(result.code).to.eq(1)\n  expect(result.stderr).to.contain('No manual entry for bear')\n})\n")),(0,r.kt)("h4",{id:"Specify-environment-variables"},"Specify environment variables"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.exec('echo $USERNAME', { env: { USERNAME: 'johndoe' } })\n  .its('stdout')\n  .should('contain', 'johndoe')\n")),(0,r.kt)("h2",{id:"Notes"},"Notes"),(0,r.kt)("h3",{id:"Commands-Must-Exit"},"Commands Must Exit"),(0,r.kt)("h4",{id:"Commands-that-do-not-exit-are-not-supported"},"Commands that do not exit are not supported"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"cy.exec()")," does not support commands that don't exit, such as:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Starting a ",(0,r.kt)("inlineCode",{parentName:"li"},"rails server")),(0,r.kt)("li",{parentName:"ul"},"A task that runs a watch"),(0,r.kt)("li",{parentName:"ul"},"Any process that needs to be manually interrupted to stop")),(0,r.kt)("p",null,"A command must exit within the ",(0,r.kt)("inlineCode",{parentName:"p"},"execTimeout")," or Cypress will kill the command's\nprocess and fail the current test."),(0,r.kt)("h3",{id:"Reset-timeout-via-Cypressconfig"},"Reset timeout via ",(0,r.kt)("inlineCode",{parentName:"h3"},"Cypress.config()")),(0,r.kt)("p",null,"You can change the timeout of ",(0,r.kt)("inlineCode",{parentName:"p"},"cy.exec()")," for the remainder of the tests by\nsetting the new values for ",(0,r.kt)("inlineCode",{parentName:"p"},"execTimeout")," within\n",(0,r.kt)("a",{parentName:"p",href:"/api/cypress-api/config"},"Cypress.config()"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Cypress.config('execTimeout', 30000)\nCypress.config('execTimeout') // => 30000\n")),(0,r.kt)("h3",{id:"Set-timeout-in-the-test-configuration"},"Set timeout in the test configuration"),(0,r.kt)("p",null,"You can configure the ",(0,r.kt)("inlineCode",{parentName:"p"},"cy.exec()")," timeout within a suite or test by passing the\nnew configuration value within the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#Test-Configuration"},"test configuration"),"."),(0,r.kt)("p",null,"This will set the timeout throughout the duration of the tests, then return it\nto the default ",(0,r.kt)("inlineCode",{parentName:"p"},"execTimeout")," when complete."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"describe('has data available from database', { execTimeout: 90000 }, () => {\n  before(() => {\n    cy.exec('rake db:seed')\n  })\n\n  // tests\n\n  after(() => {\n    cy.exec('rake db:reset')\n  })\n})\n")),(0,r.kt)("h2",{id:"Rules"},"Rules"),(0,r.kt)("h3",{id:"Requirements"},"Requirements ",(0,r.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Chains-of-Commands"},(0,r.kt)(p,{name:"question-circle",mdxType:"Icon"}))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cy.exec()")," requires being chained off of ",(0,r.kt)("inlineCode",{parentName:"li"},"cy"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cy.exec()")," requires the executed system command to eventually exit."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cy.exec()")," requires that the exit code be ",(0,r.kt)("inlineCode",{parentName:"li"},"0")," when ",(0,r.kt)("inlineCode",{parentName:"li"},"failOnNonZeroExit")," is\n",(0,r.kt)("inlineCode",{parentName:"li"},"true"),".")),(0,r.kt)("h3",{id:"Assertions"},"Assertions ",(0,r.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Assertions"},(0,r.kt)(p,{name:"question-circle",mdxType:"Icon"}))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cy.exec()")," will only run assertions you have chained once, and will not\n",(0,r.kt)("a",{parentName:"li",href:"/guides/core-concepts/retry-ability"},"retry"),".")),(0,r.kt)("h3",{id:"Timeouts"},"Timeouts ",(0,r.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Timeouts"},(0,r.kt)(p,{name:"question-circle",mdxType:"Icon"}))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cy.exec()")," can time out waiting for the system command to exist.")),(0,r.kt)("h2",{id:"Command-Log"},"Command Log"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"List the contents of your package.json file"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"if (Cypress.platform === 'win32') {\n  cy.exec('type package.json').its('stderr').should('be.empty')\n} else {\n  cy.exec('cat package.json').its('stderr').should('be.empty')\n}\n")),(0,r.kt)("p",null,"The command above will display in the Command Log as:"),(0,r.kt)(d,{src:"/img/api/exec/exec-cat-in-shell.png",alt:"Command Log exec",mdxType:"DocsImage"}),(0,r.kt)("p",null,"When clicking on the ",(0,r.kt)("inlineCode",{parentName:"p"},"exec")," command within the command log, the console outputs\nthe following:"),(0,r.kt)(d,{src:"/img/api/exec/console-shows-code-shell-stderr-and-stdout-for-exec.png",alt:"console.log exec",mdxType:"DocsImage"}),(0,r.kt)("h2",{id:"See-also"},"See also"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/commands/readfile"},(0,r.kt)("inlineCode",{parentName:"a"},"cy.readFile()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/commands/request"},(0,r.kt)("inlineCode",{parentName:"a"},"cy.request()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/commands/task"},(0,r.kt)("inlineCode",{parentName:"a"},"cy.task()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/commands/writefile"},(0,r.kt)("inlineCode",{parentName:"a"},"cy.writeFile()")))))}k.isMDXComponent=!0}}]);