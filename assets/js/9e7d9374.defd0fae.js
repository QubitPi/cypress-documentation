"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[7171],{9693:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var i=t(5893),o=t(1151);const a={title:"Allowed Interaction Commands | Cypress UI Coverage",description:"The `allowedInteractionCommands` configuration property allows users to limit the interaction commands that are tracked for specific elements in UI Coverage.",sidebar_label:"allowedInteractionCommands",sidebar_position:100},s="allowedInteractionCommands",r={id:"ui-coverage/configuration/allowedinteractioncommands",title:"Allowed Interaction Commands | Cypress UI Coverage",description:"The `allowedInteractionCommands` configuration property allows users to limit the interaction commands that are tracked for specific elements in UI Coverage.",source:"@site/docs/ui-coverage/configuration/allowedinteractioncommands.mdx",sourceDirName:"ui-coverage/configuration",slug:"/ui-coverage/configuration/allowedinteractioncommands",permalink:"/ui-coverage/configuration/allowedinteractioncommands",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/ui-coverage/configuration/allowedinteractioncommands.mdx",tags:[],version:"current",lastUpdatedAt:1754493293,formattedLastUpdatedAt:"Aug 6, 2025",sidebarPosition:100,frontMatter:{title:"Allowed Interaction Commands | Cypress UI Coverage",description:"The `allowedInteractionCommands` configuration property allows users to limit the interaction commands that are tracked for specific elements in UI Coverage.",sidebar_label:"allowedInteractionCommands",sidebar_position:100},sidebar:"ui-coverage",previous:{title:"additionalInteractionCommands",permalink:"/ui-coverage/configuration/additionalinteractioncommands"},next:{title:"Results API",permalink:"/ui-coverage/results-api"}},c={},l=[{value:"Why use allowedInteractionCommands?",id:"Why-use-allowedInteractionCommands",level:2},{value:"Syntax",id:"Syntax",level:2},{value:"Options",id:"Options",level:3},{value:"Examples",id:"Examples",level:2},{value:"Limiting button interactions to clicks only",id:"Limiting-button-interactions-to-clicks-only",level:3},{value:"Config",id:"Config",level:4},{value:"Usage in tests",id:"Usage-in-tests",level:4},{value:"Different rules for form elements",id:"Different-rules-for-form-elements",level:3},{value:"Config",id:"Config-1",level:4},{value:"Usage in tests",id:"Usage-in-tests-1",level:4},{value:"Excluding hover interactions for mobile components",id:"Excluding-hover-interactions-for-mobile-components",level:3},{value:"Config",id:"Config-2",level:4},{value:"Usage in tests",id:"Usage-in-tests-2",level:4},{value:"Allowing assertions as interactions",id:"Allowing-assertions-as-interactions",level:3},{value:"Config",id:"Config-3",level:4},{value:"Usage in tests",id:"Usage-in-tests-3",level:4},{value:"Notes",id:"Notes",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.a)(),...e.components},{ProductHeading:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ProductHeading",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t,{product:"ui-coverage"}),"\n",(0,i.jsx)(n.h1,{id:"allowedInteractionCommands",children:"allowedInteractionCommands"}),"\n",(0,i.jsxs)(n.p,{children:["UI Coverage tracks all interaction commands by default for comprehensive coverage reporting. The ",(0,i.jsx)(n.code,{children:"allowedInteractionCommands"})," configuration allows you to limit which interaction commands are tracked for specific elements by defining rules based on CSS selectors."]}),"\n",(0,i.jsx)(n.p,{children:"This is particularly useful for filtering out irrelevant interactions or focusing coverage tracking on specific interaction patterns for different types of elements."}),"\n",(0,i.jsx)(n.h2,{id:"Why-use-allowedInteractionCommands",children:"Why use allowedInteractionCommands?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Focused tracking"}),": Limit coverage tracking to relevant interaction types for specific elements or components to reduce noise in reports."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Component-specific rules"}),": Apply different interaction tracking rules based on element types or component categories. For example, you may require specific kinds of interactions on complex data-visualization components that are not required in regular interactive elements."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"Syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "uiCoverage": {\n    "allowedInteractionCommands": [\n      {\n        "selector": string,\n        "commands": [string]\n      }\n    ]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"Options",children:"Options"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"allowedInteractionCommands"})," property accepts an array of objects, where each object defines a rule for limiting interaction commands for elements matching a specific selector."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Option"}),(0,i.jsx)(n.th,{children:"Required"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"selector"})}),(0,i.jsx)(n.td,{children:"Required"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"A CSS selector to identify elements. Supports standard CSS selector syntax, including IDs, classes, attributes, and combinators."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"commands"})}),(0,i.jsx)(n.td,{children:"Required"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"An array of command names (strings) that should be tracked as interactions for elements matching the selector. All other interaction commands will be ignored for these elements."})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"Examples",children:"Examples"}),"\n",(0,i.jsx)(n.h3,{id:"Limiting-button-interactions-to-clicks-only",children:"Limiting button interactions to clicks only"}),"\n",(0,i.jsx)(n.h4,{id:"Config",children:"Config"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "uiCoverage": {\n    "allowedInteractionCommands": [\n      {\n        "selector": "button, [role=\'button\']",\n        "commands": ["click", "realClick"]\n      }\n    ]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"Usage-in-tests",children:"Usage in tests"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// Only click and realClick will be tracked for buttons\ncy.get('[data-cy=\"submit-button\"]').click() // \u2713 Tracked\ncy.get('[data-cy=\"submit-button\"]').realClick() // \u2713 Tracked\ncy.get('[data-cy=\"submit-button\"]').hover() // \u2717 Not tracked\ncy.get('[data-cy=\"submit-button\"]').focus() // \u2717 Not tracked\n"})}),"\n",(0,i.jsx)(n.h3,{id:"Different-rules-for-form-elements",children:"Different rules for form elements"}),"\n",(0,i.jsx)(n.h4,{id:"Config-1",children:"Config"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "uiCoverage": {\n    "allowedInteractionCommands": [\n      {\n        "selector": "input[type=\'text\'], textarea",\n        "commands": ["type", "clear", "realType"]\n      },\n      {\n        "selector": "select",\n        "commands": ["select", "click"]\n      },\n      {\n        "selector": "input[type=\'checkbox\'], input[type=\'radio\']",\n        "commands": ["check", "uncheck", "click"]\n      }\n    ]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"Usage-in-tests-1",children:"Usage in tests"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// Text inputs: only type, clear, and realType are tracked\ncy.get('[data-cy=\"username\"]').type('john_doe') // \u2713 Tracked\ncy.get('[data-cy=\"username\"]').clear() // \u2713 Tracked\ncy.get('[data-cy=\"username\"]').focus() // \u2717 Not tracked\n\n// Select elements: only select and click are tracked\ncy.get('[data-cy=\"country\"]').select('US') // \u2713 Tracked\ncy.get('[data-cy=\"country\"]').click() // \u2713 Tracked\ncy.get('[data-cy=\"country\"]').hover() // \u2717 Not tracked\n\n// Checkboxes/Radio buttons: check, uncheck, and click are tracked\ncy.get('[data-cy=\"agree-terms\"]').check() // \u2713 Tracked\ncy.get('[data-cy=\"agree-terms\"]').click() // \u2713 Tracked\n"})}),"\n",(0,i.jsx)(n.h3,{id:"Excluding-hover-interactions-for-mobile-components",children:"Excluding hover interactions for mobile components"}),"\n",(0,i.jsx)(n.h4,{id:"Config-2",children:"Config"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "uiCoverage": {\n    "allowedInteractionCommands": [\n      {\n        "selector": "[data-mobile=\'true\']",\n        "commands": ["click", "tap", "swipe", "type"]\n      }\n    ]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"Usage-in-tests-2",children:"Usage in tests"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// Mobile components: hover interactions are excluded\ncy.get(\'[data-mobile="true"][data-cy="menu-item"]\').click() // \u2713 Tracked\ncy.get(\'[data-mobile="true"][data-cy="menu-item"]\').tap() // \u2713 Tracked\ncy.get(\'[data-mobile="true"][data-cy="menu-item"]\').hover() // \u2717 Not tracked\n'})}),"\n",(0,i.jsx)(n.h3,{id:"Allowing-assertions-as-interactions",children:"Allowing assertions as interactions"}),"\n",(0,i.jsxs)(n.p,{children:["Note that because ",(0,i.jsx)(n.code,{children:"allowedInteractionCommands"})," replaces the allowed interactions, if you add ",(0,i.jsx)(n.code,{children:"assert"})," as an interaction, remember to also add any other acceptable interactions to the list."]}),"\n",(0,i.jsx)(n.h4,{id:"Config-3",children:"Config"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "uiCoverage": {\n    "additionalInteractionCommands": [\n      {\n        "selector": "button[data-no-explicit-interaction=\'true\']",\n        "commands": ["assert"]\n      }\n    ]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"Usage-in-tests-3",children:"Usage in tests"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// Any assertions on matching elements are tracked\ncy.get('button[data-no-explicit-interaction=\"true\"]').should('exist) // \u2713 Tracked\ncy.get('button[data-no-explicit-interaction=\"true\"]').should('be.visible) // \u2713 Tracked\ncy.get('button[data-no-explicit-interaction=\"true\"]').click() // \u2717 Not tracked\n"})}),"\n",(0,i.jsx)(n.h2,{id:"Notes",children:"Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Elements that don't match any selector will have all interaction commands tracked (default behavior)."}),"\n",(0,i.jsx)(n.li,{children:"If an element matches multiple selectors, commands from all matching rules will be allowed. A high degree of specificity for these selectors is recommended."}),"\n",(0,i.jsx)(n.li,{children:"Command names are case-sensitive and must match exactly as they appear in your test code."}),"\n",(0,i.jsxs)(n.li,{children:["This configuration works separately from ",(0,i.jsx)(n.code,{children:"additionalInteractionCommands"}),". Custom commands do ",(0,i.jsx)(n.strong,{children:"not"})," need to be globally defined as ",(0,i.jsx)(n.code,{children:"additionalInteractionCommands"})," in order to be declared here."]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>s});var i=t(7294);const o={},a=i.createContext(o);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);