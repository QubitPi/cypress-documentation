"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[5061],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(n),u=i,k=c["".concat(s,".").concat(u)]||c[u]||m[u]||l;return n?a.createElement(k,r(r({ref:t},d),{},{components:n})):a.createElement(k,r({ref:t},d))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:i,r[1]=o;for(var p=2;p<l;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1264:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>k,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const l={title:"writeFile"},r=void 0,o={unversionedId:"api/commands/writefile",id:"api/commands/writefile",title:"writeFile",description:"Write to a file with the specified contents.",source:"@site/docs/api/commands/writefile.mdx",sourceDirName:"api/commands",slug:"/api/commands/writefile",permalink:"/cypress-documentation/api/commands/writefile",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/commands/writefile.mdx",tags:[],version:"current",lastUpdatedAt:1698215491,formattedLastUpdatedAt:"Oct 25, 2023",frontMatter:{title:"writeFile"},sidebar:"api",previous:{title:"wrap",permalink:"/cypress-documentation/api/commands/wrap"},next:{title:"Catalog of Events",permalink:"/cypress-documentation/api/cypress-api/catalog-of-events"}},s={},p=[{value:"Syntax",id:"Syntax",level:2},{value:"Usage",id:"Usage",level:3},{value:"Arguments",id:"Arguments",level:3},{value:'Yields <Icon name="question-circle"/>',id:"Yields",level:3},{value:"Examples",id:"Examples",level:2},{value:"Text",id:"Text",level:3},{value:"Write some text to a <code>txt</code> file",id:"Write-some-text-to-a-txt-file",level:4},{value:"JSON",id:"JSON",level:3},{value:"Write JSON to a file",id:"Write-JSON-to-a-file",level:4},{value:"Write response data to a fixture file",id:"Write-response-data-to-a-fixture-file",level:4},{value:"Encoding",id:"Encoding",level:3},{value:"Specify the encoding as a String",id:"Specify-the-encoding-as-a-String",level:4},{value:"Specify the encoding as part of the options object",id:"Specify-the-encoding-as-part-of-the-options-object",level:4},{value:"Flags",id:"Flags",level:3},{value:"Append contents to the end of a file",id:"Append-contents-to-the-end-of-a-file",level:4},{value:"Buffer",id:"Buffer",level:3},{value:"Write a buffer directly without encoding as a string",id:"Write-a-buffer-directly-without-encoding-as-a-string",level:4},{value:"Rules",id:"Rules",level:2},{value:'Requirements <Icon name="question-circle"/>',id:"Requirements",level:3},{value:'Assertions <Icon name="question-circle"/>',id:"Assertions",level:3},{value:'Timeouts <Icon name="question-circle"/>',id:"Timeouts",level:3},{value:"Command Log",id:"Command-Log",level:2},{value:"History",id:"History",level:2},{value:"See also",id:"See-also",level:2}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",t)},c=d("Icon"),m=d("DocsImage"),u={toc:p};function k(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Write to a file with the specified contents."),(0,i.kt)("h2",{id:"Syntax"},"Syntax"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.writeFile(filePath, contents)\ncy.writeFile(filePath, contents, encoding)\ncy.writeFile(filePath, contents, options)\ncy.writeFile(filePath, contents, encoding, options)\n")),(0,i.kt)("h3",{id:"Usage"},"Usage"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(c,{name:"check-circle",color:"green",mdxType:"Icon"})," Correct Usage")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.writeFile('menu.json')\n")),(0,i.kt)("h3",{id:"Arguments"},"Arguments"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(c,{name:"angle-right",mdxType:"Icon"})," filePath")," ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"(String)"))),(0,i.kt)("p",null,"A path to a file within the project root (the directory that contains the\n",(0,i.kt)("a",{parentName:"p",href:"/guides/references/configuration"},"Cypress configuration file"),")"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(c,{name:"angle-right",mdxType:"Icon"})," contents")," ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"(String, Array, Object or Buffer)"))),(0,i.kt)("p",null,"The contents to be written to the file."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(c,{name:"angle-right",mdxType:"Icon"})," encoding")," ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"(String)"))),(0,i.kt)("p",null,"The encoding to be used when writing to the file. The following encodings are\nsupported:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"'ascii'")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"'base64'")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"'binary'")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"'hex'")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"'latin1'")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"'utf8'")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"'utf-8'")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"'ucs2'")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"'ucs-2'")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"'utf16le'")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"'utf-16le'")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"null"))),(0,i.kt)("p",null,"Using ",(0,i.kt)("inlineCode",{parentName:"p"},"null")," explicitly will allows you to write a ",(0,i.kt)("inlineCode",{parentName:"p"},"Buffer")," directly, without\nfirst encoding it as a string."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(c,{name:"angle-right",mdxType:"Icon"})," options")," ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"(Object)"))),(0,i.kt)("p",null,"Pass in an options object to change the default behavior of ",(0,i.kt)("inlineCode",{parentName:"p"},"cy.writeFile()"),"."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Option"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"log")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:null},"Displays the command in the ",(0,i.kt)("a",{parentName:"td",href:"/guides/core-concepts/cypress-app#Command-Log"},"Command log"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"flag")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"w")),(0,i.kt)("td",{parentName:"tr",align:null},"File system flag as used with ",(0,i.kt)("a",{parentName:"td",href:"https://nodejs.org/api/fs.html#fs_file_system_flags"},(0,i.kt)("inlineCode",{parentName:"a"},"fs.writeFile")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"encoding")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"utf8")),(0,i.kt)("td",{parentName:"tr",align:null},"The encoding to be used when writing to the file")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"timeout")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/guides/references/configuration#Timeouts"},(0,i.kt)("inlineCode",{parentName:"a"},"defaultCommandTimeout"))),(0,i.kt)("td",{parentName:"tr",align:null},"Time to wait for ",(0,i.kt)("inlineCode",{parentName:"td"},".writeFile()")," to resolve before ",(0,i.kt)("a",{parentName:"td",href:"#Timeouts"},"timing out"))))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"To use encoding with other options, have your options object be your third\nparameter and include encoding there. This is the same behavior as\n",(0,i.kt)("a",{parentName:"p",href:"https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback"},(0,i.kt)("inlineCode",{parentName:"a"},"fs.writeFile")),".")),(0,i.kt)("h3",{id:"Yields"},"Yields ",(0,i.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Subject-Management"},(0,i.kt)(c,{name:"question-circle",mdxType:"Icon"}))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"cy.writeFile()")," yields ",(0,i.kt)("inlineCode",{parentName:"li"},"null"),".")),(0,i.kt)("h2",{id:"Examples"},"Examples"),(0,i.kt)("h3",{id:"Text"},"Text"),(0,i.kt)("h4",{id:"Write-some-text-to-a-txt-file"},"Write some text to a ",(0,i.kt)("inlineCode",{parentName:"h4"},"txt")," file"),(0,i.kt)("p",null,"If the path to the file does not exist, the file and its path will be created.\nIf the file already exists, it will be over-written."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.writeFile('path/to/message.txt', 'Hello World')\ncy.readFile('path/to/message.txt').then((text) => {\n  expect(text).to.equal('Hello World') // true\n})\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"{projectRoot}/path/to/message.txt")," will be created with the following contents:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},' "Hello World"\n')),(0,i.kt)("h3",{id:"JSON"},"JSON"),(0,i.kt)("h4",{id:"Write-JSON-to-a-file"},"Write JSON to a file"),(0,i.kt)("p",null,"JavaScript arrays and objects are stringified and formatted into text."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.writeFile('path/to/data.json', { name: 'Eliza', email: 'eliza@example.com' })\ncy.readFile('path/to/data.json').then((user) => {\n  expect(user.name).to.equal('Eliza') // true\n})\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"{projectRoot}/path/to/data.json")," will be created with the following contents:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "Eliza",\n  "email": "eliza@example.com"\n}\n')),(0,i.kt)("h4",{id:"Write-response-data-to-a-fixture-file"},"Write response data to a fixture file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.request('https://jsonplaceholder.typicode.com/users').then((response) => {\n  cy.writeFile('cypress/fixtures/users.json', response.body)\n})\n\n// our fixture file is now generated and can be used\ncy.fixture('users').then((users) => {\n  expect(users[0].name).to.exist\n})\n")),(0,i.kt)("h3",{id:"Encoding"},"Encoding"),(0,i.kt)("h4",{id:"Specify-the-encoding-as-a-String"},"Specify the encoding as a String"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.writeFile('path/to/ascii.txt', 'Hello World', 'ascii'))\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"{projectRoot}/path/to/message.txt")," will be created with the following contents:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Hello World\n")),(0,i.kt)("h4",{id:"Specify-the-encoding-as-part-of-the-options-object"},"Specify the encoding as part of the options object"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.writeFile('path/to/ascii.txt', 'Hello World', {\n  encoding: 'ascii',\n  flag: 'a+',\n})\n")),(0,i.kt)("h3",{id:"Flags"},"Flags"),(0,i.kt)("h4",{id:"Append-contents-to-the-end-of-a-file"},"Append contents to the end of a file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.writeFile('path/to/message.txt', 'Hello World', { flag: 'a+' })\n")),(0,i.kt)("p",null,"Note that appending assumes plain text file. If you want to merge a JSON object\nfor example, you need to read it first, add new properties, then write the\ncombined result back."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const filename = '/path/to/file.json'\n\ncy.readFile(filename).then((obj) => {\n  obj.id = '1234'\n  // write the merged object\n  cy.writeFile(filename, obj)\n})\n")),(0,i.kt)("p",null,"Similarly, if you need to push new items to an array"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const filename = '/path/to/list.json'\n\ncy.readFile(filename).then((list) => {\n  list.push({ item: 'example' })\n  // write the merged array\n  cy.writeFile(filename, list)\n})\n")),(0,i.kt)("h3",{id:"Buffer"},"Buffer"),(0,i.kt)("h4",{id:"Write-a-buffer-directly-without-encoding-as-a-string"},"Write a buffer directly without encoding as a string"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const filename = '/path/to/file.png'\n\ncy.readFile(filename, null).then((obj) => {\n  // <Buffer ef 3a bf ... >\n  cy.writeFile(filename, obj, null)\n})\n")),(0,i.kt)("h2",{id:"Rules"},"Rules"),(0,i.kt)("h3",{id:"Requirements"},"Requirements ",(0,i.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Chains-of-Commands"},(0,i.kt)(c,{name:"question-circle",mdxType:"Icon"}))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"cy.writeFile()")," requires being chained off of ",(0,i.kt)("inlineCode",{parentName:"li"},"cy"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"cy.writeFile()")," requires the file be successfully written to disk. Anything\npreventing this such as OS permission issues will cause it to fail.")),(0,i.kt)("h3",{id:"Assertions"},"Assertions ",(0,i.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Assertions"},(0,i.kt)(c,{name:"question-circle",mdxType:"Icon"}))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"cy.writeFile()")," will only run assertions you have chained once, and will not\n",(0,i.kt)("a",{parentName:"li",href:"/guides/core-concepts/retry-ability"},"retry"),".")),(0,i.kt)("h3",{id:"Timeouts"},"Timeouts ",(0,i.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Timeouts"},(0,i.kt)(c,{name:"question-circle",mdxType:"Icon"}))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"cy.writeFile()")," can time out when the content being written takes a\nsignificant amount of time to encode.")),(0,i.kt)("h2",{id:"Command-Log"},"Command Log"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Write an array to a file"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.writeFile('info.log', ['foo', 'bar', 'baz'])\n")),(0,i.kt)("p",null,"The command above will display in the Command Log as:"),(0,i.kt)(m,{src:"/img/api/writefile/write-data-to-system-file-for-testing.png",alt:"Command Log writeFile",mdxType:"DocsImage"}),(0,i.kt)("p",null,"When clicking on the ",(0,i.kt)("inlineCode",{parentName:"p"},"writeFile")," command within the command log, the console\noutputs the following:"),(0,i.kt)(m,{src:"/img/api/writefile/console-log-shows-contents-written-to-file.png",alt:"Console Log writeFile",mdxType:"DocsImage"}),(0,i.kt)("h2",{id:"History"},"History"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Version"),(0,i.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/guides/references/changelog#9-2-0"},"9.2.0")),(0,i.kt)("td",{parentName:"tr",align:null},"Added ",(0,i.kt)("inlineCode",{parentName:"td"},"timeout")," option")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/guides/references/changelog#4-0-0"},"4.0.0")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"cy.writeFile()")," now yields ",(0,i.kt)("inlineCode",{parentName:"td"},"null")," instead of ",(0,i.kt)("inlineCode",{parentName:"td"},"contents"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/guides/references/changelog#3-1-1"},"3.1.1")),(0,i.kt)("td",{parentName:"tr",align:null},"Added ",(0,i.kt)("inlineCode",{parentName:"td"},"flag")," option and appending with ",(0,i.kt)("inlineCode",{parentName:"td"},"a+"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/guides/references/changelog#1.0.0"},"1.0.0")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"cy.writeFile()")," command added")))),(0,i.kt)("h2",{id:"See-also"},"See also"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/commands/readfile"},(0,i.kt)("inlineCode",{parentName:"a"},"cy.readFile()")))))}k.isMDXComponent=!0}}]);