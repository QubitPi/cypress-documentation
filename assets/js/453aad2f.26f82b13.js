"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[5130],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var s=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,s,r=function(e,n){if(null==e)return{};var t,s,r={},o=Object.keys(e);for(s=0;s<o.length;s++)t=o[s],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)t=o[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=s.createContext({}),l=function(e){var n=s.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=l(e.components);return s.createElement(p.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},f=s.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=l(t),f=r,m=u["".concat(p,".").concat(f)]||u[f]||c[f]||o;return t?s.createElement(m,a(a({ref:n},d),{},{components:t})):s.createElement(m,a({ref:n},d))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=f;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[u]="string"==typeof e?e:r,a[1]=i;for(var l=2;l<o;l++)a[l]=t[l];return s.createElement.apply(null,a)}return s.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9235:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var s=t(7462),r=(t(7294),t(3905));const o={title:"Screenshots and Videos"},a=void 0,i={unversionedId:"guides/guides/screenshots-and-videos",id:"guides/guides/screenshots-and-videos",title:"Screenshots and Videos",description:"What you'll learn",source:"@site/docs/guides/guides/screenshots-and-videos.mdx",sourceDirName:"guides/guides",slug:"/guides/guides/screenshots-and-videos",permalink:"/cypress-documentation/guides/guides/screenshots-and-videos",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/guides/guides/screenshots-and-videos.mdx",tags:[],version:"current",frontMatter:{title:"Screenshots and Videos"},sidebar:"guides",previous:{title:"Parallelization",permalink:"/cypress-documentation/guides/guides/parallelization"},next:{title:"Stubs, Spies, and Clocks",permalink:"/cypress-documentation/guides/guides/stubs-spies-and-clocks"}},p={},l=[{value:"Screenshots",id:"Screenshots",level:2},{value:"Videos",id:"Videos",level:2},{value:"Video encoding",id:"Video-encoding",level:3},{value:"Control which videos to keep and upload to Cypress Cloud",id:"Control-which-videos-to-keep-and-upload-to-Cypress-Cloud",level:3},{value:"Delete videos for specs without failing or retried tests",id:"Delete-videos-for-specs-without-failing-or-retried-tests",level:3},{value:"Now What?",id:"Now-What",level:2},{value:"Share Them With Your Team",id:"Share-Them-With-Your-Team",level:3},{value:"Visual Regression Test / Screenshot Diffing",id:"Visual-Regression-Test--Screenshot-Diffing",level:3},{value:"See also",id:"See-also",level:2}],d=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",n)},u=d("Icon"),c=d("CypressConfigFileTabs"),f={toc:l};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,s.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("h2",{parentName:"admonition",id:"What-youll-learn"},(0,r.kt)(u,{name:"graduation-cap",mdxType:"Icon"})," What you'll learn"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"How Cypress captures screenshots of test failures automatically"),(0,r.kt)("li",{parentName:"ul"},"How to manually capture your own screenshot"),(0,r.kt)("li",{parentName:"ul"},"How Cypress can record a video of the entire run"),(0,r.kt)("li",{parentName:"ul"},"Some options of what to do with screenshot and video artifacts"))),(0,r.kt)("h2",{id:"Screenshots"},"Screenshots"),(0,r.kt)("p",null,"Cypress comes with the ability to take screenshots, whether you are running via\n",(0,r.kt)("inlineCode",{parentName:"p"},"cypress open")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"cypress run"),", even in CI."),(0,r.kt)("p",null,"To take a manual screenshot you can use the\n",(0,r.kt)("a",{parentName:"p",href:"/api/commands/screenshot"},(0,r.kt)("inlineCode",{parentName:"a"},"cy.screenshot()"))," command."),(0,r.kt)("p",null,"Additionally, Cypress will automatically capture screenshots when a failure\nhappens during ",(0,r.kt)("inlineCode",{parentName:"p"},"cypress run"),". Screenshots on failure are ",(0,r.kt)("em",{parentName:"p"},"not")," automatically\ntaken during ",(0,r.kt)("inlineCode",{parentName:"p"},"cypress open"),"."),(0,r.kt)("p",null,"Capturing of screenshots when a test fails can be turned off entirely by setting\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#Screenshots"},(0,r.kt)("inlineCode",{parentName:"a"},"screenshotOnRunFailure"))," to\n",(0,r.kt)("inlineCode",{parentName:"p"},"false")," from within the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration"},"Cypress configuration")," or by setting\n",(0,r.kt)("inlineCode",{parentName:"p"},"screenshotOnRunFailure")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," in the\n",(0,r.kt)("a",{parentName:"p",href:"/api/cypress-api/screenshot-api"},"Cypress.Screenshot.defaults()"),"."),(0,r.kt)("p",null,"Screenshots are stored in the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#Screenshots"},(0,r.kt)("inlineCode",{parentName:"a"},"screenshotsFolder"))," which is set\nto ",(0,r.kt)("inlineCode",{parentName:"p"},"cypress/screenshots")," by default."),(0,r.kt)("p",null,"Cypress clears any existing screenshots before ",(0,r.kt)("inlineCode",{parentName:"p"},"cypress run"),". If you do not want\nto clear your screenshots folder before a run, you can set\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#Screenshots"},(0,r.kt)("inlineCode",{parentName:"a"},"trashAssetsBeforeRuns"))," to\n",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("h2",{id:"Videos"},"Videos"),(0,r.kt)("p",null,"Cypress records a video for each spec file when running tests during\n",(0,r.kt)("inlineCode",{parentName:"p"},"cypress run"),". Videos are ",(0,r.kt)("em",{parentName:"p"},"not")," automatically recorded during ",(0,r.kt)("inlineCode",{parentName:"p"},"cypress open"),"."),(0,r.kt)("p",null,"Video recording can be turned off entirely by setting\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#Videos"},(0,r.kt)("inlineCode",{parentName:"a"},"video"))," to ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," from within your\nconfiguration."),(0,r.kt)("p",null,"Videos are stored in the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#Videos"},(0,r.kt)("inlineCode",{parentName:"a"},"videosFolder"))," which is set to\n",(0,r.kt)("inlineCode",{parentName:"p"},"cypress/videos")," by default."),(0,r.kt)("p",null,"After ",(0,r.kt)("inlineCode",{parentName:"p"},"cypress run")," completes, Cypress automatically compresses the video in\norder to save on file size. By default it compresses to a ",(0,r.kt)("inlineCode",{parentName:"p"},"32 CRF"),", but this is\nconfigurable with the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#Videos"},(0,r.kt)("inlineCode",{parentName:"a"},"videoCompression"))," property."),(0,r.kt)("p",null,"When using the ",(0,r.kt)("inlineCode",{parentName:"p"},"--record")," flag while running your tests, videos are processed,\ncompressed, and uploaded to ",(0,r.kt)("a",{parentName:"p",href:"/guides/cloud/introduction"},"Cypress Cloud")," after\nevery spec file runs, successful or not. To change this behavior to only process\nvideos in the case that tests fail, set the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#Videos"},(0,r.kt)("inlineCode",{parentName:"a"},"videoUploadOnPasses"))," configuration\noption to ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("p",null,"Cypress clears any existing videos before a ",(0,r.kt)("inlineCode",{parentName:"p"},"cypress run"),". If you do not want to\nclear your videos folder before a run, you can set\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#Videos"},(0,r.kt)("inlineCode",{parentName:"a"},"trashAssetsBeforeRuns"))," to ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("h3",{id:"Video-encoding"},"Video encoding"),(0,r.kt)("p",null,"If your spec files have a long run duration, you might notice a time gap between\na finished spec and a new spec starting during ",(0,r.kt)("inlineCode",{parentName:"p"},"cypress run"),". During this time,\nCypress is encoding the captured video and possibly uploading it to Cypress\nCloud."),(0,r.kt)("p",null,"If the machine is encoding the video slowly (which is often the case for virtual\nmachines that use less CPU cores), the encoding might take a long time. In this\ncase, you can modify the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#Videos"},(0,r.kt)("inlineCode",{parentName:"a"},"videoCompression"))," configuration to\nmake the encoding a little bit faster. Here are some common scenarios:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Change compression value")),(0,r.kt)("cypress-config-example",null,(0,r.kt)(c,{mdxType:"CypressConfigFileTabs"},(0,r.kt)("pre",{parentName:"cypress-config-example"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  videoCompression: 15,\n})\n")),(0,r.kt)("pre",{parentName:"cypress-config-example"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  videoCompression: 15,\n})\n")))),(0,r.kt)("p",null,"A lower ",(0,r.kt)("inlineCode",{parentName:"p"},"videoCompression")," value will spend less time compressing and result in\na bigger video file size."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Disable compression")),(0,r.kt)("cypress-config-example",null,(0,r.kt)(c,{mdxType:"CypressConfigFileTabs"},(0,r.kt)("pre",{parentName:"cypress-config-example"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  videoCompression: false,\n})\n")),(0,r.kt)("pre",{parentName:"cypress-config-example"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  videoCompression: false,\n})\n")))),(0,r.kt)("p",null,"The compression step will be skipped completely, so the video will be large, but\nthe processing should be faster."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If you are an FFmpeg pro and want to see all the settings and debug messages\nduring the encoding, run Cypress with the following environment variable:\n",(0,r.kt)("inlineCode",{parentName:"p"},"DEBUG=cypress:server:video cypress run"))),(0,r.kt)("h3",{id:"Control-which-videos-to-keep-and-upload-to-Cypress-Cloud"},"Control which videos to keep and upload to Cypress Cloud"),(0,r.kt)("p",null,"You may want to have more control over which videos you want to keep and upload\nto Cypress Cloud. Deleting videos after the run can save resource space on the\nmachine as well as skip the time used to process, compress, and upload the video\nto ",(0,r.kt)("a",{parentName:"p",href:"/guides/cloud/introduction"},"Cypress Cloud"),"."),(0,r.kt)("p",null,"To only process videos in the case that a test fails, you can set the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#Videos"},(0,r.kt)("inlineCode",{parentName:"a"},"videoUploadOnPasses"))," configuration\noption to ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,r.kt)("p",null,"For more fine grained control, you can use Cypress's\n",(0,r.kt)("a",{parentName:"p",href:"/api/plugins/after-spec-api"},(0,r.kt)("inlineCode",{parentName:"a"},"after:spec"))," event listener that fires after each\nspec file is run and delete the video when certain conditions are met."),(0,r.kt)("h3",{id:"Delete-videos-for-specs-without-failing-or-retried-tests"},"Delete videos for specs without failing or retried tests"),(0,r.kt)("p",null,"The example below shows how to delete the recorded video for specs that had no\nretry attempts or failures when using Cypress\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/test-retries"},"test retries"),"."),(0,r.kt)("cypress-config-plugin-example",null,(0,r.kt)(c,{mdxType:"CypressConfigFileTabs"},(0,r.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { defineConfig } = require('cypress')\nconst fs = require('fs')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('after:spec', (spec, results) => {\n        if (results && results.video) {\n          // Do we have failures for any retry attempts?\n          const failures = results.tests.some((test) =>\n            test.attempts.some((attempt) => attempt.state === 'failed')\n          )\n          if (!failures) {\n            // delete the video if the spec passed and no tests retried\n            fs.unlinkSync(results.video)\n          }\n        }\n      })\n    },\n  },\n})\n")),(0,r.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { defineConfig } from 'cypress'\nimport fs from 'fs'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on(\n        'after:spec',\n        (spec: Cypress.Spec, results: CypressCommandLine.RunResult) => {\n          if (results && results.video) {\n            // Do we have failures for any retry attempts?\n            const failures = results.tests.some((test) =>\n              test.attempts.some((attempt) => attempt.state === 'failed')\n            )\n            if (!failures) {\n              // delete the video if the spec passed and no tests retried\n              fs.unlinkSync(results.video)\n            }\n          }\n        }\n      )\n    },\n  },\n})\n")))),(0,r.kt)("h2",{id:"Now-What"},"Now What?"),(0,r.kt)("p",null,"So you are capturing screenshots and recording videos of your test runs, now\nwhat?"),(0,r.kt)("h3",{id:"Share-Them-With-Your-Team"},"Share Them With Your Team"),(0,r.kt)("p",null,"Something you can take advantage of today is\n",(0,r.kt)("a",{parentName:"p",href:"/guides/cloud/introduction"},"Cypress Cloud"),": our companion enterprise service\nthat stores your artifacts for you and lets you view them from any web browser,\nas well as share them with your team."),(0,r.kt)("h3",{id:"Visual-Regression-Test--Screenshot-Diffing"},"Visual Regression Test / Screenshot Diffing"),(0,r.kt)("p",null,"Another possibility is visual regression testing: comparing screenshots of past\nruns with the current run to ensure that nothing changed.\n",(0,r.kt)("a",{parentName:"p",href:"/guides/tooling/visual-testing"},"Read about how to implement visual testing.")),(0,r.kt)("h2",{id:"See-also"},"See also"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/plugins/after-screenshot-api"},"After Screenshot API")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/cypress-api/screenshot-api"},"Cypress.Screenshot")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/guides/cloud/introduction"},"Cypress Cloud")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/commands/screenshot"},(0,r.kt)("inlineCode",{parentName:"a"},"cy.screenshot()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/guides/tooling/visual-testing"},"Visual Testing"))))}m.isMDXComponent=!0}}]);