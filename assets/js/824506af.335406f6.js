"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[7150],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var i=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=i.createContext({}),l=function(e){var n=i.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=l(e.components);return i.createElement(p.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(t),u=o,f=d["".concat(p,".").concat(u)]||d[u]||m[u]||r;return t?i.createElement(f,a(a({ref:n},c),{},{components:t})):i.createElement(f,a({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,a=new Array(r);a[0]=u;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s[d]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<r;l++)a[l]=t[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1042:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var i=t(7462),o=(t(7294),t(3905));const r={},a="Integrating with Cypress Component Testing",s={unversionedId:"guides/component-testing/third-party-definitions",id:"guides/component-testing/third-party-definitions",title:"Integrating with Cypress Component Testing",description:"This feature is only available in Cypress 12.7 and later.",source:"@site/docs/guides/component-testing/third-party-definitions.mdx",sourceDirName:"guides/component-testing",slug:"/guides/component-testing/third-party-definitions",permalink:"/cypress-documentation/guides/component-testing/third-party-definitions",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/guides/component-testing/third-party-definitions.mdx",tags:[],version:"current",frontMatter:{},sidebar:"guides",previous:{title:"Svelte API",permalink:"/cypress-documentation/guides/component-testing/svelte/api"},next:{title:"Introduction to Cypress",permalink:"/cypress-documentation/guides/core-concepts/introduction-to-cypress"}},p={},l=[{value:"Concepts",id:"Concepts",level:2},{value:"Framework Definition",id:"Framework-Definition",level:2},{value:"Mount Adapter",id:"Mount-Adapter",level:2},{value:"package.json",id:"packagejson",level:2},{value:"Testing",id:"Testing",level:2},{value:"Publishing on npm",id:"Publishing-on-npm",level:2},{value:"List of Framework Definitions",id:"List-of-Framework-Definitions",level:2}],c=(d="DocsImage",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var d;const m={toc:l};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,i.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"Integrating-with-Cypress-Component-Testing"},"Integrating with Cypress Component Testing"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This feature is only available in Cypress 12.7 and later.")),(0,o.kt)("p",null,"Cypress Component Testing includes\n",(0,o.kt)("a",{parentName:"p",href:"/guides/component-testing/overview#Supported-Frameworks"},"official support")," for\nmany popular libraries and frameworks such as\n",(0,o.kt)("a",{parentName:"p",href:"/guides/component-testing/react/overview"},"React"),",\n",(0,o.kt)("a",{parentName:"p",href:"/guides/component-testing/angular/overview"},"Angular"),", and\n",(0,o.kt)("a",{parentName:"p",href:"/guides/component-testing/vue/overview"},"Vue"),". All officially supported\nlibraries feature a first class onboarding experience, where we detect and\nscaffold the correct files, and a framework-specific ",(0,o.kt)("inlineCode",{parentName:"p"},"mount")," adapter to render\nyour components. We call this collection of features a ",(0,o.kt)("em",{parentName:"p"},"Framework Definition"),"\nsince it defines the requirements for a library or framework to work in Cypress."),(0,o.kt)("p",null,"If your favorite library isn't featured, don't worry - we expose the same API we\nuse internally for the Cypress community to define their own Framework\nDefinitions."),(0,o.kt)("p",null,"In this guide, you'll learn how to author a Framework Definition, which will\nenjoy the same polished onboarding experience as our officially supported\nframeworks."),(0,o.kt)("h2",{id:"Concepts"},"Concepts"),(0,o.kt)("p",null,"There are a few requirements for authoring a Framework Definition."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#Framework-Definition"},"Definition File")," (we recommending naming this\n",(0,o.kt)("inlineCode",{parentName:"li"},"definition.cjs"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#Mount-Adapter"},"Mount Adapter")," (we recommending naming this ",(0,o.kt)("inlineCode",{parentName:"li"},"index.mjs"),")"),(0,o.kt)("li",{parentName:"ul"},"A ",(0,o.kt)("a",{parentName:"li",href:"#packagejson"},(0,o.kt)("inlineCode",{parentName:"a"},"package.json"))," with the correct conventions")),(0,o.kt)("p",null,"The Definition is required when users configure Component Testing for the first\ntime. The Mount adapter is used to render components when writing tests."),(0,o.kt)("p",null,"To simplify this process, we recommend starting development using\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress-ct-definition-template"},"our official template"),"."),(0,o.kt)("h2",{id:"Framework-Definition"},"Framework Definition"),(0,o.kt)("p",null,"Below is a minimal Framework Definition. Note that ",(0,o.kt)("inlineCode",{parentName:"p"},"defineFrameworkDefinition"),"\nis purely for type safety, similar to ",(0,o.kt)("inlineCode",{parentName:"p"},"defineConfig")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"cypress.config"),"."),(0,o.kt)("p",null,"There is one important convention; the ",(0,o.kt)("inlineCode",{parentName:"p"},"type")," key in ",(0,o.kt)("inlineCode",{parentName:"p"},"defineFrameworkDefinition"),"\nshould match the name of your package on npm, and should be named using one of\nthe following conventions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cypress-ct-*")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"@organization/cypress-ct-*"))),(0,o.kt)("p",null,"Some examples of valid names include:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cypress-ct-react-js")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cypress-ct-svelte-testing")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"@cypress/cypress-ct-react")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"@angular/cypress-ct-angular"))),(0,o.kt)("p",null,"When configuring a project to use Component Testing, Cypress will load any\ndependencies following this naming convention from the project's ",(0,o.kt)("inlineCode",{parentName:"p"},"node_modules"),"\nand present them as framework options."),(0,o.kt)("p",null,"A simple example of a Framework Defintion for the\n",(0,o.kt)("a",{parentName:"p",href:"https://www.solidjs.com/"},"Solid.js")," library is shown below. We generally\nrecommend naming this ",(0,o.kt)("inlineCode",{parentName:"p"},"definition.cjs"),". In our\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress-ct-definition-template"},"official template"),",\nthis file is at the root level of the package."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const { defineFrameworkDefinition } = require(\'cypress\')\n\nconst solidDep = {\n  // Unique, semantic identifier.\n  type: \'solid-js\',\n\n  // Human readable name.\n  name: \'Solid\',\n\n  // Package name install from `npm`.\n  package: \'solid-js\',\n\n  /**\n   * Similar to package, but can include a version or tag.\n   * Used during setup to generate an install command for users.\n   * Eg: `solid-js@next`\n   */\n  installer: \'solid-js\',\n\n  // Human readable description.\n  description:\n    \'A declarative, efficient, and flexible JavaScript library for building user interfaces.\',\n\n  // Minimum supported version.\n  minVersion: \'^1.6.0\',\n}\n\n/**\n * Similar to above. Create an smooth, seamless setup experience\n * by ensuring the user has all the necessary dependencies.\n * @type {Cypress.CypressComponentDependency}\n */\nconst solidVitePlugin = {\n  type: \'solid-js-vite-plugin\',\n  name: \'Vite Plugin Solid\',\n  package: \'vite-plugin-solid\',\n  installer: \'vite-plugin-solid\',\n  description: \'A simple integration to run solid-js with vite\',\n  minVersion: \'^1.6.0 || ^2.0.0\',\n}\n\n/**\n * The actual definition.\n */\nmodule.exports = defineFrameworkDefinition({\n  /**\n   * This should match the `npm` package name.\n   * The convention required to ensure your Definition is processed\n   * by Cypress is `cypress-ct-*` for global packages, or\n   * `@org/cypress-ct-*` for organization level packages.\n   */\n  type: \'@lmiller1990/cypress-ct-solid-js\',\n\n  /**\n   * The label that shows up when configuring Component Testing\n   * for the first time.\n   */\n  name: \'Solid.js\',\n\n  /**\n   * Supported bundlers. Can be "webpack" and/or "vite".\n   * In this example we only support Solid.js with Vite.\n   */\n  supportedBundlers: [\'vite\'],\n\n  /**\n   * Used by Cypress to automatically detect the correct Framework Definition\n   * based on the user\'s project.\n   * In this example, if a module matching `solidDep`\n   * is found in the user\'s project,\n   * Solid.js will automatically be selected when configuring Component Testing.\n   */\n  detectors: [solidDep],\n\n  /**\n   * Supply a set of dependencies a project should have to use this Framework Definition. The user will be prompted to install them if they are not found.\n   * Optionally, supply different dependencies based on the chosen bundler.\n   */\n  dependencies: (bundler) => {\n    return [solidDep, solidVitePlugin]\n  },\n\n  /**\n   * An SVG icon. Shown when configuring Component Testing for the first time.\n   * Optional, but good for branding your Framework Definition.\n   */\n  icon: `\n    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 166 155.3"><path d="M163 35S110-4 69 5l-3 1c-6 2-11 5-14 9l-2 3-15 26 26 5c11 7 25 10 38 7l46 9 18-30z" fill="#76b3e1"/><linearGradient id="a" gradientUnits="userSpaceOnUse" x1="27.5" y1="3" x2="152" y2="63.5"><stop offset=".1" stop-color="#76b3e1"/><stop offset=".3" stop-color="#dcf2fd"/><stop offset="1" stop-color="#76b3e1"/></linearGradient><path d="M163 35S110-4 69 5l-3 1c-6 2-11 5-14 9l-2 3-15 26 26 5c11 7 25 10 38 7l46 9 18-30z" opacity=".3" fill="url(#a)"/><path d="M52 35l-4 1c-17 5-22 21-13 35 10 13 31 20 48 15l62-21S92 26 52 35z" fill="#518ac8"/><linearGradient id="b" gradientUnits="userSpaceOnUse" x1="95.8" y1="32.6" x2="74" y2="105.2"><stop offset="0" stop-color="#76b3e1"/><stop offset=".5" stop-color="#4377bb"/><stop offset="1" stop-color="#1f3b77"/></linearGradient><path d="M52 35l-4 1c-17 5-22 21npm install https://cdn.cypress.io/beta/npm/12.6.0/darwin-arm64/feature/ct-public-api-ab820f062d313fbef51665bdd1d883c69d89b3be/cypress.tgz-13 35 10 13 31 20 48 15l62-21S92 26 52 35z" opacity=".3" fill="url(#b)"/><linearGradient id="c" gradientUnits="userSpaceOnUse" x1="18.4" y1="64.2" x2="144.3" y2="149.8"><stop offset="0" stop-color="#315aa9"/><stop offset=".5" stop-color="#518ac8"/><stop offset="1" stop-color="#315aa9"/></linearGradient><path d="M134 80a45 45 0 00-48-15L24 85 4 120l112 19 20-36c4-7 3-15-2-23z" fill="url(#c)"/><linearGradient id="d" gradientUnits="userSpaceOnUse" x1="75.2" y1="74.5" x2="24.4" y2="260.8"><stop offset="0" stop-color="#4377bb"/><stop offset=".5" stop-color="#1a336b"/><stop offset="1" stop-color="#1a336b"/></linearGradient><path d="M114 115a45 45 0 00-48-15L4 120s53 40 94 30l3-1c17-5 23-21 13-34z" fill="url(#d)"/></svg>\n  `,\n})\n')),(0,o.kt)("p",null,'Our Framework Definition shows up in Cypress! It has the "community" label,\nindicating it\'s a third party definition.'),(0,o.kt)(c,{src:"/img/guides/component-testing/framework-definition-1.png",alt:"custom framework definition",mdxType:"DocsImage"}),(0,o.kt)("p",null,"We defined the ",(0,o.kt)("inlineCode",{parentName:"p"},"dependencies"),", which are also correctly handled - we haven't\ninstalled them all, so Cypress is prompting us to do so:"),(0,o.kt)(c,{src:"/img/guides/component-testing/framework-definition-2.png",alt:"required dependencies",mdxType:"DocsImage"}),(0,o.kt)("h2",{id:"Mount-Adapter"},"Mount Adapter"),(0,o.kt)("p",null,"The second part of defining a Framework Definition is the Mount Adapter. This is\nthe function that renders the component in your tests using ",(0,o.kt)("inlineCode",{parentName:"p"},"cy.mount()"),"."),(0,o.kt)("p",null,"By default, Cypress will look for this as a ",(0,o.kt)("inlineCode",{parentName:"p"},"mount")," function that is a ",(0,o.kt)("strong",{parentName:"p"},"named\nexport")," from the package. This should be written in a ",(0,o.kt)("inlineCode",{parentName:"p"},"index.mjs")," file. This\nexample is for a ",(0,o.kt)("a",{parentName:"p",href:"https://www.solidjs.com/"},"Solid.js")," mount adapter:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { getContainerEl, setupHooks } from '@cypress/mount-utils'\nimport { render } from 'solid-js/web'\n\nlet dispose\n\nfunction cleanup() {\n  dispose?.()\n}\n\n/**\n * @param {() => JSX.Element} - component to render\n */\nexport function mount(component, options = {}) {\n  // Retrieve root DOM element that Cypress has prepared for this test\n  const root = getContainerEl()\n\n  dispose = render(() => component, root)\n\n  // Wait until next microtick to ensure any async render logic has executed\n  return cy.wait(0, { log: false }).then(() => {\n    if (options.log !== false) {\n      Cypress.log({\n        name: 'mount',\n        message: 'Mounted component',\n      })\n    }\n  })\n}\n\n// Cleanup between each test\nsetupHooks(cleanup)\n")),(0,o.kt)("p",null,"This is different for each library, but the concept is the same - identify how\nto mount or render a component in your library, and implement it in a function\nnamed ",(0,o.kt)("inlineCode",{parentName:"p"},"mount")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"index.mjs"),"."),(0,o.kt)("p",null,"When a user configures Component Testing with your Framework Definition we\nautomatically configure a ",(0,o.kt)("inlineCode",{parentName:"p"},"cy.mount")," command using your ",(0,o.kt)("inlineCode",{parentName:"p"},"mount")," function in the\nComponent Testing ",(0,o.kt)("inlineCode",{parentName:"p"},"supportFile"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { mount } from '@lmiller1990/cypress-ct-solid-js'\n\nCypress.Commands.add('mount', mount)\n")),(0,o.kt)("h2",{id:"packagejson"},"package.json"),(0,o.kt)("p",null,"The final thing you need is a correctly configured ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json"),". This example\nwas created using\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress-ct-definition-template"},"our official template"),"."),(0,o.kt)("p",null,"There are two fields of note:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"name"),": Your package name which must follow the\n",(0,o.kt)("inlineCode",{parentName:"li"},"cypress-ct-*"),"/",(0,o.kt)("inlineCode",{parentName:"li"},"@org/cypress-ct-*")," convention"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"exports"),": Object referencing the two files we created to comprise the\nFramework Definition. The ",(0,o.kt)("inlineCode",{parentName:"li"},"node")," entry points to the Definition file, and the\n",(0,o.kt)("inlineCode",{parentName:"li"},"default")," entry points to the Mount Adapter:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:"{2,5-8}","{2,5-8}":!0},'{\n  "name": "@lmiller1990/cypress-ct-solid-js",\n  "version": "0.0.4",\n  "description": "Example Framework Definition for Cypress and Solid.js",\n  "exports": {\n    "node": "./definition.cjs",\n    "default": "./index.mjs"\n  },\n  "files": [\n    "package.json",\n    "definition.cjs",\n    "index.mjs"\n  ],\n  "dependencies": {\n    "@cypress/mount-utils": "^4.0.0"\n  },\n  "devDependencies": {\n    "solid-js": "^1.6.0"\n  },\n  "peerDependencies": {\n    "solid-js": "^1.6.0"\n    "cypress": "^12.7.0"\n  }\n}\n')),(0,o.kt)("h2",{id:"Testing"},"Testing"),(0,o.kt)("p",null,"If you develop the Framework Definition file using TypeScript, for example by\nusing\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress-ct-definition-template"},"our official template"),",\nas long as you don't have any compile time errors, everything should work as\nexpected. If you do run into unexpected behavior, please\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress/issues"},"file an issue"),"."),(0,o.kt)("p",null,"Mount Adapters can be more complex to test. In general, we recommend testing\nthem in the same way users consume them - using Cypress Component Testing. A\nminimal test suite for a simple Solid.js Mount Adapter can be found\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/lmiller1990/cypress-ct-solid-js/tree/main/example-project"},"here"),".\nAlternatively, take a look at our official\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress/tree/develop/npm/react"},"React")," and\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress/tree/develop/npm/angular"},"Angular")," Mount\nAdapters, both of which have extensive test suites."),(0,o.kt)("h2",{id:"Publishing-on-npm"},"Publishing on npm"),(0,o.kt)("p",null,"That's it! Publish your Framework Definition on npm and start using it."),(0,o.kt)("h2",{id:"List-of-Framework-Definitions"},"List of Framework Definitions"),(0,o.kt)("p",null,"Once your Framework Definition is published and ready for use we would be\ndelighted to mention it in our documentation so other Cypress users on the same\nframework can find it.\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress-documentation/blob/main/CONTRIBUTING.md"},"Submit a Pull Request"),"!"))}u.isMDXComponent=!0}}]);