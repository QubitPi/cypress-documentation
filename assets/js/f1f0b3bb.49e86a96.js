"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[8630],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(n),u=i,h=m["".concat(s,".").concat(u)]||m[u]||d[u]||l;return n?a.createElement(h,r(r({ref:t},c),{},{components:n})):a.createElement(h,r({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:i,r[1]=o;for(var p=2;p<l;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3187:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const l={title:"contains",slug:"/api/commands/contains"},r=void 0,o={unversionedId:"api/queries/contains",id:"api/queries/contains",title:"contains",description:"Get the DOM element containing the text. DOM elements can contain more than",source:"@site/docs/api/queries/contains.mdx",sourceDirName:"api/queries",slug:"/api/commands/contains",permalink:"/cypress-documentation/api/commands/contains",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/queries/contains.mdx",tags:[],version:"current",lastUpdatedAt:1696480553,formattedLastUpdatedAt:"Oct 5, 2023",frontMatter:{title:"contains",slug:"/api/commands/contains"},sidebar:"api",previous:{title:"closest",permalink:"/cypress-documentation/api/commands/closest"},next:{title:"document",permalink:"/cypress-documentation/api/commands/document"}},s={},p=[{value:"Syntax",id:"Syntax",level:2},{value:"Usage",id:"Usage",level:3},{value:"Arguments",id:"Arguments",level:3},{value:'Yields <Icon name="question-circle"/>',id:"Yields",level:3},{value:"Examples",id:"Examples",level:2},{value:"Content",id:"Content",level:3},{value:"Find the first element containing some text",id:"Find-the-first-element-containing-some-text",level:4},{value:"Find the <code>input[type=&#39;submit&#39;]</code> by value",id:"Find-the-inputtypesubmit-by-value",level:4},{value:"Number",id:"Number",level:3},{value:"Find the first element containing a number",id:"Find-the-first-element-containing-a-number",level:4},{value:"Regular Expression",id:"Regular-Expression",level:3},{value:"Find the first element with text matching the regular expression",id:"Find-the-first-element-with-text-matching-the-regular-expression",level:4},{value:"Selector",id:"Selector",level:3},{value:"Specify a selector to return a specific element",id:"Specify-a-selector-to-return-a-specific-element",level:4},{value:"Keep the form as the subject",id:"Keep-the-form-as-the-subject",level:4},{value:"Case Sensitivity",id:"Case-Sensitivity",level:3},{value:"Notes",id:"Notes",level:2},{value:"Scopes",id:"Scopes",level:3},{value:"When starting a series of commands:",id:"When-starting-a-series-of-commands",level:4},{value:"When chained to an existing series of commands",id:"When-chained-to-an-existing-series-of-commands",level:4},{value:"Be wary of chaining multiple contains",id:"Be-wary-of-chaining-multiple-contains",level:4},{value:"Leading, trailing, duplicate whitespaces aren&#39;t ignored in <code>&lt;pre&gt;</code> tag",id:"Leading-trailing-duplicate-whitespaces-arent-ignored-in-pre-tag",level:3},{value:"Non-breaking space",id:"Non-breaking-space",level:3},{value:"Single Element",id:"Single-Element",level:3},{value:"Only the <em>first</em> matched element will be returned",id:"Only-the-first-matched-element-will-be-returned",level:4},{value:"Default <code>&lt;input type=&quot;submit&quot;&gt;</code> labels",id:"Default-input-typesubmit-labels",level:3},{value:"Preferences",id:"Preferences",level:3},{value:"Element preference order",id:"Element-preference-order",level:4},{value:"Favor of <code>&lt;button&gt;</code> over other deeper elements",id:"Favor-of-button-over-other-deeper-elements",level:4},{value:"Favor of <code>&lt;a&gt;</code> over other deeper elements",id:"Favor-of-a-over-other-deeper-elements",level:4},{value:"Favor of <code>&lt;label&gt;</code> over other deeper elements",id:"Favor-of-label-over-other-deeper-elements",level:4},{value:"Rules",id:"Rules",level:2},{value:'Requirements <Icon name="question-circle"/>',id:"Requirements",level:3},{value:'Assertions <Icon name="question-circle"/>',id:"Assertions",level:3},{value:'Timeouts <Icon name="question-circle"/>',id:"Timeouts",level:3},{value:"Command Log",id:"Command-Log",level:2},{value:"History",id:"History",level:2},{value:"See also",id:"See-also",level:2}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",t)},m=c("Icon"),d=c("DocsImage"),u={toc:p};function h(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Get the DOM element containing the text. DOM elements can contain ",(0,i.kt)("em",{parentName:"p"},"more")," than\nthe desired text and still match. Additionally, Cypress\n",(0,i.kt)("a",{parentName:"p",href:"#Notes"},"prefers some DOM elements")," over the deepest element found."),(0,i.kt)("h2",{id:"Syntax"},"Syntax"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},".contains(content)\n.contains(content, options)\n.contains(selector, content)\n.contains(selector, content, options)\n\n// ---or---\n\ncy.contains(content)\ncy.contains(content, options)\ncy.contains(selector, content)\ncy.contains(selector, content, options)\n")),(0,i.kt)("h3",{id:"Usage"},"Usage"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(m,{name:"check-circle",color:"green",mdxType:"Icon"})," Correct Usage")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.get('.nav').contains('About') // Yield el in .nav containing 'About'\ncy.contains('Hello') // Yield first el in document containing 'Hello'\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(m,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Incorrect Usage")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.title().contains('My App') // Errors, 'title' does not yield DOM element\ncy.getCookies().contains('_key') // Errors, 'getCookies' does not yield DOM element\n")),(0,i.kt)("h3",{id:"Arguments"},"Arguments"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(m,{name:"angle-right",mdxType:"Icon"})," content")," ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"(String, Number, RegExp)"))),(0,i.kt)("p",null,"Get the DOM element containing the content."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(m,{name:"angle-right",mdxType:"Icon"})," selector")," ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"(String selector)"))),(0,i.kt)("p",null,"Specify a selector to filter DOM elements containing the text. Cypress will\n",(0,i.kt)("em",{parentName:"p"},"ignore")," its ",(0,i.kt)("a",{parentName:"p",href:"#Notes"},"default preference order")," for the specified selector.\nUsing a selector allows you to return more ",(0,i.kt)("em",{parentName:"p"},"shallow")," elements (higher in the\ntree) that contain the specific text."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)(m,{name:"angle-right",mdxType:"Icon"})," options")," ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"(Object)"))),(0,i.kt)("p",null,"Pass in an options object to change the default behavior of ",(0,i.kt)("inlineCode",{parentName:"p"},".contains()"),"."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Option"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"matchCase")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:null},"Check case sensitivity")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"log")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:null},"Displays the command in the ",(0,i.kt)("a",{parentName:"td",href:"/guides/core-concepts/cypress-app#Command-Log"},"Command log"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"timeout")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/guides/references/configuration#Timeouts"},(0,i.kt)("inlineCode",{parentName:"a"},"defaultCommandTimeout"))),(0,i.kt)("td",{parentName:"tr",align:null},"Time to wait for ",(0,i.kt)("inlineCode",{parentName:"td"},".contains()")," to resolve before ",(0,i.kt)("a",{parentName:"td",href:"#Timeouts"},"timing out"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"includeShadowDom")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/guides/references/configuration#Global"},(0,i.kt)("inlineCode",{parentName:"a"},"includeShadowDom")," config option value")),(0,i.kt)("td",{parentName:"tr",align:null},"Whether to traverse shadow DOM boundaries and include elements within the shadow DOM in the yielded results.")))),(0,i.kt)("h3",{id:"Yields"},"Yields ",(0,i.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Subject-Management"},(0,i.kt)(m,{name:"question-circle",mdxType:"Icon"}))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".contains()")," yields the new DOM element it found."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".contains()")," is a query, and it is ",(0,i.kt)("em",{parentName:"li"},"safe")," to chain further commands.")),(0,i.kt)("h2",{id:"Examples"},"Examples"),(0,i.kt)("h3",{id:"Content"},"Content"),(0,i.kt)("h4",{id:"Find-the-first-element-containing-some-text"},"Find the first element containing some text"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"<ul>\n  <li>apples</li>\n  <li>oranges</li>\n  <li>bananas</li>\n</ul>\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// yields <li>apples</li>\ncy.contains('apples')\n")),(0,i.kt)("h4",{id:"Find-the-inputtypesubmit-by-value"},"Find the ",(0,i.kt)("inlineCode",{parentName:"h4"},"input[type='submit']")," by value"),(0,i.kt)("p",null,'Get the form element and search in its descendants for the content "submit the\nform!"'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<div id="main">\n  <form>\n    <div>\n      <label>name</label>\n      <input name="name" />\n    </div>\n    <div>\n      <label>age</label>\n      <input name="age" />\n    </div>\n    <input type="submit" value="submit the form!" />\n  </form>\n</div>\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// yields input[type='submit'] element then clicks it\ncy.get('form').contains('submit the form!').click()\n")),(0,i.kt)("h3",{id:"Number"},"Number"),(0,i.kt)("h4",{id:"Find-the-first-element-containing-a-number"},"Find the first element containing a number"),(0,i.kt)("p",null,"Even though the ",(0,i.kt)("inlineCode",{parentName:"p"},"<span>"),' is the deepest element that contains a "4", Cypress\nautomatically yields ',(0,i.kt)("inlineCode",{parentName:"p"},"<button>")," elements over spans because of its\n",(0,i.kt)("a",{parentName:"p",href:"#Preferences"},"preferred element order"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<button class="btn btn-primary" type="button">\n  Messages <span class="badge">4</span>\n</button>\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// yields <button>\ncy.contains(4)\n")),(0,i.kt)("h3",{id:"Regular-Expression"},"Regular Expression"),(0,i.kt)("h4",{id:"Find-the-first-element-with-text-matching-the-regular-expression"},"Find the first element with text matching the regular expression"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"<ul>\n  <li>apples</li>\n  <li>oranges</li>\n  <li>bananas</li>\n</ul>\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// yields <li>bananas</li>\ncy.contains(/^b\\w+/)\n")),(0,i.kt)("h3",{id:"Selector"},"Selector"),(0,i.kt)("h4",{id:"Specify-a-selector-to-return-a-specific-element"},"Specify a selector to return a specific element"),(0,i.kt)("p",null,"Technically the ",(0,i.kt)("inlineCode",{parentName:"p"},"<html>"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"<body>"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"<ul>"),", and first ",(0,i.kt)("inlineCode",{parentName:"p"},"<li>"),' in the example\nbelow all contain "apples".'),(0,i.kt)("p",null,"Normally Cypress would return the first ",(0,i.kt)("inlineCode",{parentName:"p"},"<li>")," since that is the ",(0,i.kt)("em",{parentName:"p"},"deepest"),'\nelement that contains "apples".'),(0,i.kt)("p",null,"To override the element that is yielded we can pass 'ul' as the selector."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"<html>\n  <body>\n    <ul>\n      <li>apples</li>\n      <li>oranges</li>\n      <li>bananas</li>\n    </ul>\n  </body>\n</html>\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// yields <ul>...</ul>\ncy.contains('ul', 'apples')\n")),(0,i.kt)("h4",{id:"Keep-the-form-as-the-subject"},"Keep the form as the subject"),(0,i.kt)("p",null,"Here's an example that uses the selector to ensure that the ",(0,i.kt)("inlineCode",{parentName:"p"},"<form>")," remains the\n",(0,i.kt)("a",{parentName:"p",href:"/guides/core-concepts/introduction-to-cypress#Subject-Management"},"subject")," for\nfuture chaining."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<form>\n  <div>\n    <label>name</label>\n    <input name="name" />\n  </div>\n  <button type="submit">Proceed</button>\n</form>\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.get('form') // yields <form>...</form>\n  .contains('form', 'Proceed') // yields <form>...</form>\n  .submit() // yields <form>...</form>\n")),(0,i.kt)("p",null,"Without the explicit selector the subject would change to be the ",(0,i.kt)("inlineCode",{parentName:"p"},"<button>"),".\nUsing the explicit selector ensures that chained commands will have the ",(0,i.kt)("inlineCode",{parentName:"p"},"<form>"),"\nas the subject."),(0,i.kt)("h3",{id:"Case-Sensitivity"},"Case Sensitivity"),(0,i.kt)("p",null,"Here's an example using the ",(0,i.kt)("inlineCode",{parentName:"p"},"matchCase")," option to ignore case sensitivity."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"<div>Capital Sentence</div>\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"cy.get('div').contains('capital sentence') // fail\ncy.get('div').contains('capital sentence', { matchCase: false }) // pass\n")),(0,i.kt)("h2",{id:"Notes"},"Notes"),(0,i.kt)("h3",{id:"Scopes"},"Scopes"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},".contains()")," acts differently whether it's starting a series of commands or\nbeing chained off an existing series."),(0,i.kt)("h4",{id:"When-starting-a-series-of-commands"},"When starting a series of commands:"),(0,i.kt)("p",null,"This queries the entire ",(0,i.kt)("inlineCode",{parentName:"p"},"document")," for the content."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.contains('Log In')\n")),(0,i.kt)("h4",{id:"When-chained-to-an-existing-series-of-commands"},"When chained to an existing series of commands"),(0,i.kt)("p",null,"This will query inside of the ",(0,i.kt)("inlineCode",{parentName:"p"},"<#checkout-container>")," element."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.get('#checkout-container').contains('Buy Now')\n")),(0,i.kt)("h4",{id:"Be-wary-of-chaining-multiple-contains"},"Be wary of chaining multiple contains"),(0,i.kt)("p",null,"Let's imagine a scenario where you click a button to delete a user and a dialog\nappears asking you to confirm this deletion."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// This doesn't work as intended\ncy.contains('Delete User').click().contains('Yes, Delete!').click()\n")),(0,i.kt)("p",null,"Because the second ",(0,i.kt)("inlineCode",{parentName:"p"},".contains()")," is chained off of a command that yielded the\n",(0,i.kt)("inlineCode",{parentName:"p"},"<button>"),", Cypress will look inside of the ",(0,i.kt)("inlineCode",{parentName:"p"},"<button>")," for the new content."),(0,i.kt)("p",null,"In other words, Cypress will look inside of the ",(0,i.kt)("inlineCode",{parentName:"p"},"<button>"),' containing "Delete\nUser" for the content: "Yes, Delete!", which is not what we intended.'),(0,i.kt)("p",null,"What you want to do is call ",(0,i.kt)("inlineCode",{parentName:"p"},"cy")," again, which automatically creates a new chain\nscoped to the ",(0,i.kt)("inlineCode",{parentName:"p"},"document"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.contains('Delete User').click()\ncy.contains('Yes, Delete!').click()\n")),(0,i.kt)("h3",{id:"Leading-trailing-duplicate-whitespaces-arent-ignored-in-pre-tag"},"Leading, trailing, duplicate whitespaces aren't ignored in ",(0,i.kt)("inlineCode",{parentName:"h3"},"<pre>")," tag"),(0,i.kt)("p",null,"Unlike other tags, ",(0,i.kt)("inlineCode",{parentName:"p"},"<pre>")," doesn't ignore leading, trailing, or duplicate\nwhitespaces as shown below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"\x3c!--Code for test--\x3e\n<h2>Other tags</h2>\n<p>Hello, World !</p>\n\n<h2>Pre tag</h2>\n<pre>                 Hello,           World      !</pre>\n")),(0,i.kt)("p",null,"Rendered result:"),(0,i.kt)(d,{src:"/img/api/contains/contains-pre-exception.png",alt:"The result of pre tag",mdxType:"DocsImage"}),(0,i.kt)("p",null,"To reflect this behavior, Cypress also doesn't ignore them."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// test result for above code\n\ncy.get('p').contains('Hello, World !') // pass\ncy.get('p').contains('           Hello,          World   !') // fail\n\ncy.get('pre').contains('Hello, World !') // fail\ncy.get('pre').contains('                 Hello,           World      !') // pass\n")),(0,i.kt)("h3",{id:"Non-breaking-space"},"Non-breaking space"),(0,i.kt)("p",null,"You can use a space character in ",(0,i.kt)("inlineCode",{parentName:"p"},"cy.contains()")," to match text in the HTML that\nuses a non-breaking space entity ",(0,i.kt)("inlineCode",{parentName:"p"},"&nbsp;"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"<span>Hello&nbsp;world</span>\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// finds the span element\ncy.contains('Hello world')\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Tip:")," read about assertions against a text with non-breaking space entities\nin\n",(0,i.kt)("a",{parentName:"p",href:"/faq/questions/using-cypress-faq#How-do-I-get-an-element-s-text-contents"},"How do I get an element's text contents?")),(0,i.kt)("h3",{id:"Single-Element"},"Single Element"),(0,i.kt)("h4",{id:"Only-the-first-matched-element-will-be-returned"},"Only the ",(0,i.kt)("em",{parentName:"h4"},"first")," matched element will be returned"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<ul id="header">\n  <li>Welcome, Jane Lane</li>\n</ul>\n<div id="main">\n  <span>These users have 10 connections with Jane Lane</span>\n  <ul>\n    <li>Jamal</li>\n    <li>Patricia</li>\n  </ul>\n</div>\n')),(0,i.kt)("p",null,"The below example will return the ",(0,i.kt)("inlineCode",{parentName:"p"},"<li>")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"#header")," since that is the\n",(0,i.kt)("em",{parentName:"p"},"first"),' element that contains the text "Jane Lane".'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// yields #header li\ncy.contains('Jane Lane')\n")),(0,i.kt)("p",null,"If you wanted to select the ",(0,i.kt)("inlineCode",{parentName:"p"},"<span>")," instead, you could narrow the elements\nyielded before the ",(0,i.kt)("inlineCode",{parentName:"p"},".contains()"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// yields <span>\ncy.get('#main').contains('Jane Lane')\n")),(0,i.kt)("h3",{id:"Default-input-typesubmit-labels"},"Default ",(0,i.kt)("inlineCode",{parentName:"h3"},'<input type="submit">')," labels"),(0,i.kt)("p",null,"When the ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," attribute is omitted from an ",(0,i.kt)("inlineCode",{parentName:"p"},'<input type="submit">'),", the\ndefault label is used and can be locale-dependent.\n",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/submit#omitting_the_value_attribute"},"More info at MDN.")),(0,i.kt)("p",null,"When this happens, the ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," is an empty string, and there is no programmatic\nway for Cypress to filter elements by the label displayed by the user agent.\nThis can cause unexpected failures when using ",(0,i.kt)("inlineCode",{parentName:"p"},"cy.contains()")," with submit\nbuttons."),(0,i.kt)("p",null,"The solution in this case is to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"}," // assert the empty string\n cy.get('input').should('have.value', '')\n\n // ---or---\n\n // if possible, set the `value` attribute\n <input type=submit value=\"Submit\" />\n")),(0,i.kt)("h3",{id:"Preferences"},"Preferences"),(0,i.kt)("h4",{id:"Element-preference-order"},"Element preference order"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},".contains()")," defaults to preferring elements higher in the tree when they are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"input[type='submit']")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"button")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"a")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"label"))),(0,i.kt)("p",null,"Cypress will ignore this element preference order if you pass a selector\nargument to ",(0,i.kt)("inlineCode",{parentName:"p"},".contains()"),"."),(0,i.kt)("h4",{id:"Favor-of-button-over-other-deeper-elements"},"Favor of ",(0,i.kt)("inlineCode",{parentName:"h4"},"<button>")," over other deeper elements"),(0,i.kt)("p",null,"Even though the ",(0,i.kt)("inlineCode",{parentName:"p"},"<span>"),' is the deepest element that contains "Search", Cypress\nyields ',(0,i.kt)("inlineCode",{parentName:"p"},"<button>")," elements over spans."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<form>\n  <button>\n    <i class="fa fa-search"></i>\n    <span>Search</span>\n  </button>\n</form>\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// yields <button>\ncy.contains('Search').children('i').should('have.class', 'fa-search')\n")),(0,i.kt)("h4",{id:"Favor-of-a-over-other-deeper-elements"},"Favor of ",(0,i.kt)("inlineCode",{parentName:"h4"},"<a>")," over other deeper elements"),(0,i.kt)("p",null,"Even though the ",(0,i.kt)("inlineCode",{parentName:"p"},"<span>"),' is the deepest element that contains "Sign Out",\nCypress yields anchor elements over spans.'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<nav>\n  <a href="/users">\n    <span>Users</span>\n  </a>\n  <a href="/signout">\n    <span>Sign Out</span>\n  </a>\n</nav>\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// yields <a>\ncy.get('nav').contains('Sign Out').should('have.attr', 'href', '/signout')\n")),(0,i.kt)("h4",{id:"Favor-of-label-over-other-deeper-elements"},"Favor of ",(0,i.kt)("inlineCode",{parentName:"h4"},"<label>")," over other deeper elements"),(0,i.kt)("p",null,"Even though the ",(0,i.kt)("inlineCode",{parentName:"p"},"<span>"),' is the deepest element that contains "Age", Cypress\nyields ',(0,i.kt)("inlineCode",{parentName:"p"},"<label>")," elements over ",(0,i.kt)("inlineCode",{parentName:"p"},"<span>"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<form>\n  <label>\n    <span>Name:</span>\n    <input name="name" />\n  </label>\n  <label>\n    <span>Age:</span>\n    <input name="age" />\n  </label>\n</form>\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// yields label\ncy.contains('Age').find('input').type('29')\n")),(0,i.kt)("h2",{id:"Rules"},"Rules"),(0,i.kt)("h3",{id:"Requirements"},"Requirements ",(0,i.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Chains-of-Commands"},(0,i.kt)(m,{name:"question-circle",mdxType:"Icon"}))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".contains()")," can be chained off of ",(0,i.kt)("inlineCode",{parentName:"li"},"cy")," or off a command that yields DOM\nelement(s).")),(0,i.kt)("h3",{id:"Assertions"},"Assertions ",(0,i.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Assertions"},(0,i.kt)(m,{name:"question-circle",mdxType:"Icon"}))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".contains()")," will automatically ",(0,i.kt)("a",{parentName:"li",href:"/guides/core-concepts/retry-ability"},"retry"),"\nuntil the element(s)\n",(0,i.kt)("a",{parentName:"li",href:"/guides/core-concepts/introduction-to-cypress#Default-Assertions"},"exist in the DOM"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".contains()"),"will automatically ",(0,i.kt)("a",{parentName:"li",href:"/guides/core-concepts/retry-ability"},"retry"),"\nuntil all chained assertions have passed.")),(0,i.kt)("h3",{id:"Timeouts"},"Timeouts ",(0,i.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Timeouts"},(0,i.kt)(m,{name:"question-circle",mdxType:"Icon"}))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".contains()")," can time out waiting for the element(s) to\n",(0,i.kt)("a",{parentName:"li",href:"/guides/core-concepts/introduction-to-cypress#Default-Assertions"},"exist in the DOM"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".contains()")," can time out waiting for assertions you've added to pass.")),(0,i.kt)("h2",{id:"Command-Log"},"Command Log"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},'Element contains text "New User"'))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.get('h1').contains('New User')\n")),(0,i.kt)("p",null,"The commands above will display in the Command Log as:"),(0,i.kt)(d,{src:"/img/api/contains/find-el-that-contains-text.png",alt:"Command Log contains",mdxType:"DocsImage"}),(0,i.kt)("p",null,"When clicking on the ",(0,i.kt)("inlineCode",{parentName:"p"},"contains")," command within the command log, the console\noutputs the following:"),(0,i.kt)(d,{src:"/img/api/contains/see-elements-found-from-contains-in-console.png",alt:"console.log contains",mdxType:"DocsImage"}),(0,i.kt)("h2",{id:"History"},"History"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Version"),(0,i.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/guides/references/changelog#5-2-0"},"5.2.0")),(0,i.kt)("td",{parentName:"tr",align:null},"Added ",(0,i.kt)("inlineCode",{parentName:"td"},"includeShadowDom")," option.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/guides/references/changelog#4-0-0"},"4.0.0")),(0,i.kt)("td",{parentName:"tr",align:null},"Added support for option ",(0,i.kt)("inlineCode",{parentName:"td"},"matchCase"),".")))),(0,i.kt)("h2",{id:"See-also"},"See also"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/commands/get"},(0,i.kt)("inlineCode",{parentName:"a"},"cy.get()"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/commands/invoke"},(0,i.kt)("inlineCode",{parentName:"a"},".invoke()"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/commands/within"},(0,i.kt)("inlineCode",{parentName:"a"},".within()"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/guides/core-concepts/retry-ability"},"Retry-ability"))))}h.isMDXComponent=!0}}]);