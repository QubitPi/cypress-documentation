"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[3932],{2119:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var i=s(5893),n=s(1151);const r={sidebar_label:"Address coverage gaps",title:"Address coverage gaps | Cypress UI Coverage Documentation",description:"Learn how to address test coverage gaps with Cypress UI Coverage to ensure quality of your application.",sidebar_position:20},o="Address coverage gaps",a={id:"ui-coverage/guides/address-coverage-gaps",title:"Address coverage gaps | Cypress UI Coverage Documentation",description:"Learn how to address test coverage gaps with Cypress UI Coverage to ensure quality of your application.",source:"@site/docs/ui-coverage/guides/address-coverage-gaps.mdx",sourceDirName:"ui-coverage/guides",slug:"/ui-coverage/guides/address-coverage-gaps",permalink:"/ui-coverage/guides/address-coverage-gaps",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/ui-coverage/guides/address-coverage-gaps.mdx",tags:[],version:"current",lastUpdatedAt:1750819415,formattedLastUpdatedAt:"Jun 25, 2025",sidebarPosition:20,frontMatter:{sidebar_label:"Address coverage gaps",title:"Address coverage gaps | Cypress UI Coverage Documentation",description:"Learn how to address test coverage gaps with Cypress UI Coverage to ensure quality of your application.",sidebar_position:20},sidebar:"ui-coverage",previous:{title:"Identify coverage gaps",permalink:"/ui-coverage/guides/identify-coverage-gaps"},next:{title:"Reduce test duplication",permalink:"/ui-coverage/guides/reduce-test-duplication"}},c={},l=[{value:"Prioritize Gaps",id:"Prioritize-Gaps",level:2},{value:"Enhance Test Coverage",id:"Enhance-Test-Coverage",level:2},{value:"Generate Targeted Tests \u2728",id:"Generate-Targeted-Tests-sparkles",level:3},{value:"Write Targeted Tests",id:"Write-Targeted-Tests",level:3},{value:"Cover Untested Links",id:"Cover-Untested-Links",level:3},{value:"Refine Tests",id:"Refine-Tests",level:2},{value:"Ensure Element Visibility",id:"Ensure-Element-Visibility",level:3},{value:"Handle Dynamic Content",id:"Handle-Dynamic-Content",level:3},{value:"Optimize Configuration",id:"Optimize-Configuration",level:2},{value:"Iterate and Monitor",id:"Iterate-and-Monitor",level:2},{value:"Review Coverage Reports",id:"Review-Coverage-Reports",level:3},{value:"Automate Coverage Enforcement",id:"Automate-Coverage-Enforcement",level:3},{value:"Collaborate with Your Team",id:"Collaborate-with-Your-Team",level:3},{value:"Next Steps",id:"Next-Steps",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.a)(),...e.components},{DocsImage:s,ProductHeading:r}=t;return s||g("DocsImage",!0),r||g("ProductHeading",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r,{product:"ui-coverage"}),"\n",(0,i.jsx)(t.h1,{id:"Address-coverage-gaps",children:"Address coverage gaps"}),"\n",(0,i.jsxs)(t.p,{children:["After ",(0,i.jsx)(t.a,{href:"/ui-coverage/guides/identify-coverage-gaps",children:"identifying test coverage gaps"})," using Cypress UI Coverage, the next step is to address these gaps to ensure your application is comprehensively tested. This guide outlines best practices and strategies for improving coverage and closing the identified gaps effectively."]}),"\n",(0,i.jsx)(t.h2,{id:"Prioritize-Gaps",children:"Prioritize Gaps"}),"\n",(0,i.jsx)(t.p,{children:"Not all coverage gaps are equally critical. Use the information provided in the UI Coverage reports to prioritize testing efforts based on:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Critical Views"}),": Focus on views or components that represent high-priority user journeys, such as checkout pages, login screens, or submission forms."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Untested Links"}),": Address testing pages that are not being visited by your current test suite. You won't get insight into the untested elements on these pages until you visit them."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"By prioritizing based on application context and business impact, you can address the most significant gaps first."}),"\n",(0,i.jsx)(t.h2,{id:"Enhance-Test-Coverage",children:"Enhance Test Coverage"}),"\n",(0,i.jsx)(t.p,{children:"Once you've identified priority areas, create or update tests to cover these gaps."}),"\n",(0,i.jsxs)(t.h3,{id:"Generate-Targeted-Tests-sparkles",children:["Generate Targeted Tests ","\u2728"]}),"\n",(0,i.jsx)(t.p,{children:"UI Coverage provides AI-powered Test Generation from the Cypress Cloud, to help you quickly add tests for the untested elements detected in UI Coverage reports, in a way that follows your existing practices and conventions."}),"\n",(0,i.jsx)(t.p,{children:"It works in just three steps:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Select an interactive element in your UI Coverage report, from any state of your application"}),"\n",(0,i.jsx)(t.li,{children:"Click \u201cGenerate test code\u201d"}),"\n",(0,i.jsx)(t.li,{children:"Choose where to add the tests, from a list of specs that already render this element"}),"\n"]}),"\n",(0,i.jsx)(s,{src:"/img/ui-coverage/guides/cypress-ui-coverage-generate-test.png",alt:"Cypress Cloud screenshot cropped to show a generated test after clicking on the 'Generate Test' button for the '/commands/cookies' link."}),"\n",(0,i.jsx)(t.p,{children:"Cypress will generate a new test that includes all the required setup steps to reach the element in your UI, and performs an appropriate interaction for the element type and surrounding context."}),"\n",(0,i.jsx)(t.p,{children:"The generated code will use your existing patterns for navigating and interacting with your application, including custom commands you may have for locating elements or setting up state, and will recommend where followup assertions should be written after the actions are complete."}),"\n",(0,i.jsx)(t.p,{children:"This test can be copied directly into your spec file at the suggested location, and from there you can continue writing the test locally."}),"\n",(0,i.jsx)(t.h3,{id:"Write-Targeted-Tests",children:"Write Targeted Tests"}),"\n",(0,i.jsx)(t.p,{children:"Focus on creating tests that interact with the specific untested elements or pages identified in the coverage reports. For example:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"describe('Dashboard', () => {\n  it('Submits form on landing page', () => {\n    cy.visit('/request-trial')\n\n    // Interact with previously untested elements\n    cy.get('[data-cy=\"email\"]').type('test@email.com')\n    cy.contain('Request Trial').click()\n    // UI Coverage will now surface the coverage of the thank you page\n    cy.url().should('include', '/thank-you')\n  })\n})\n"})}),"\n",(0,i.jsx)(t.h3,{id:"Cover-Untested-Links",children:"Cover Untested Links"}),"\n",(0,i.jsxs)(t.p,{children:["Use the ",(0,i.jsx)(t.strong,{children:"Untested Links"})," section of the UI Coverage report to identify pages your tests haven't visited. Add navigation steps to your tests to include these pages:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"describe('Cover Untested Links', () => {\n  it('Visits untested pages', () => {\n    const untestedLinks = ['/about-us', '/contact', '/pricing']\n\n    untestedLinks.forEach((link) => {\n      cy.visit(link)\n      // Perform basic checks to ensure the page loads correctly\n      cy.get('h1').should('exist')\n      // UI Coverage will now surface the coverage of these pages\n    })\n  })\n})\n"})}),"\n",(0,i.jsx)(t.h2,{id:"Refine-Tests",children:"Refine Tests"}),"\n",(0,i.jsx)(t.h3,{id:"Ensure-Element-Visibility",children:"Ensure Element Visibility"}),"\n",(0,i.jsx)(t.p,{children:"Some gaps occur because elements are hidden or not rendered during tests. Update your tests to reveal these elements:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"cy.get('[data-cy=\"dropdown-toggle\"]').click() // Reveal hidden elements\ncy.get('[data-cy=\"dropdown-item\"]').should('be.visible')\ncy.get('[data-cy=\"dropdown-item\"]').click()\n"})}),"\n",(0,i.jsx)(t.h3,{id:"Handle-Dynamic-Content",children:"Handle Dynamic Content"}),"\n",(0,i.jsx)(t.p,{children:"If coverage gaps are caused by dynamic or conditional rendering, ensure your tests account for various application states:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"// Login to render elements that only display after login\ncy.get('[data-cy=\"login-button\"]').click()\ncy.get('[data-cy=\"user-profile\"]')\n"})}),"\n",(0,i.jsx)(t.h2,{id:"Optimize-Configuration",children:"Optimize Configuration"}),"\n",(0,i.jsx)(t.p,{children:"To maximize the effectiveness of UI Coverage, consider refining your configuration:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Element Filters: Exclude irrelevant elements (e.g., placeholders, ads) from coverage reports."}),"\n",(0,i.jsx)(t.li,{children:"Significant Attributes: Define custom attributes that accurately identify elements."}),"\n",(0,i.jsx)(t.li,{children:"Attribute Filters: Remove auto-generated attributes to prevent redundant element identification."}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Refer to the ",(0,i.jsx)(t.a,{href:"/ui-coverage/configuration/overview",children:"Configuration Guide"})," to learn how to customize UI Coverage to address these common needs:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Filtering"}),": Exclude specific elements or views from coverage reports.","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/ui-coverage/configuration/elementfilters",children:"Element Filters"}),": Exclude specific elements from coverage reports."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/ui-coverage/configuration/viewfilters",children:"View Filters"}),": Exclude specific views from coverage reports."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Grouping"}),": Group similar elements together for easier analysis.","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/ui-coverage/configuration/elements",children:"Elements"}),": Specify selectors to uniquely identify elements, even when they lack stable identifiers across snapshots."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/ui-coverage/configuration/elementgroups",children:"Element Grouping"}),": Group similar elements together for easier analysis."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/ui-coverage/configuration/views",children:"Views"}),": Group views together based on defined URL patterns."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Defining Attribute Patterns"}),": Define patterns for identifying and grouping elements by attributes.","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/ui-coverage/configuration/attributefilters",children:"Attribute Filters"}),": Specify patterns for attributes and their values that should not be used for identifying and grouping elements."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"/ui-coverage/configuration/significantattributes",children:"Significant Attributes"}),": Define selectors to prioritize above the default attributes Cypress uses for the purpose of identification and grouping."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"Iterate-and-Monitor",children:"Iterate and Monitor"}),"\n",(0,i.jsx)(t.h3,{id:"Review-Coverage-Reports",children:"Review Coverage Reports"}),"\n",(0,i.jsx)(t.p,{children:"After updating your tests, record them again to Cypress Cloud and review the new coverage reports. Verify that:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Untested elements and links have been addressed."}),"\n",(0,i.jsx)(t.li,{children:"Overall coverage score has improved."}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"Automate-Coverage-Enforcement",children:"Automate Coverage Enforcement"}),"\n",(0,i.jsxs)(t.p,{children:["Use the ",(0,i.jsx)(t.a,{href:"/ui-coverage/results-api",children:"Results API"})," to integrate coverage checks into your CI/CD pipeline. Set thresholds for coverage scores to enforce quality standards. This ensures your application maintains high test coverage over time."]}),"\n",(0,i.jsx)(t.h3,{id:"Collaborate-with-Your-Team",children:"Collaborate with Your Team"}),"\n",(0,i.jsx)(t.p,{children:"Improving test coverage often requires collaboration. Share insights from the UI Coverage reports with your team to:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Prioritize testing efforts collectively."}),"\n",(0,i.jsx)(t.li,{children:"Align on critical areas that require attention."}),"\n",(0,i.jsx)(t.li,{children:"Distribute tasks for writing or updating tests."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"Next-Steps",children:"Next Steps"}),"\n",(0,i.jsxs)(t.p,{children:["You can also leverage UI Coverage to reduce test duplication to optimize your test suite further. Learn how to ",(0,i.jsx)(t.a,{href:"/ui-coverage/guides/reduce-test-duplication",children:"reduce test duplication"})," with UI Coverage to streamline your testing process."]})]})}function u(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}function g(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,t,s)=>{s.d(t,{Z:()=>a,a:()=>o});var i=s(7294);const n={},r=i.createContext(n);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);