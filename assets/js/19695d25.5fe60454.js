"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[5452],{3905:(t,e,n)=>{n.d(e,{Zo:()=>s,kt:()=>k});var l=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,l)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,l,r=function(t,e){if(null==t)return{};var n,l,r={},o=Object.keys(t);for(l=0;l<o.length;l++)n=o[l],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(l=0;l<o.length;l++)n=o[l],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=l.createContext({}),i=function(t){var e=l.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},s=function(t){var e=i(t.components);return l.createElement(p.Provider,{value:e},t.children)},c="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return l.createElement(l.Fragment,{},e)}},m=l.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,p=t.parentName,s=u(t,["components","mdxType","originalType","parentName"]),c=i(n),m=r,k=c["".concat(p,".").concat(m)]||c[m]||d[m]||o;return n?l.createElement(k,a(a({ref:e},s),{},{components:n})):l.createElement(k,a({ref:e},s))}));function k(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,a=new Array(o);a[0]=m;var u={};for(var p in e)hasOwnProperty.call(e,p)&&(u[p]=e[p]);u.originalType=t,u[c]="string"==typeof t?t:r,a[1]=u;for(var i=2;i<o;i++)a[i]=n[i];return l.createElement.apply(null,a)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},505:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>u,toc:()=>i});var l=n(7462),r=(n(7294),n(3905));const o={title:"Angular API",sidebar_position:40},a=void 0,u={unversionedId:"guides/component-testing/angular/api",id:"guides/component-testing/angular/api",title:"Angular API",description:"Methods",source:"@site/docs/guides/component-testing/angular/api.mdx",sourceDirName:"guides/component-testing/angular",slug:"/guides/component-testing/angular/api",permalink:"/cypress-documentation/guides/component-testing/angular/api",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/guides/component-testing/angular/api.mdx",tags:[],version:"current",lastUpdatedAt:1696480060,formattedLastUpdatedAt:"Oct 5, 2023",sidebarPosition:40,frontMatter:{title:"Angular API",sidebar_position:40},sidebar:"guides",previous:{title:"Angular Examples",permalink:"/cypress-documentation/guides/component-testing/angular/examples"},next:{title:"Vue Overview",permalink:"/cypress-documentation/guides/component-testing/vue/overview"}},p={},i=[{value:"Methods",id:"Methods",level:2},{value:"mount",id:"mount",level:3},{value:"Example",id:"Example",level:4},{value:"createOutputSpy",id:"createOutputSpy",level:3},{value:"Example",id:"Example-1",level:4},{value:"Interfaces",id:"Interfaces",level:2},{value:"MountConfig",id:"MountConfig",level:3},{value:"MountResponse",id:"MountResponse",level:3}],s={toc:i};function c(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,l.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"Methods"},"Methods"),(0,r.kt)("h3",{id:"mount"},"mount"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { mount } from 'cypress/angular'\n")),(0,r.kt)("table",{class:"api-table"},(0,r.kt)("tr",null,(0,r.kt)("td",null,"Description"),(0,r.kt)("td",null,"Mounts an Angular component inside Cypress browser")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"Signature"),(0,r.kt)("td",null,"mount<T>(component: Type<T> | string, config?: MountConfig<T>): Cypress.Chainable<MountResponse<T>>")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"Returns"),(0,r.kt)("td",null,"Cypress.Chainable<MountResponse>"))),(0,r.kt)("table",{class:"api-table"},(0,r.kt)("caption",null,"mount Parameters"),(0,r.kt)("thead",null,(0,r.kt)("td",null,"Name"),(0,r.kt)("td",null,"Type"),(0,r.kt)("td",null,"Description")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"component"),(0,r.kt)("td",null,"Type<T> | string"),(0,r.kt)("td",null,"Angular component being mounted or its template")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"config"),(0,r.kt)("td",null),(0,r.kt)("td",null,"MountConfig<T> (optional)"))),(0,r.kt)("h4",{id:"Example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { mount } from '@cypress/angular'\nimport { StepperComponent } from './stepper.component'\nimport { MyService } from 'services/my.service'\nimport { SharedModule } from 'shared/shared.module'\nit('mounts', () => {\n  mount(StepperComponent, {\n    providers: [MyService],\n    imports: [SharedModule],\n  })\n  cy.get('[data-cy=increment]').click()\n  cy.get('[data-cy=counter]').should('have.text', '1')\n})\n\n// or\n\nit('mounts with template', () => {\n  mount('<app-stepper></app-stepper>', {\n    declarations: [StepperComponent],\n  })\n})\n")),(0,r.kt)("h3",{id:"createOutputSpy"},"createOutputSpy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { createOutputSpy } from 'cypress/angular'\n")),(0,r.kt)("table",{class:"api-table"},(0,r.kt)("tr",null,(0,r.kt)("td",null,"Description"),(0,r.kt)("td",null,"Creates a new Event Emitter and then spies on it's `emit` method")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"Signature"),(0,r.kt)("td",null,"(alias: string) => any")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"Returns"),(0,r.kt)("td",null,"EventEmitter<T>"))),(0,r.kt)("table",{class:"api-table"},(0,r.kt)("caption",null,"createOutputSpy parameters"),(0,r.kt)("thead",null,(0,r.kt)("td",null,"Name"),(0,r.kt)("td",null,"Type"),(0,r.kt)("td",null,"Description")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"alias"),(0,r.kt)("td",null,"string"),(0,r.kt)("td",null,"alias name you want to use for your cy.spy() alias"))),(0,r.kt)("h4",{id:"Example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { StepperComponent } from './stepper.component'\nimport { mount, createOutputSpy } from '@cypress/angular'\n\nit('Has spy', () => {\n  mount(StepperComponent, { change: createOutputSpy('changeSpy') })\n  cy.get('[data-cy=increment]').click()\n  cy.get('@changeSpy').should('have.been.called')\n})\n")),(0,r.kt)("h2",{id:"Interfaces"},"Interfaces"),(0,r.kt)("h3",{id:"MountConfig"},"MountConfig"),(0,r.kt)("p",null,"Additional module configurations needed while mounting the component, like\nproviders, declarations, imports and even component @Inputs()"),(0,r.kt)("table",{class:"api-table"},(0,r.kt)("caption",null,"members"),(0,r.kt)("thead",null,(0,r.kt)("td",null,"Name"),(0,r.kt)("td",null,"Type"),(0,r.kt)("td",null,"Description")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"autoSpyOutputs"),(0,r.kt)("td",null,"boolean (optional)"),(0,r.kt)("td",null,"flag to automatically create a cy.spy() for every component @Output() property")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"autoDetectChanges"),(0,r.kt)("td",null,"boolean (optional)"),(0,r.kt)("td",null,"flag defaulted to true to automatically detect changes in your components")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"componentProperties"),(0,r.kt)("td",null,"Partial<&lbrace;[P in keyof T]: T[P];&rbrace;> (optional)"),(0,r.kt)("td",null))),(0,r.kt)("h3",{id:"MountResponse"},"MountResponse"),(0,r.kt)("p",null,"Type that the ",(0,r.kt)("inlineCode",{parentName:"p"},"mount")," function yields"),(0,r.kt)("table",{class:"api-table"},(0,r.kt)("caption",null,"members"),(0,r.kt)("thead",null,(0,r.kt)("td",null,"Name"),(0,r.kt)("td",null,"Type"),(0,r.kt)("td",null,"Description")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"fixture"),(0,r.kt)("td",null,"ComponentFixture<T>"),(0,r.kt)("td",null,"Fixture for debugging and testing a component.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"component"),(0,r.kt)("td",null,"T"),(0,r.kt)("td",null,"The instance of the root component class"))),(0,r.kt)("p",null,"See\n",(0,r.kt)("a",{parentName:"p",href:"https://angular.io/api/core/testing/ComponentFixture#componentInstance"},"https://angular.io/api/core/testing/ComponentFixture#componentInstance")))}c.isMDXComponent=!0}}]);