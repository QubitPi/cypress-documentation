"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[1779],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>y});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(t),m=a,y=c["".concat(l,".").concat(m)]||c[m]||u[m]||i;return t?r.createElement(y,o(o({ref:n},d),{},{components:t})):r.createElement(y,o({ref:n},d))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1090:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const i={title:"Cypress.require",e2eSpecific:!0},o=void 0,s={unversionedId:"api/cypress-api/require",id:"api/cypress-api/require",title:"Cypress.require",description:"Cypress.require enables utilizing dependencies within the",source:"@site/docs/api/cypress-api/require.mdx",sourceDirName:"api/cypress-api",slug:"/api/cypress-api/require",permalink:"/cypress-documentation/api/cypress-api/require",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/cypress-api/require.mdx",tags:[],version:"current",frontMatter:{title:"Cypress.require",e2eSpecific:!0},sidebar:"api",previous:{title:"Cypress.platform",permalink:"/cypress-documentation/api/cypress-api/platform"},next:{title:"Cypress.Screenshot",permalink:"/cypress-documentation/api/cypress-api/screenshot-api"}},l={},p=[{value:"Syntax",id:"Syntax",level:2},{value:"Usage",id:"Usage",level:2},{value:"TypeScript",id:"TypeScript",level:2},{value:"Casting",id:"Casting",level:3},{value:"Generic",id:"Generic",level:3},{value:"Limitations / Requirements",id:"Limitations--Requirements",level:2},{value:"Why not <code>require</code> or <code>import</code>?",id:"Why-not-require-or-import",level:2},{value:"History",id:"History",level:2},{value:"See also",id:"See-also",level:2}],d=(c="Icon",function(e){return console.warn("Component "+c+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var c;const u={toc:p};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Cypress.require")," enables utilizing dependencies within the\n",(0,a.kt)("a",{parentName:"p",href:"/api/commands/origin"},(0,a.kt)("inlineCode",{parentName:"a"},"cy.origin()"))," callback function. It is used to require\nmodules such as ",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/"},"npm")," packages and other local files."),(0,a.kt)("p",null,"It is functionally the same as using\n",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/en/knowledge/getting-started/what-is-require/"},"CommonJS ",(0,a.kt)("inlineCode",{parentName:"a"},"require()")),"\nin browser-targeted code."),(0,a.kt)("h2",{id:"Syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"Cypress.require(moduleNameOrPath)\n")),(0,a.kt)("h2",{id:"Usage"},"Usage"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)(d,{name:"check-circle",color:"green",mdxType:"Icon"})," Correct Usage")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"cy.origin('cypress.io', () => {\n  const _ = Cypress.require('lodash')\n  const utils = Cypress.require('./utils')\n\n  // ... use lodash and utils ...\n})\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)(d,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Incorrect Usage")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// `Cypress.require()` cannot be used outside the `cy.origin()` callback.\n// Use CommonJS `require()` instead\nconst _ = Cypress.require('lodash')\n\ncy.origin('cypress.io', async () => {\n  // `require()` and `import()` cannot be used inside the `cy.origin()` callback.\n  // Use `Cypress.require()` instead\n  const _ = require('lodash')\n  const utils = await import('./utils')\n})\n")),(0,a.kt)("p",null,"See\n",(0,a.kt)("a",{parentName:"p",href:"/api/commands/origin#Dependencies-Sharing-Code"},(0,a.kt)("inlineCode",{parentName:"a"},"cy.origin()")," Dependencies / Sharing Code"),"\nfor more example usage."),(0,a.kt)("h2",{id:"TypeScript"},"TypeScript"),(0,a.kt)("p",null,"There are couple ways to have types inferred for the dependency required."),(0,a.kt)("h3",{id:"Casting"},"Casting"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"cy.origin('cypress.io', async () => {\n  const _ = Cypress.require('lodash') as typeof import('lodash')\n\n  // lodash methods are properly typed\n  _.map([1, 2, 3], (num: number) => {\n    // ...\n  })\n})\n")),(0,a.kt)("h3",{id:"Generic"},"Generic"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import type { LoDashStatic } from 'lodash'\n\ncy.origin('cypress.io', async () => {\n  const _ = Cypress.require < LoDashStatic > 'lodash'\n\n  // lodash methods are properly typed\n  _.map([1, 2, 3], (num: number) => {\n    // ...\n  })\n})\n")),(0,a.kt)("h2",{id:"Limitations--Requirements"},"Limitations / Requirements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Cypress.require")," only works when called within the\n",(0,a.kt)("a",{parentName:"li",href:"/api/commands/origin"},(0,a.kt)("inlineCode",{parentName:"a"},"cy.origin()"))," callback function. It will error if used\nelsewhere."),(0,a.kt)("li",{parentName:"ul"},"Only the following file extensions are supported for dependencies required\n(either directly or indirectly):",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".js")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".jsx")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".ts")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".tsx")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".mjs")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".json")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".coffee")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Cypress.require('dependency-name')")," must on one line as a continuous string:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// \u2705 GOOD\nCypress.require('lodash')\n\n// \u274c BAD\nconst { require } = Cypress\nrequire('lodash')\n\n// \u274c BAD\nCypress\n.require('lodash')\n\n// \u274c BAD\nCypress . require('lodash')\n\n// \u274c BAD\nCypress.require(\n  'lodash'\n)\n")),(0,a.kt)("h2",{id:"Why-not-require-or-import"},"Why not ",(0,a.kt)("inlineCode",{parentName:"h2"},"require")," or ",(0,a.kt)("inlineCode",{parentName:"h2"},"import"),"?"),(0,a.kt)("p",null,"Cypress runs test code in the browser, so any dependencies have to be bundled\nwith the test code before it is run. This is accomplished for the majority of\ntest code via a ",(0,a.kt)("a",{parentName:"p",href:"/api/plugins/preprocessors-api"},"preprocessor"),". However, due to\nthe way that ",(0,a.kt)("a",{parentName:"p",href:"/api/commands/origin"},(0,a.kt)("inlineCode",{parentName:"a"},"cy.origin()"))," works, the callback passed to\nit is extracted from the test code where it is defined and run in a different\ncontext. This also separates it from any dependencies that are included in the\ntest code bundle."),(0,a.kt)("p",null,"To solve this, we replace all instances of ",(0,a.kt)("inlineCode",{parentName:"p"},"Cypress.require")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"require")," at\nruntime and bundle just the callback with any dependencies required within it."),(0,a.kt)("p",null,"Using ",(0,a.kt)("inlineCode",{parentName:"p"},"Cypress.require")," in the test code instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"require")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"import")," keeps\nthe dependencies required within the callback from being bundled with the rest\nof the test code. We cannot bring them along with the callback to where it is\nrun, so it would waste execution time and memory to bundle its dependencies in\nthe original preprocessing. The dependencies are only bundled with the code that\nneeds them when we preprocess the callback itself."),(0,a.kt)("p",null,"Additionally, we tried a solution previously that allowed use of ",(0,a.kt)("inlineCode",{parentName:"p"},"require")," and\n",(0,a.kt)("inlineCode",{parentName:"p"},"import"),", but found that it hurt performance not only for spec files using them\nwithin the ",(0,a.kt)("inlineCode",{parentName:"p"},"cy.origin()")," callback, but even for spec files that did not use\nthem. That solution was also preprocessor-dependent and only worked for the\nwebpack preprocessor. Using ",(0,a.kt)("inlineCode",{parentName:"p"},"Cypress.require")," is preprocessor-agnostic."),(0,a.kt)("h2",{id:"History"},"History"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Version"),(0,a.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/guides/references/changelog#10-7-0"},"12.6.0")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"Cypress.require")," added and support for using CommonJS ",(0,a.kt)("inlineCode",{parentName:"td"},"require()")," and ES module ",(0,a.kt)("inlineCode",{parentName:"td"},"import()")," removed")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/guides/references/changelog#10-7-0"},"10.11.0")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"Cypress.require")," removed in favor of CommonJS ",(0,a.kt)("inlineCode",{parentName:"td"},"require()")," and ES module ",(0,a.kt)("inlineCode",{parentName:"td"},"import()"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/guides/references/changelog#10-7-0"},"10.7.0")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"Cypress.require")," added")))),(0,a.kt)("h2",{id:"See-also"},"See also"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/commands/origin"},(0,a.kt)("inlineCode",{parentName:"a"},"cy.origin()")))))}m.isMDXComponent=!0}}]);