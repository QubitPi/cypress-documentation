"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[2695],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var i=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,s=function(e,t){if(null==e)return{};var n,i,s={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),u=p(n),m=s,y=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?i.createElement(y,r(r({ref:t},c),{},{components:n})):i.createElement(y,r({ref:t},c))}));function y(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,r=new Array(o);r[0]=m;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[u]="string"==typeof e?e:s,r[1]=a;for(var p=2;p<o;p++)r[p]=n[p];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4773:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>y,frontMatter:()=>o,metadata:()=>a,toc:()=>p});var i=n(7462),s=(n(7294),n(3905));const o={title:"IDE Integration"},r=void 0,a={unversionedId:"guides/tooling/IDE-integration",id:"guides/tooling/IDE-integration",title:"IDE Integration",description:"File Opener Preference",source:"@site/docs/guides/tooling/IDE-integration.mdx",sourceDirName:"guides/tooling",slug:"/guides/tooling/IDE-integration",permalink:"/cypress-documentation/guides/tooling/IDE-integration",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/guides/tooling/IDE-integration.mdx",tags:[],version:"current",lastUpdatedAt:1697461007,formattedLastUpdatedAt:"Oct 16, 2023",frontMatter:{title:"IDE Integration"},sidebar:"guides",previous:{title:"GitLab CI",permalink:"/cypress-documentation/guides/continuous-integration/gitlab-ci"},next:{title:"Code Coverage",permalink:"/cypress-documentation/guides/tooling/code-coverage"}},l={},p=[{value:"File Opener Preference",id:"File-Opener-Preference",level:2},{value:"Extensions &amp; Plugins",id:"Extensions--Plugins",level:2},{value:"Visual Studio Code",id:"Visual-Studio-Code",level:3},{value:"IntelliJ Platform",id:"IntelliJ-Platform",level:3},{value:"Intelligent Code Completion",id:"Intelligent-Code-Completion",level:2},{value:"Writing Tests",id:"Writing-Tests",level:3},{value:"Features",id:"Features",level:4},{value:"Autocomplete while typing Cypress commands",id:"Autocomplete-while-typing-Cypress-commands",level:5},{value:"Signature help when writing and hovering on Cypress commands",id:"Signature-help-when-writing-and-hovering-on-Cypress-commands",level:5},{value:"Autocomplete while typing assertion chains, including only showing DOM assertions if testing on a DOM element.",id:"Autocomplete-while-typing-assertion-chains-including-only-showing-DOM-assertions-if-testing-on-a-DOM-element",level:5},{value:"Set up in your Dev Environment",id:"Set-up-in-your-Dev-Environment",level:4},{value:"Triple slash directives",id:"Triple-slash-directives",level:5},{value:"Reference type declarations via <code>jsconfig</code>",id:"Reference-type-declarations-via-jsconfig",level:5},{value:"Reference type declarations via <code>tsconfig</code>",id:"Reference-type-declarations-via-tsconfig",level:5},{value:"See also",id:"See-also",level:3}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",t)},u=c("DocsImage"),d=c("DocsVideo"),m={toc:p};function y(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"File-Opener-Preference"},"File Opener Preference"),(0,s.kt)("p",null,"When clicking on a file path or an ",(0,s.kt)("a",{parentName:"p",href:"/guides/guides/debugging#Errors"},"error")," in\nthe ",(0,s.kt)("a",{parentName:"p",href:"/guides/core-concepts/cypress-app#Command-Log"},"command log"),", Cypress will\nattempt to open the file on your system. If the editor supports inline\nhighlighting of the file, the file will open with the cursor located on the line\nand column of interest."),(0,s.kt)(u,{src:"/img/guides/core-concepts/cypress-app/open-file-in-IDE.gif",alt:"Open file in your IDE",mdxType:"DocsImage"}),(0,s.kt)("p",null,"The first time you click a file path, Cypress will prompt you to select which\nlocation you prefer to open the file. You can choose to open it in your:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"File system (e.g. Finder on MacOS, File Explore on Windows)"),(0,s.kt)("li",{parentName:"ul"},"An IDE located on your system"),(0,s.kt)("li",{parentName:"ul"},"A specified application path")),(0,s.kt)("admonition",{type:"caution"},(0,s.kt)("p",{parentName:"admonition"},"Cypress attempts to find available file editors on your system and display those\nas options. If your preferred editor is not listed, you can specify the (full)\npath to it by selecting ",(0,s.kt)("strong",{parentName:"p"},"Other"),". Cypress will make every effort to open the\nfile, ",(0,s.kt)("em",{parentName:"p"},"but it is not guaranteed to work with every application"),".")),(0,s.kt)("p",null,"After setting your file opener preference, any files will automatically open in\nyour selected application without prompting you to choose. If you want to change\nyour selection, you can do so in the ",(0,s.kt)("strong",{parentName:"p"},"Settings")," tab of Cypress by clicking\nunder ",(0,s.kt)("strong",{parentName:"p"},"File Opener Preference"),"."),(0,s.kt)(u,{src:"/img/guides/IDE-integration/file-opener-preference-settings-tab.png",alt:"screenshot of Cypress test-runner settings tab with file opener preference panel",mdxType:"DocsImage"}),(0,s.kt)("h2",{id:"Extensions--Plugins"},"Extensions & Plugins"),(0,s.kt)("p",null,"There are many third-party IDE extensions and plugins to help integrate your IDE\nwith Cypress."),(0,s.kt)("h3",{id:"Visual-Studio-Code"},"Visual Studio Code"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=JosefBiehler.cypress-fixture-intellisense"},"Cypress Fixture-IntelliSense"),":\nSupports your ",(0,s.kt)("a",{parentName:"li",href:"/api/commands/fixture"},"cy.fixture()")," by providing intellisense\nfor existing fixtures."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=shevtsov.vscode-cy-helper"},"Cypress Helper"),":\nVarious helpers and commands for integration with Cypress."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=andrew-codes.cypress-snippets"},"Cypress Snippets"),":\nUseful Cypress code snippets."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=CliffSu.cypress-snippets"},"Cypress Snippets"),":\nThis extension includes the newest and most common cypress snippets."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=tnrich.vscode-extension-open-cypress"},"Open Cypress"),":\nAllows you to open Cypress specs and single ",(0,s.kt)("inlineCode",{parentName:"li"},"it()")," blocks directly from VS\nCode."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://marketplace.visualstudio.com/items?itemName=chrisbreiding.test-utils"},"Test Utils"),":\nEasily add or remove ",(0,s.kt)("inlineCode",{parentName:"li"},".only")," and ",(0,s.kt)("inlineCode",{parentName:"li"},".skip")," modifiers with keyboard shortcuts or\nthe command palette.")),(0,s.kt)("h3",{id:"IntelliJ-Platform"},"IntelliJ Platform"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/aqua/"},"JetBrains Aqua"),": An IDE for UI Test Automation with comprehensive Cypress support. Features include autocompletion, in-IDE debugging, test search, and more.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("a",{parentName:"p",href:"https://plugins.jetbrains.com/plugin/20175-test-automation"},"Test Automation plugin"),": The official plugin, developed and maintained by JetBrains, offering robust support for Cypress and compatible with IntelliJ IDEA, CLion, GoLand, PhpStorm, PyCharm, Rider, RubyMine, and WebStorm. It encompasses all the features found in JetBrains Aqua.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("a",{parentName:"p",href:"https://plugins.jetbrains.com/plugin/13819-intellij-cypress"},"Cypress Support"),": Integrates Cypress under the common Intellij test framework."))),(0,s.kt)("h2",{id:"Intelligent-Code-Completion"},"Intelligent Code Completion"),(0,s.kt)("h3",{id:"Writing-Tests"},"Writing Tests"),(0,s.kt)("h4",{id:"Features"},"Features"),(0,s.kt)("p",null,"IntelliSense is available for Cypress. It offers intelligent code suggestions\ndirectly in your IDE while writing tests. A typical IntelliSense popup shows\ncommand definition, a code example and a link to the full documentation page."),(0,s.kt)("h5",{id:"Autocomplete-while-typing-Cypress-commands"},"Autocomplete while typing Cypress commands"),(0,s.kt)(d,{src:"/img/snippets/intellisense-cypress-assertion-matchers.mp4",title:"Intellisense Autocomplete Cypress commands",mdxType:"DocsVideo"}),(0,s.kt)("h5",{id:"Signature-help-when-writing-and-hovering-on-Cypress-commands"},"Signature help when writing and hovering on Cypress commands"),(0,s.kt)(d,{src:"/img/snippets/intellisense-method-signature-examples.mp4",title:"Intellisense on hover",mdxType:"DocsVideo"}),(0,s.kt)("h5",{id:"Autocomplete-while-typing-assertion-chains-including-only-showing-DOM-assertions-if-testing-on-a-DOM-element"},"Autocomplete while typing assertion chains, including only showing DOM assertions if testing on a DOM element."),(0,s.kt)(d,{src:"/img/snippets/intellisense-assertion-chainers.mp4",title:"Intellisense Autocomplete DOM assertions",mdxType:"DocsVideo"}),(0,s.kt)("h4",{id:"Set-up-in-your-Dev-Environment"},"Set up in your Dev Environment"),(0,s.kt)("p",null,"This document assumes you have\n",(0,s.kt)("a",{parentName:"p",href:"/guides/getting-started/installing-cypress"},"installed Cypress"),"."),(0,s.kt)("p",null,"Cypress comes with TypeScript\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress/tree/develop/cli/types"},"type declarations"),"\nincluded. Modern text editors can use these type declarations to show\nIntelliSense inside spec files."),(0,s.kt)("h5",{id:"Triple-slash-directives"},"Triple slash directives"),(0,s.kt)("p",null,"The simplest way to see IntelliSense when typing a Cypress command or assertion\nis to add a\n",(0,s.kt)("a",{parentName:"p",href:"http://www.typescriptlang.org/docs/handbook/triple-slash-directives.html"},"triple-slash directive"),"\nto the head of your JavaScript or TypeScript testing file. This will turn the\nIntelliSense on a per file basis. Copy the comment line below and paste it into\nyour spec file."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'/// <reference types="Cypress" />\n')),(0,s.kt)(d,{src:"/img/snippets/intellisense-setup.mp4",title:"Intellisense triple-slash directive",mdxType:"DocsVideo"}),(0,s.kt)("p",null,"If you write ",(0,s.kt)("a",{parentName:"p",href:"/api/cypress-api/custom-commands"},"custom commands")," and provide\nTypeScript definitions for them, you can use the triple slash directives to show\nIntelliSense, even if your project uses only JavaScript. For example, if your\ncustom commands are written in ",(0,s.kt)("inlineCode",{parentName:"p"},"cypress/support/commands.js")," and you describe\nthem in ",(0,s.kt)("inlineCode",{parentName:"p"},"cypress/support/index.d.ts")," use:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'// type definitions for Cypress object "cy"\n/// <reference types="cypress" />\n\n// type definitions for custom commands like "createDefaultTodos"\n/// <reference types="../support" />\n')),(0,s.kt)("p",null,"See the\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress-example-todomvc#cypress-intellisense"},(0,s.kt)("inlineCode",{parentName:"a"},"cypress-example-todomvc")),"\nrepository for a working example."),(0,s.kt)("p",null,"If the triple slash directive does not work, please refer to your code editor in\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support"},"TypeScript's Editor Support doc"),"\nand follow the instructions for your IDE to get\n",(0,s.kt)("a",{parentName:"p",href:"/guides/tooling/typescript-support"},"TypeScript support")," and intelligent code\ncompletion configured in your developer environment first. TypeScript support is\nbuilt in for ",(0,s.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/"},"Visual Studio Code"),",\n",(0,s.kt)("a",{parentName:"p",href:"https://www.visualstudio.com/"},"Visual Studio"),", and\n",(0,s.kt)("a",{parentName:"p",href:"https://www.jetbrains.com/webstorm/"},"WebStorm")," - all other editors require\nextra setup."),(0,s.kt)("h5",{id:"Reference-type-declarations-via-jsconfig"},"Reference type declarations via ",(0,s.kt)("inlineCode",{parentName:"h5"},"jsconfig")),(0,s.kt)("p",null,"Instead of adding triple slash directives to each JavaScript spec file, some\nIDEs (like VS Code) understand a common ",(0,s.kt)("inlineCode",{parentName:"p"},"jsconfig.json")," file in the root of the\nproject. In that file, you can include the Cypress module and your test folders."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "include": ["./node_modules/cypress", "cypress/**/*.js"]\n}\n')),(0,s.kt)("p",null,"The Intelligent Code Completion should now show help for ",(0,s.kt)("inlineCode",{parentName:"p"},"cy")," commands inside\nregular JavaScript spec files."),(0,s.kt)("h5",{id:"Reference-type-declarations-via-tsconfig"},"Reference type declarations via ",(0,s.kt)("inlineCode",{parentName:"h5"},"tsconfig")),(0,s.kt)("p",null,"Adding a\n",(0,s.kt)("a",{parentName:"p",href:"http://www.typescriptlang.org/docs/handbook/tsconfig-json.html"},(0,s.kt)("inlineCode",{parentName:"a"},"tsconfig.json")),"\ninside your\n",(0,s.kt)("a",{parentName:"p",href:"/guides/core-concepts/writing-and-organizing-tests#Folder-Structure"},(0,s.kt)("inlineCode",{parentName:"a"},"cypress")," folder"),"\nwith the following configuration should get intelligent code completion working."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "compilerOptions": {\n    "allowJs": true,\n    "types": ["cypress"]\n  },\n  "include": ["**/*.*"]\n}\n')),(0,s.kt)("h3",{id:"See-also"},"See also"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/bahmutov/test-todomvc-using-app-actions#intellisense"},"Adding custom properties to the global ",(0,s.kt)("inlineCode",{parentName:"a"},"window")," with the right TypeScript type"))))}y.isMDXComponent=!0}}]);