"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[6710],{3688:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var i=s(5893),r=s(1151);const o={title:"Views of URLs and mounted components | Cypress UI Coverage",description:"UI Coverage is organized into views, which are the unique URLs across all snapshots from end-to-end tests and the unique mounted components from component tests.",sidebar_label:"Views",sidebar_position:100},t="Views",a={id:"ui-coverage/core-concepts/views",title:"Views of URLs and mounted components | Cypress UI Coverage",description:"UI Coverage is organized into views, which are the unique URLs across all snapshots from end-to-end tests and the unique mounted components from component tests.",source:"@site/docs/ui-coverage/core-concepts/views.mdx",sourceDirName:"ui-coverage/core-concepts",slug:"/ui-coverage/core-concepts/views",permalink:"/ui-coverage/core-concepts/views",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/ui-coverage/core-concepts/views.mdx",tags:[],version:"current",lastUpdatedAt:1754586914,formattedLastUpdatedAt:"Aug 7, 2025",sidebarPosition:100,frontMatter:{title:"Views of URLs and mounted components | Cypress UI Coverage",description:"UI Coverage is organized into views, which are the unique URLs across all snapshots from end-to-end tests and the unique mounted components from component tests.",sidebar_label:"Views",sidebar_position:100},sidebar:"ui-coverage",previous:{title:"Element Identification",permalink:"/ui-coverage/core-concepts/element-identification"},next:{title:"Identify coverage gaps",permalink:"/ui-coverage/guides/identify-coverage-gaps"}},c={},d=[{value:"How views are created",id:"How-views-are-created",level:2},{value:"Examples of views",id:"Examples-of-views",level:3},{value:"Using Views",id:"Using-Views",level:2},{value:"Customizing views",id:"Customizing-views",level:2},{value:"View grouping",id:"View-grouping",level:3},{value:"Ignoring views",id:"Ignoring-views",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components},{ProductHeading:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ProductHeading",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s,{product:"ui-coverage"}),"\n",(0,i.jsx)(n.h1,{id:"Views",children:"Views"}),"\n",(0,i.jsx)(n.p,{children:"UI Coverage organizes unique URLs from snapshots in end-to-end tests and mounted components in component tests into Views. Each View represents a distinct page or state in your application, allowing you to track coverage across different parts of your application."}),"\n",(0,i.jsx)(n.h2,{id:"How-views-are-created",children:"How views are created"}),"\n",(0,i.jsx)(n.p,{children:"By default, UI Coverage applies a set of rules to generate a single View for dynamic URLs representing the same page. These rules ensure clarity by grouping similar URLs and reducing noise:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Search Parameters"}),": All query parameters are removed (e.g., ",(0,i.jsx)(n.code,{children:"/dashboard?tab=overview"})," becomes ",(0,i.jsx)(n.code,{children:"/dashboard"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hash Parameters"}),": Fragment identifiers are removed unless they represent a subpath (e.g., ",(0,i.jsx)(n.code,{children:"#/admin"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Dynamic Segments"}),": URL segments that differ only by integers or UUIDs are replaced with a wildcard (",(0,i.jsx)(n.code,{children:"*"}),")."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"Examples-of-views",children:"Examples of views"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"/users/123/profile"})," and ",(0,i.jsx)(n.code,{children:"/users/456/profile"})," become ",(0,i.jsx)(n.code,{children:"/users/*/profile"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"/dashboard?tab=overview"})," and ",(0,i.jsx)(n.code,{children:"/dashboard?tab=settings"})," become ",(0,i.jsx)(n.code,{children:"/dashboard"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"/app#settings"})," and ",(0,i.jsx)(n.code,{children:"/app#profile"})," become ",(0,i.jsx)(n.code,{children:"/app"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"/app#/admin"})," and ",(0,i.jsx)(n.code,{children:"/app#/settings"})," remain separate Views"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"These rules help consolidate similar pages into manageable Views while maintaining specificity where needed."}),"\n",(0,i.jsx)(n.h2,{id:"Using-Views",children:"Using Views"}),"\n",(0,i.jsx)(n.p,{children:"In the UI Coverage interface, Views are listed along with their coverage scores, providing insights into:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Tested Areas"}),": Identify which parts of your application have sufficient test coverage."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Untested Areas"}),": Spot pages or components that lack testing and prioritize them."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Coverage Trends"}),": Track how coverage evolves across Views over time."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Critical Flows"}),": Focus testing efforts on key user journeys and ensure their completeness."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"Customizing-views",children:"Customizing views"}),"\n",(0,i.jsx)(n.p,{children:"You can tailor how URLs are grouped into Views using configuration options:"}),"\n",(0,i.jsx)(n.h3,{id:"View-grouping",children:"View grouping"}),"\n",(0,i.jsx)(n.p,{children:"Define rules for grouping URLs into Views to align with your application's structure:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "views": [\n    {\n      "pattern": "https://cypress.io/users/*"\n    }\n  ]\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["To learn more about the configuration options, refer to the ",(0,i.jsx)(n.a,{href:"/ui-coverage/configuration/views",children:"Views"})," documentation."]}),"\n",(0,i.jsx)(n.h3,{id:"Ignoring-views",children:"Ignoring views"}),"\n",(0,i.jsx)(n.p,{children:"Exclude irrelevant or low-priority URLs from being tracked as Views:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "viewFilters": [\n    {\n      "pattern": "https://auth.example.com/*",\n      "include": false\n    }\n  ]\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["To learn more about the configuration options, refer to the ",(0,i.jsx)(n.a,{href:"/ui-coverage/configuration/viewfilters",children:"View Filters"})," documentation."]})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>t});var i=s(7294);const r={},o=i.createContext(r);function t(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);