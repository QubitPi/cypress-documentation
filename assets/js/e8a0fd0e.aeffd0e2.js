"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[3258],{2527:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var t=n(5893),i=n(1151);const r={title:"Cypress.stop() | Cypress Documentation",description:"Stop Cypress on failure or any other conditions",sidebar_label:"stop"},o="Cypress.stop",a={id:"api/cypress-api/stop",title:"Cypress.stop() | Cypress Documentation",description:"Stop Cypress on failure or any other conditions",source:"@site/docs/api/cypress-api/stop.mdx",sourceDirName:"api/cypress-api",slug:"/api/cypress-api/stop",permalink:"/api/cypress-api/stop",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/cypress-api/stop.mdx",tags:[],version:"current",lastUpdatedAt:1753810467,formattedLastUpdatedAt:"Jul 29, 2025",frontMatter:{title:"Cypress.stop() | Cypress Documentation",description:"Stop Cypress on failure or any other conditions",sidebar_label:"stop"},sidebar:"api",previous:{title:"spec",permalink:"/api/cypress-api/spec"},next:{title:"testingType",permalink:"/api/cypress-api/testing-type"}},l={},c=[{value:"Syntax",id:"Syntax",level:2},{value:"Examples",id:"Examples",level:2},{value:"Stop tests when a test fails",id:"Stop-tests-when-a-test-fails",level:3},{value:"Abort tests when a condition is met",id:"Abort-tests-when-a-condition-is-met",level:3},{value:"Notes",id:"Notes",level:2},{value:"<code>cypress run</code> vs <code>cypress open</code> behavior",id:"cypress-run-vs-cypress-open-behavior",level:3},{value:"Why choose Auto Cancellation?",id:"Why-choose-Auto-Cancellation",level:3},{value:"See also",id:"See-also",level:2}];function p(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components},{AutoCancellationBenefits:r,CloudFreePlan:o,ProductHeading:a}=s;return r||h("AutoCancellationBenefits",!0),o||h("CloudFreePlan",!0),a||h("ProductHeading",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a,{product:"app"}),"\n",(0,t.jsx)(s.h1,{id:"Cypressstop",children:"Cypress.stop"}),"\n",(0,t.jsx)(s.p,{children:"Stop the Cypress App on the current machine while tests are running. This can be useful for stopping test execution upon failures or other predefined conditions."}),"\n",(0,t.jsxs)(s.admonition,{type:"tip",children:[(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Auto Cancellation"}),": If you're looking to automatically stop ",(0,t.jsx)(s.em,{children:"all tests"})," across ",(0,t.jsx)(s.em,{children:"multiple machines"})," when a test fails, consider using the ",(0,t.jsx)(s.a,{href:"/cloud/features/smart-orchestration/run-cancellation",children:"Auto Cancellation feature"})," in Cypress Cloud."]}),(0,t.jsx)(r,{})]}),"\n",(0,t.jsx)(s.h2,{id:"Syntax",children:"Syntax"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"Cypress.stop()\n"})}),"\n",(0,t.jsx)(s.h2,{id:"Examples",children:"Examples"}),"\n",(0,t.jsx)(s.h3,{id:"Stop-tests-when-a-test-fails",children:"Stop tests when a test fails"}),"\n",(0,t.jsxs)(s.p,{children:["To ensure tests stop immediately after a failure across any spec file, add the following snippet to your ",(0,t.jsx)(s.code,{children:"support/index.js"})," file:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"afterEach(function () {\n  if (this.currentTest.state === 'failed') {\n    Cypress.stop()\n    return\n  }\n})\n"})}),"\n",(0,t.jsx)(s.h3,{id:"Abort-tests-when-a-condition-is-met",children:"Abort tests when a condition is met"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"beforeEach(() => {\n  if (env !== 'expected-condition') {\n    cy.log('Stop tests - environment is not setup correctly')\n    Cypress.stop()\n    return\n  }\n})\n"})}),"\n",(0,t.jsx)(s.h2,{id:"Notes",children:"Notes"}),"\n",(0,t.jsxs)(s.p,{children:["Calling ",(0,t.jsx)(s.code,{children:"Cypress.stop()"})," will stop the execution of remaining tests, but any code after ",(0,t.jsx)(s.code,{children:"Cypress.stop()"})," in the same container block (such as ",(0,t.jsx)(s.code,{children:"beforeEach"})," or ",(0,t.jsx)(s.code,{children:"afterEach"}),") will still run. To prevent additional logic from executing after ",(0,t.jsx)(s.code,{children:"Cypress.stop()"}),", add a ",(0,t.jsx)(s.code,{children:"return"})," statement immediately after it:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-javascript",children:"if (someCondition) {\n  Cypress.stop()\n  return // Prevents further code execution in this block\n}\n"})}),"\n",(0,t.jsxs)(s.h3,{id:"cypress-run-vs-cypress-open-behavior",children:[(0,t.jsx)(s.code,{children:"cypress run"})," vs ",(0,t.jsx)(s.code,{children:"cypress open"})," behavior"]}),"\n",(0,t.jsxs)(s.p,{children:["Calling ",(0,t.jsx)(s.code,{children:"Cypress.stop()"})," during ",(0,t.jsx)(s.code,{children:"cypress run"})," will skip any remaining tests in the current specfile. If recording to Cypress Cloud, all screenshots, videos, and ",(0,t.jsx)(s.a,{href:"/cloud/features/test-replay",children:"Test Replay"})," will still successfully upload."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{alt:"Terminal output of a Cypress run displays running an example.cy.ts file with 1 test passing in green and 1 test passing in red with an error message. The Results table shows 4 tests, 1 passing, 1 failing, and 2 skipped.",src:n(3445).Z+"",width:"1922",height:"1128"})}),"\n",(0,t.jsxs)(s.p,{children:["Calling ",(0,t.jsx)(s.code,{children:"Cypress.stop()"})," during ",(0,t.jsx)(s.code,{children:"cypress open"})," will stop execution of the Cypress App, but remain open for inspection. The remaining tests will not run."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{alt:"Cypress App shows an example.cy.ts file as running with 1 passing test collapsed, 1 failing test expanded with the assertion error and the remaining tests having not run, showing square neutral icons for their status.",src:n(4).Z+"",width:"1822",height:"890"})}),"\n",(0,t.jsx)(s.h3,{id:"Why-choose-Auto-Cancellation",children:"Why choose Auto Cancellation?"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/cloud/features/smart-orchestration/run-cancellation",children:"Auto Cancellation"})," is available with Cypress Cloud's Business+ plan. It offers several advantages over ",(0,t.jsx)(s.code,{children:"Cypress.stop"})," for stopping tests on ",(0,t.jsx)(s.strong,{children:"failure"}),":"]}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Scope of Cancellation:"})," ",(0,t.jsx)(s.code,{children:"Cypress.stop"})," halts only the current spec file, skipping remaining tests within it. Auto Cancellation, however, stops all tests across all machines and marks the entire run as ",(0,t.jsx)(s.strong,{children:"cancelled"})," in Cypress Cloud for better visibility."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Configurable Thresholds:"})," Auto Cancellation allows you to define failure thresholds. ",(0,t.jsx)(s.code,{children:"Cypress.stop"})," executes immediately when the specified condition is met."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Simplified Configuration"}),": Auto Cancellation settings can be managed in Cypress Cloud, whereas ",(0,t.jsx)(s.code,{children:"Cypress.stop"})," requires manual code changes."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Optimization with Spec Prioritization"}),": Combined with ",(0,t.jsx)(s.a,{href:"/cloud/features/smart-orchestration/spec-prioritization",children:"Spec Prioritization"})," (another Business+ feature), Auto Cancellation helps efficiently allocate resources by running previously failing specs first in a new run."]}),"\n"]}),"\n",(0,t.jsx)(o,{}),"\n",(0,t.jsx)(s.h2,{id:"See-also",children:"See also"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/cloud/features/smart-orchestration/run-cancellation",children:"Auto Cancellation"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/api/cypress-api/currenttest",children:(0,t.jsx)(s.code,{children:"Cypress.currentTest"})})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/api/cypress-api/currentretry",children:(0,t.jsx)(s.code,{children:"Cypress.currentRetry"})})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/cloud/features/smart-orchestration/load-balancing",children:"Load Balancing"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/cloud/features/smart-orchestration/parallelization",children:"Parallelization"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/cloud/features/smart-orchestration/spec-prioritization",children:"Spec Prioritization"})}),"\n"]})]})}function d(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}function h(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},4:(e,s,n)=>{n.d(s,{Z:()=>t});const t=n.p+"assets/images/cypress-stop-during-open-mode-1e55541240b4ab12e328fb57a334ad03.png"},3445:(e,s,n)=>{n.d(s,{Z:()=>t});const t=n.p+"assets/images/cypress-stop-during-run-mode-07e2ec577fbab26570d8fb8038eab94f.png"},1151:(e,s,n)=>{n.d(s,{Z:()=>a,a:()=>o});var t=n(7294);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);