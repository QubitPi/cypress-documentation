"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[669],{2925:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var t=i(5893),n=i(1151);const r={title:"Accessibility Run-level Reports | Cypress Documentation",description:"Review the main areas to pay attention to when first reviewing an accessibility report for a Cypress run.",sidebar_position:10,sidebar_label:"Run-level reports"},l="Run-level reports",c={id:"accessibility/core-concepts/run-level-reports",title:"Accessibility Run-level Reports | Cypress Documentation",description:"Review the main areas to pay attention to when first reviewing an accessibility report for a Cypress run.",source:"@site/docs/accessibility/core-concepts/run-level-reports.mdx",sourceDirName:"accessibility/core-concepts",slug:"/accessibility/core-concepts/run-level-reports",permalink:"/accessibility/core-concepts/run-level-reports",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/accessibility/core-concepts/run-level-reports.mdx",tags:[],version:"current",lastUpdatedAt:1750130633,formattedLastUpdatedAt:"Jun 17, 2025",sidebarPosition:10,frontMatter:{title:"Accessibility Run-level Reports | Cypress Documentation",description:"Review the main areas to pay attention to when first reviewing an accessibility report for a Cypress run.",sidebar_position:10,sidebar_label:"Run-level reports"},sidebar:"accessibility",previous:{title:"Get Started",permalink:"/accessibility/get-started/setup"},next:{title:"Element identification",permalink:"/accessibility/core-concepts/element-identification"}},o={},a=[{value:"Run summary",id:"Run-summary",level:2},{value:"Views",id:"Views",level:2},{value:"Snapshots",id:"Snapshots",level:3},{value:"Score",id:"Score",level:3},{value:"Elements",id:"Elements",level:3},{value:"Failed rules",id:"Failed-rules",level:3},{value:"Severity",id:"Severity",level:3},{value:"Rules",id:"Rules",level:2},{value:"Filtering",id:"Filtering",level:2}];function d(e){const s={a:"a",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.a)(),...e.components},{DocsImage:i,ProductHeading:r}=s;return i||u("DocsImage",!0),r||u("ProductHeading",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r,{product:"accessibility"}),"\n",(0,t.jsx)(s.h1,{id:"Run-level-reports",children:"Run-level reports"}),"\n",(0,t.jsx)(s.p,{children:"This guide highlights the three main areas to focus on when reviewing an accessibility report for a Cypress run. It also explains key terms and definitions used in these reports."}),"\n",(0,t.jsx)(s.h2,{id:"Run-summary",children:"Run summary"}),"\n",(0,t.jsx)(i,{src:"/img/accessibility/core-concepts/cypress-accessibility-summary-metrics.png",width:"60%",alt:"A heading reads Cypress Accessibility, above some summary metrics that are describe in detail in this document's text."}),"\n",(0,t.jsx)(s.p,{children:"The Run Summary provides top-line metrics for a quick overview of accessibility in the tested run. Clicking any metric navigates to detailed reports, including live DOM snapshots for each issue."}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Key metrics include:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Overall Score"}),": A combined accessibility score for the entire run."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Failed Elements"}),": Total elements failing at least one accessibility rule."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Inconclusive Elements"}),": Elements requiring manual review due to inconclusive accessibility checks."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Ignored Elements"}),": Elements ignored by your configuration but with failed or inconclusive checks."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Rule Severity Chart"}),": A mini chart showing the Axe Core\xae severity levels (critical, serious, moderate, minor) for failed rules."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Total Failed Rules"}),": The cumulative count of failed rules."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Each term is defined further below for clarity."}),"\n",(0,t.jsx)(s.h2,{id:"Views",children:"Views"}),"\n",(0,t.jsx)(s.p,{children:"A View represents a collection of snapshots from the tested application, grouped by pages (via URLs) or components (via Component Testing paths). Views are configurable and provide structured insights into the application."}),"\n",(0,t.jsx)(i,{src:"/img/accessibility/core-concepts/cypress-accessibility-views-dashboard.png",alt:"The Cypress Accessibility Views List, in context in Cypress Cloud, reflecting a run of the Cypress Realworld App where violations of accessibility rules were detected on multiple pages."}),"\n",(0,t.jsx)(s.h3,{id:"Snapshots",children:"Snapshots"}),"\n",(0,t.jsx)(s.p,{children:"The number of snapshots captured for a View. A Snapshot represents the live HTML and CSS state of the application at a specific moment during a recorded test. Multiple snapshots are captured as tests interact with elements, modify state, or load dynamic content."}),"\n",(0,t.jsx)(s.h3,{id:"Score",children:"Score"}),"\n",(0,t.jsxs)(s.p,{children:["The overall score for a View is a weighted ratio of passed versus failed checks across all snapshots, reflecting the general accessibility level for that segment of the application. This produces a top-line percentage score that indicates a general sense of accessibility for a project. Learn more in the ",(0,t.jsx)(s.a,{href:"/accessibility/core-concepts/accessibility-score",children:"Accessibility Score section"}),".."]}),"\n",(0,t.jsx)(s.h3,{id:"Elements",children:"Elements"}),"\n",(0,t.jsx)(s.p,{children:"The count of elements in a View categorized as:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Failed:"})," Elements violating at least one rule. These affect your accessibility score."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Inconclusive:"}),' Elements had at least one check marked "incomplete" by Axe Core\xae during the run. These represent checks that couldn\'t be completed for technical reasons, or items that need manual review to confirm if there is an accessibility issue. These do not affect your accessibility score.']}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Ignored:"})," Elements with failed or incomplete checks that were excluded via CSS selectors in your ",(0,t.jsx)(s.a,{href:"/accessibility/configuration/elementfilters",children:"configuration"})," but still processed. They do not affect your accessibility score."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"Failed-rules",children:"Failed rules"}),"\n",(0,t.jsx)(s.p,{children:"Failed rules are displayed with severity charts (critical, serious, moderate, minor) and total counts, enabling quick identification of areas with the most significant issues."}),"\n",(0,t.jsx)(s.h3,{id:"Severity",children:"Severity"}),"\n",(0,t.jsxs)(s.p,{children:["Severity levels correspond to Axe Core\xae impact levels for each rule, providing context on the criticality of detected issues. It's important to note that these levels were created by Deque Systems, the creators of Axe Core, and not a part of the Web Content Accessibility Guidelines themselves. Learn more in the ",(0,t.jsx)(s.a,{href:"https://github.com/dequelabs/axe-core/blob/develop/doc/issue_impact.md",children:"Axe Core\xae documentation"}),"."]}),"\n",(0,t.jsx)(s.h2,{id:"Rules",children:"Rules"}),"\n",(0,t.jsx)(s.p,{children:"This section lists all Axe Core\xae rules enabled during the run, detailing their outcomes."}),"\n",(0,t.jsx)(i,{src:"/img/accessibility/core-concepts/cypress-accessibility-rules-list.png",alt:"The Cypress Accessibility rules list showing multiple accessibility rules failing in this run of the Cypress Realworld App."}),"\n",(0,t.jsx)(s.p,{children:"Attributes for each rule include:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Status Icon"}),": An icon representing the overall status for the rule, which can be any one of these:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Passed"}),": All elements passed checks or were ignored."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Failed"}),": At least one element failed."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Inconclusive"}),': At least one element was labelled "incomplete" by Axe Core\xae and requires manual review, but no elements were failed.']}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Inapplicable"}),": No applicable elements detected for this rule."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Ignored by config"}),": The rule was excluded at the project level."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Description"}),": A summary of the rule."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Severity"}),": The Axe Core\xae severity level for the rule."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Counts"}),": The counts of failed, inconclusive, and ignored elements for the rule."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"Filtering",children:"Filtering"}),"\n",(0,t.jsx)(s.p,{children:"You can filter Views and Rules in accessibility reports by:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Rule severity"}),": Critical, serious, moderate, or minor."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Rules"}),": WCAG 2.1 A, WCAG 2.1 AA, or Best Practices."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Element status"}),": Failed, inconclusive, or other (other includes ignored elements and rules, 100% passing views and rules, and inapplicable rules)."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Name"}),": Search for specific URLs or paths to filter the views or specific names to filter rules."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"This allows a full understanding of what Cypress evaluated during the run, while enabling targeted analysis of critical issues."}),"\n",(0,t.jsx)(i,{src:"/img/accessibility/core-concepts/cypress-accessibility-filter-views-and-rules.png",alt:"The Cypress Accessibility dropdown filter showing rule severity, rules, element state as well as a search bar"})]})}function h(e={}){const{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function u(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,s,i)=>{i.d(s,{Z:()=>c,a:()=>l});var t=i(7294);const n={},r=t.createContext(n);function l(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);