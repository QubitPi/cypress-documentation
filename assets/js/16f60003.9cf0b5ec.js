"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[2360],{435:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var r=n(5893),i=n(1151);const o={title:"Introduction",sidebar_position:10},t=void 0,c={id:"guides/continuous-integration/introduction",title:"Introduction",description:"What you'll learn",source:"@site/docs/guides/continuous-integration/introduction.mdx",sourceDirName:"guides/continuous-integration",slug:"/guides/continuous-integration/introduction",permalink:"/guides/continuous-integration/introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/guides/continuous-integration/introduction.mdx",tags:[],version:"current",lastUpdatedAt:1728610821,formattedLastUpdatedAt:"Oct 11, 2024",sidebarPosition:10,frontMatter:{title:"Introduction",sidebar_position:10},sidebar:"guides",previous:{title:"Web Security",permalink:"/guides/guides/web-security"},next:{title:"CI Provider Examples",permalink:"/guides/continuous-integration/ci-provider-examples"}},l={},a=[{value:"<Icon></Icon> What you&#39;ll learn",id:"What-youll-learn",level:2},{value:"What is Continuous Integration?",id:"What-is-Continuous-Integration",level:2},{value:"Setting up CI",id:"Setting-up-CI",level:2},{value:"Basics",id:"Basics",level:3},{value:"Boot your server",id:"Boot-your-server",level:3},{value:"Challenges",id:"Challenges",level:4},{value:"Solutions",id:"Solutions",level:4},{value:"Gotchas",id:"Gotchas",level:4},{value:"Record tests",id:"Record-tests",level:3},{value:"Recording tests allow you to:",id:"Recording-tests-allow-you-to",level:4},{value:"To record tests:",id:"To-record-tests",level:4},{value:"Run tests in parallel",id:"Run-tests-in-parallel",level:3},{value:"Official Cypress Docker Images",id:"Official-Cypress-Docker-Images",level:3},{value:"Cypress Docker variants",id:"Cypress-Docker-variants",level:4},{value:"CI Docker examples",id:"CI-Docker-examples",level:4},{value:"Advanced setup",id:"Advanced-setup",level:2},{value:"Machine requirements",id:"Machine-requirements",level:3},{value:"Dependencies",id:"Dependencies",level:3},{value:"Linux",id:"Linux",level:4},{value:"Caching",id:"Caching",level:3},{value:"We recommend users:",id:"We-recommend-users",level:4},{value:"Environment variables",id:"Environment-variables",level:3},{value:"Configuration Values",id:"Configuration-Values",level:4},{value:"Git information",id:"Git-information",level:4},{value:"CI Build Information",id:"CI-Build-Information",level:4},{value:"Custom Environment Variables",id:"Custom-Environment-Variables",level:4},{value:"Module API",id:"Module-API",level:3},{value:"Common problems and solutions",id:"Common-problems-and-solutions",level:2},{value:"Missing binary",id:"Missing-binary",level:3},{value:"Xvfb",id:"Xvfb",level:3},{value:"Colors",id:"Colors",level:3},{value:"See also",id:"See-also",level:2}];function d(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components},{DocsImage:n,DocsVideo:o,Icon:t}=s;return n||u("DocsImage",!0),o||u("DocsVideo",!0),t||u("Icon",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.admonition,{type:"info",children:[(0,r.jsxs)(s.h2,{id:"What-youll-learn",children:[(0,r.jsx)(t,{name:"graduation-cap"})," What you'll learn"]}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"An overview of Continuous Integration"}),"\n",(0,r.jsx)(s.li,{children:"How to run Cypress tests in Continuous Integration"}),"\n",(0,r.jsx)(s.li,{children:"How to configure Cypress in various CI Providers"}),"\n",(0,r.jsx)(s.li,{children:"How to record tests to Cypress Cloud"}),"\n",(0,r.jsx)(s.li,{children:"How to run tests in parallel on CI"}),"\n"]})]}),"\n",(0,r.jsx)(s.h2,{id:"What-is-Continuous-Integration",children:"What is Continuous Integration?"}),"\n",(0,r.jsx)(o,{src:"https://youtube.com/embed/USX6AntcPyg"}),"\n",(0,r.jsx)(s.h2,{id:"Setting-up-CI",children:"Setting up CI"}),"\n","\n",(0,r.jsx)(o,{src:"https://youtube.com/embed/saYovXS9Llk"}),"\n","\n",(0,r.jsx)(s.h3,{id:"Basics",children:"Basics"}),"\n",(0,r.jsx)(s.p,{children:"Running Cypress in Continuous Integration is almost the same as running it\nlocally in your terminal. You generally only need to do two things:"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"Install Cypress"})}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"npm install cypress --save-dev\n"})}),"\n",(0,r.jsxs)(s.ol,{start:"2",children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.strong,{children:"Run Cypress"})}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Depending on which CI provider you use, you may need a config file. You'll want\nto refer to your CI provider's documentation to know where to add the commands\nto install and run Cypress. For more configuration examples check out our\n",(0,r.jsx)(s.a,{href:"/guides/continuous-integration/ci-provider-examples",children:"examples"}),"."]}),"\n",(0,r.jsx)(s.h3,{id:"Boot-your-server",children:"Boot your server"}),"\n",(0,r.jsx)(s.h4,{id:"Challenges",children:"Challenges"}),"\n",(0,r.jsxs)(s.p,{children:["Typically you will need to boot a local server prior to running Cypress. When\nyou boot your web server, it runs as a ",(0,r.jsx)(s.strong,{children:"long running process"})," that will never\nexit. Because of this, you'll need it to run in the ",(0,r.jsx)(s.strong,{children:"background"})," - else your\nCI provider will never move onto the next command."]}),"\n",(0,r.jsx)(s.p,{children:"Backgrounding your server process means that your CI provider will continue to\nexecute the next command after executing the signal to start your server."}),"\n",(0,r.jsx)(s.p,{children:"Many people approach this situation by running a command like the following:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"npm start & cypress run // Do not do this\n"})}),"\n",(0,r.jsxs)(s.p,{children:["The problem is - what happens if your server takes time to boot? There is no\nguarantee that when the next command runs (",(0,r.jsx)(s.code,{children:"cypress run"}),") that your web server\nis up and available. So your Cypress test may start and try to visit your local\nserver before it is ready to be visited."]}),"\n",(0,r.jsx)(s.h4,{id:"Solutions",children:"Solutions"}),"\n",(0,r.jsxs)(s.p,{children:["Luckily, there are some solutions for this. Instead of introducing arbitrary\nwaits (like ",(0,r.jsx)(s.code,{children:"sleep 20"}),") you can use a better option."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsxs)(s.strong,{children:[(0,r.jsx)(s.code,{children:"wait-on"})," module"]})}),"\n",(0,r.jsxs)(s.p,{children:["Using the ",(0,r.jsx)(s.a,{href:"https://github.com/jeffbski/wait-on",children:"wait-on"})," module, you can block\nthe ",(0,r.jsx)(s.code,{children:"cypress run"})," command from executing until your server has booted."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"npm start & wait-on http://localhost:8080\n"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run\n"})}),"\n",(0,r.jsxs)(s.admonition,{type:"info",children:[(0,r.jsx)(s.p,{children:"Most CI providers will automatically kill background processes so you don't have\nto worry about cleaning up your server process once Cypress finishes."}),(0,r.jsxs)(s.p,{children:["However, if you're running this script locally you'll have to do a bit more work\nto collect the backgrounded PID and then kill it after ",(0,r.jsx)(s.code,{children:"cypress run"}),"."]})]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsxs)(s.strong,{children:[(0,r.jsx)(s.code,{children:"start-server-and-test"})," module"]})}),"\n",(0,r.jsxs)(s.p,{children:["If the server takes a very long time to start, we recommend trying the\n",(0,r.jsx)(s.a,{href:"https://github.com/bahmutov/start-server-and-test",children:"start-server-and-test"}),"\nmodule."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"npm install start-server-and-test --save-dev\n"})}),"\n",(0,r.jsxs)(s.p,{children:["In your ",(0,r.jsx)(s.code,{children:"package.json"})," scripts, pass the command to boot your server, the url\nyour server is hosted on and your Cypress test command."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  ...\n  "scripts": {\n    "start": "my-server -p 3030",\n    "cy:run": "cypress run",\n    "test": "start-server-and-test start http://localhost:3030 cy:run"\n  }\n}\n'})}),"\n",(0,r.jsxs)(s.p,{children:["In the example above, the ",(0,r.jsx)(s.code,{children:"cy:run"})," command will only be executed when the URL\n",(0,r.jsx)(s.code,{children:"http://localhost:3030"})," responds with an HTTP status code of 200. The server\nwill also shut down when the tests complete."]}),"\n",(0,r.jsx)(s.h4,{id:"Gotchas",children:"Gotchas"}),"\n",(0,r.jsxs)(s.p,{children:["When\n",(0,r.jsxs)(s.a,{href:"https://github.com/bahmutov/start-server-and-test#note-for-webpack-dev-server-users",children:["working with ",(0,r.jsx)(s.code,{children:"webpack-dev-server"})]}),"\nthat does not respond to ",(0,r.jsx)(s.code,{children:"HEAD"})," requests, use an explicit ",(0,r.jsx)(s.code,{children:"GET"})," method to ping\nthe server like this:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "scripts": {\n    "test": "start-server-and-test start http-get://localhost:3030 cy:run"\n  }\n}\n'})}),"\n",(0,r.jsxs)(s.p,{children:["When working with local ",(0,r.jsx)(s.code,{children:"https"})," in webpack, set an environment variable to allow\nlocal certificate:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "scripts": {\n    "start": "my-server -p 3030 --https",\n    "cy:run": "cypress run",\n    "cy:ci": "START_SERVER_AND_TEST_INSECURE=1 start-server-and-test start https-get://localhost:3030 cy:run"\n  }\n}\n'})}),"\n",(0,r.jsx)(s.h3,{id:"Record-tests",children:"Record tests"}),"\n",(0,r.jsxs)(s.p,{children:["Cypress can record your tests and make the results available in\n",(0,r.jsx)(s.a,{href:"/guides/cloud/introduction",children:"Cypress Cloud"}),". Cloud gives you access to recorded\ntests - typically when running Cypress tests from your\n",(0,r.jsx)(s.a,{href:"/guides/continuous-integration/introduction",children:"CI provider"})," - and provides you\ninsight into what happened when your tests ran."]}),"\n",(0,r.jsx)(s.h4,{id:"Recording-tests-allow-you-to",children:"Recording tests allow you to:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"See the number of failed, pending and passing tests."}),"\n",(0,r.jsx)(s.li,{children:"Get the entire stack trace of failed tests."}),"\n",(0,r.jsxs)(s.li,{children:["View screenshots taken when tests fail and when using\n",(0,r.jsx)(s.a,{href:"/api/commands/screenshot",children:(0,r.jsx)(s.code,{children:"cy.screenshot()"})}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["Watch a video of your entire test run or a clip at the point of test failure\nwhen the ",(0,r.jsx)(s.code,{children:"video"})," configuration is enabled."]}),"\n",(0,r.jsxs)(s.li,{children:["See which machines ran each test when\n",(0,r.jsx)(s.a,{href:"/guides/cloud/smart-orchestration/parallelization",children:"parallelized"}),"."]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"To-record-tests",children:"To record tests:"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"/guides/cloud/getting-started#Setup",children:"Set up your project to record"})}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsxs)(s.a,{href:"/guides/guides/command-line#cypress-run",children:["Pass the ",(0,r.jsx)(s.code,{children:"--record"})," flag to ",(0,r.jsx)(s.code,{children:"cypress run"})]}),"\nwithin CI."]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --record --key=abc123\n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"/guides/cloud/introduction",children:"Read the full guide on the Cypress Cloud."})}),"\n",(0,r.jsx)(s.h3,{id:"Run-tests-in-parallel",children:"Run tests in parallel"}),"\n",(0,r.jsx)(s.p,{children:"Cypress can run tests in parallel across multiple machines."}),"\n",(0,r.jsx)(s.p,{children:"You'll want to refer to your CI provider's documentation on how to set up\nmultiple machines to run in your CI environment."}),"\n",(0,r.jsxs)(s.p,{children:["Once multiple machines are available within your CI environment, you can pass\nthe ",(0,r.jsx)(s.a,{href:"/guides/guides/command-line#cypress-run-parallel",children:"--parallel"})," flag to have\nyour tests run in parallel."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --record --key=abc123 --parallel\n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"/guides/cloud/smart-orchestration/parallelization",children:"Read the full guide on parallelization."})}),"\n",(0,r.jsx)(s.h3,{id:"Official-Cypress-Docker-Images",children:"Official Cypress Docker Images"}),"\n",(0,r.jsxs)(s.p,{children:["CI providers, such as ",(0,r.jsx)(s.a,{href:"https://docs.github.com/en/actions/using-jobs/running-jobs-in-a-container",children:"GitHub Actions"})," and\n",(0,r.jsx)(s.a,{href:"https://circleci.com/docs/executor-intro/#docker",children:"CircleCI"}),", allow workflows to run using\n",(0,r.jsx)(s.a,{href:"https://docs.docker.com/guides/docker-concepts/the-basics/what-is-a-container/",children:"Docker container images"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["Cypress supports the use of ",(0,r.jsx)(s.a,{href:"https://docs.docker.com/guides/docker-overview/",children:"Docker"}),"\nthrough the provisioning of official ",(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-docker-images",children:"Cypress Docker images"}),".\nImages are Linux-based and support ",(0,r.jsx)(s.code,{children:"Linux/amd64"})," and ",(0,r.jsx)(s.code,{children:"Linux/arm64"})," platforms."]}),"\n",(0,r.jsx)(s.p,{children:"Cypress Docker images provide a consistent environment tailored for use with Cypress.\nBy choosing an appropriate Cypress Docker image, you determine the exact environment that your Cypress tests run in.\nThis allows you to shield your workflows from version updates made by your CI provider,\nfor instance if they update Node.js or browser versions."}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-docker-images",children:"Cypress Docker images"})," are available from the repositories:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://hub.docker.com/u/cypress",children:"Docker Hub"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://gallery.ecr.aws/cypress-io",children:"Amazon ECR (Elastic Container Registry) Public Gallery"})}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"Cypress-Docker-variants",children:"Cypress Docker variants"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-docker-images/tree/master/base",children:"cypress/base"})," is the entry-level Cypress Docker image.\nIt contains a complete Linux (Debian) operating system, together with the\n",(0,r.jsx)(s.a,{href:"https://docs.cypress.io/guides/getting-started/installing-cypress#UbuntuDebian",children:"prerequisite operating system packages"})," for Cypress,\nNode.js, npm and Yarn v1 Classic.\nAn image ",(0,r.jsx)(s.code,{children:"<tag>"})," gives you the choice of Node.js version."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-docker-images/tree/master/browsers",children:"cypress/browsers"})," builds on the\n",(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-docker-images/tree/master/base",children:"cypress/base"})," image.\nFor ",(0,r.jsx)(s.code,{children:"Linux/amd64"})," images it adds Google Chrome, Mozilla Firefox and Microsoft Edge browsers.\nA corresponding image ",(0,r.jsx)(s.code,{children:"<tag>"})," allows selection of the combined Node.js and browser versions.\nCurrently ",(0,r.jsx)(s.code,{children:"Linux/arm64"})," images do ",(0,r.jsx)(s.strong,{children:"not"})," contain browsers."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-docker-images/tree/master/included",children:"cypress/included"})," builds on the\n",(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-docker-images/tree/master/browsers",children:"cypress/browsers"})," image.\nIt adds a fixed version of Cypress, globally installed by npm.\nA short-form image ",(0,r.jsx)(s.code,{children:"<tag>"})," selects the version of Cypress.\nA corresponding long-form ",(0,r.jsx)(s.code,{children:"<tag>"})," selects the version of Cypress and documents the combined Node.js and browser versions."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-docker-images/tree/master/base",children:"cypress/base"})," allows testing in the Electron browser,\nbuilt-in to Cypress. ",(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-docker-images/tree/master/browsers",children:"cypress/browsers"}),"\nadds the capability to test against Chrome, Firefox and Edge. These are the primary images for use in CI workflows.\n",(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-docker-images/tree/master/included",children:"cypress/included"}),"\nis intended to support local testing. It can also be used in CI workflows."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-docker-images/tree/master/factory",children:"cypress/factory"}),"\nprovides the base operating system image and allows individual selection of other components\nby version. It is used to generate customized Docker images."]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"CI-Docker-examples",children:"CI Docker examples"}),"\n",(0,r.jsxs)(s.p,{children:["You can find examples that use Cypress Docker images in CI on the documentation page\n",(0,r.jsx)(s.a,{href:"ci-provider-examples",children:"CI Provider Examples"})," and in the example repository\n",(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-example-kitchensink/blob/master/README.md",children:"cypress-example-kitchensink"}),"."]}),"\n",(0,r.jsx)(s.p,{children:"The following individual workflows show Cypress Docker images being used in CircleCI"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-realworld-app/blob/develop/.circleci/config.yml",children:"Real World App - CircleCI"})}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"and in GitHub Actions"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-realworld-app/blob/develop/.github/workflows/main.yml",children:"Real World App - GitHub Actions"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-docker-images/blob/master/.github/workflows/example-cypress-github-action.yml",children:"cypress-docker-images - GitHub Actions"})}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"Advanced-setup",children:"Advanced setup"}),"\n",(0,r.jsx)(s.h3,{id:"Machine-requirements",children:"Machine requirements"}),"\n",(0,r.jsxs)(s.p,{children:["Hardware requirements to run Cypress depend how much memory the browser, the\napplication under test, and the server (if running it locally) need to run the\ntests without crashing. Visit our\n",(0,r.jsx)(s.a,{href:"/guides/getting-started/installing-cypress#System-requirements",children:"System Requirements"}),"\nguide for minimum hardware recommendations."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Some signs that your machine may not have enough CPU or memory to run\nCypress:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"The recorded video artifacts have random pauses or dropped frames."}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"/guides/references/troubleshooting#Log-memory-and-CPU-usage",children:"Debug logs of the CPU and memory"}),"\nfrequently show CPU percent above 100%."]}),"\n",(0,r.jsx)(s.li,{children:"The browser crashes."}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["You can see the total available machine memory and the current free memory by\nrunning the ",(0,r.jsx)(s.a,{href:"https://on.cypress.io/command-line#cypress-info",children:(0,r.jsx)(s.code,{children:"cypress info"})}),"\ncommand."]}),"\n","\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-css",children:"npx cypress info\n...\nCypress Version: 13.6.6 (stable)\nSystem Platform: linux (Debian - 11.6)\nSystem Memory: 73.6 GB free 48.6 GB\n"})}),"\n",(0,r.jsx)(s.p,{children:"You can see the CPU parameters on the CI machines by executing the command\nbelow."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"node -p 'os.cpus()'\n[\n  {\n    model: 'Intel(R) Xeon(R) Platinum 8124M CPU @ 3.00GHz',\n    speed: 3399,\n    times: { user: 760580, nice: 1010, sys: 158130, idle: 1638340, irq: 0 }\n  }\n  ...\n]\n"})}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Example projects and the machine configurations used to run them on CI:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["The ",(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-realworld-app",children:"Real World App"}),"\nproject runs tests on a CircleCI machine using the\n",(0,r.jsx)(s.a,{href:"https://circleci.com/docs/executor-intro/#docker",children:"Docker executor"})," with\n",(0,r.jsx)(s.a,{href:"https://circleci.com/docs/configuration-reference/#docker-execution-environment",children:(0,r.jsx)(s.code,{children:"resource_class: large"})}),"\nproviding 4 vCPUs and 8 GB of RAM. ",(0,r.jsx)(s.code,{children:"cypress info"})," reports\n",(0,r.jsx)(s.code,{children:"System Memory: 73.6 GB free 48.6 GB"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["The ",(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-realworld-app",children:"Real World App"})," project also\nexecutes its tests on\n",(0,r.jsx)(s.a,{href:"https://docs.github.com/en/actions",children:"GitHub Actions"})," using the\n",(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/github-action",children:"Cypress GitHub Action"})," with the\n",(0,r.jsx)(s.a,{href:"https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners",children:"standard Ubuntu GitHub-hosted runner for Public repositories"}),"\nproviding 4 vCPUs and 16 GB of RAM. ",(0,r.jsx)(s.code,{children:"cypress info"})," reports\n",(0,r.jsx)(s.code,{children:"System Memory: 16.8 GB free 15.5 GB"})," with CPUs reported as\n",(0,r.jsx)(s.code,{children:"AMD EPYC 7763 64-Core Processor"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Tip:"})," if there are problems with longer specs, try splitting them into\nshorter ones, following\n",(0,r.jsx)(s.a,{href:"https://glebbahmutov.com/blog/split-spec/",children:"this example"}),"."]}),"\n",(0,r.jsx)(s.h3,{id:"Dependencies",children:"Dependencies"}),"\n",(0,r.jsx)(s.p,{children:"Cypress runs on many CI providers' virtual machine environments out-of-the-box without needing additional dependencies installed."}),"\n",(0,r.jsx)(s.h4,{id:"Linux",children:"Linux"}),"\n",(0,r.jsxs)(s.p,{children:["If you see a message about a missing dependency when you run Cypress in a Linux CI environment, then refer to the ",(0,r.jsx)(s.a,{href:"/guides/getting-started/installing-cypress#Linux-Prerequisites",children:"Linux Prerequisites"})," lists for guidance."]}),"\n",(0,r.jsx)(s.h3,{id:"Caching",children:"Caching"}),"\n",(0,r.jsxs)(s.p,{children:["As of ",(0,r.jsx)(s.a,{href:"/guides/references/changelog#3-0-0",children:"Cypress version 3.0"}),", Cypress\ndownloads its binary to the global system cache - on linux that is\n",(0,r.jsx)(s.code,{children:"~/.cache/Cypress"}),". By ensuring this cache persists across builds you can save\nminutes off install time by preventing a large binary download."]}),"\n",(0,r.jsx)(s.h4,{id:"We-recommend-users",children:"We recommend users:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Cache the ",(0,r.jsx)(s.code,{children:"~/.cache"})," folder after running ",(0,r.jsx)(s.code,{children:"npm install"}),", ",(0,r.jsx)(s.code,{children:"yarn"}),",\n",(0,r.jsx)(s.a,{href:"https://docs.npmjs.com/cli/ci",children:(0,r.jsx)(s.code,{children:"npm ci"})})," or equivalents as demonstrated in\nthe configs below."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Do not"})," cache ",(0,r.jsx)(s.code,{children:"node_modules"})," across builds. This bypasses more intelligent\ncaching packaged with ",(0,r.jsx)(s.code,{children:"npm"})," or ",(0,r.jsx)(s.code,{children:"yarn"}),", and can cause issues with Cypress not\ndownloading the Cypress binary on ",(0,r.jsx)(s.code,{children:"npm install"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["If you are using ",(0,r.jsx)(s.code,{children:"npm install"})," in your build process, consider\n",(0,r.jsxs)(s.a,{href:"https://blog.npmjs.org/post/171556855892/introducing-npm-ci-for-faster-more-reliable",children:["switching to ",(0,r.jsx)(s.code,{children:"npm ci"})]}),"\nand caching the ",(0,r.jsx)(s.code,{children:"~/.npm"})," directory for a faster and more reliable build."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["If you are using ",(0,r.jsx)(s.code,{children:"yarn"}),", caching ",(0,r.jsx)(s.code,{children:"~/.cache"})," will include both the ",(0,r.jsx)(s.code,{children:"yarn"})," and\nCypress caches. Consider using ",(0,r.jsx)(s.code,{children:"yarn install --frozen-lockfile"})," as an\n",(0,r.jsx)(s.a,{href:"https://docs.npmjs.com/cli/ci",children:(0,r.jsx)(s.code,{children:"npm ci"})})," equivalent."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["If you need to override the binary location for some reason, use\n",(0,r.jsx)(s.a,{href:"/guides/references/advanced-installation#Binary-cache",children:"CYPRESS_CACHE_FOLDER"}),"\nenvironment variable."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:['Make sure you are not restoring the previous cache using lax keys; then the\nCypress binaries can "snowball", read\n',(0,r.jsx)(s.a,{href:"https://glebbahmutov.com/blog/do-not-let-cypress-cache-snowball/",children:"Do Not Let Cypress Cache Snowball on CI"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Tip:"})," you can find lots of CI examples with configured caching in our\n",(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-example-kitchensink#ci-status",children:"cypress-example-kitchensink"}),"\nrepository."]}),"\n",(0,r.jsx)(s.h3,{id:"Environment-variables",children:"Environment variables"}),"\n",(0,r.jsx)(s.p,{children:"You can set various environment variables to modify how Cypress runs."}),"\n",(0,r.jsx)(s.h4,{id:"Configuration-Values",children:"Configuration Values"}),"\n",(0,r.jsx)(s.p,{children:"You can set any configuration value as an environment variable. This overrides\nvalues in the Cypress configuration."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.em,{children:"Typical use cases would be modifying things like:"})})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"CYPRESS_BASE_URL"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"CYPRESS_VIDEO"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"CYPRESS_VIDEO_COMPRESSION"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"CYPRESS_REPORTER"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"CYPRESS_INSTALL_BINARY"})}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Refer to the\n",(0,r.jsx)(s.a,{href:"/guides/references/configuration#Environment-Variables",children:"Environment Variables recipe"}),"\nfor more examples."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.em,{children:"Record Key"})})}),"\n",(0,r.jsxs)(s.p,{children:["If you are ",(0,r.jsx)(s.a,{href:"#Record-tests",children:"recording your runs"})," on a public project, you'll want\nto protect your Record Key.\n",(0,r.jsx)(s.a,{href:"/guides/cloud/account-management/projects#Identification",children:"Learn why."})]}),"\n",(0,r.jsx)(s.p,{children:"Instead of hard coding it into your run command like this:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --record --key abc-key-123\n"})}),"\n",(0,r.jsxs)(s.p,{children:["You can set the record key as the environment variable, ",(0,r.jsx)(s.code,{children:"CYPRESS_RECORD_KEY"}),",\nand we'll automatically use that value. You can now omit the ",(0,r.jsx)(s.code,{children:"--key"})," flag when\nrecording."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"cypress run --record\n"})}),"\n",(0,r.jsx)(s.p,{children:"Typically you'd set this inside of your CI provider."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.em,{children:"CircleCI Environment Variable"})})}),"\n",(0,r.jsx)(n,{src:"/img/guides/continuous-integration/cypress-record-key-as-environment-variable.png",alt:"Record key environment variable"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:(0,r.jsx)(s.em,{children:"TravisCI Environment Variable"})})}),"\n",(0,r.jsx)(n,{src:"/img/guides/continuous-integration/cypress-record-key-as-env-var-travis.png",alt:"Travis key environment variable"}),"\n",(0,r.jsx)(s.h4,{id:"Git-information",children:"Git information"}),"\n",(0,r.jsxs)(s.p,{children:["Cypress uses the\n",(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/commit-info",children:"@cypress/commit-info"})," package to\nextract git information to associate with the run (e.g. branch, commit message,\nauthor)."]}),"\n",(0,r.jsxs)(s.p,{children:["It assumes there is a ",(0,r.jsx)(s.code,{children:".git"})," folder and uses Git commands to get each property,\nlike ",(0,r.jsx)(s.code,{children:"git show -s --pretty=%B"})," to get commit message, see\n",(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/commit-info/blob/master/src/git-api.js",children:"src/git-api.js"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["Under some environment setups (e.g. ",(0,r.jsx)(s.code,{children:"docker"}),"/",(0,r.jsx)(s.code,{children:"docker-compose"}),") if the ",(0,r.jsx)(s.code,{children:".git"}),"\ndirectory is not available or mounted, you can pass all git related information\nunder custom environment variables."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Branch: ",(0,r.jsx)(s.code,{children:"COMMIT_INFO_BRANCH"})]}),"\n",(0,r.jsxs)(s.li,{children:["Message: ",(0,r.jsx)(s.code,{children:"COMMIT_INFO_MESSAGE"})]}),"\n",(0,r.jsxs)(s.li,{children:["Author email: ",(0,r.jsx)(s.code,{children:"COMMIT_INFO_EMAIL"})]}),"\n",(0,r.jsxs)(s.li,{children:["Author: ",(0,r.jsx)(s.code,{children:"COMMIT_INFO_AUTHOR"})]}),"\n",(0,r.jsxs)(s.li,{children:["SHA: ",(0,r.jsx)(s.code,{children:"COMMIT_INFO_SHA"})]}),"\n",(0,r.jsxs)(s.li,{children:["Remote: ",(0,r.jsx)(s.code,{children:"COMMIT_INFO_REMOTE"})]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["If the commit information is missing in the Cypress Cloud run then\n",(0,r.jsx)(s.a,{href:"/guides/cloud/integrations/source-control/github",children:"GitHub Integration"})," or other\ntasks might not work correctly. To see the relevant Cypress debug logs, set the\nenvironment variable ",(0,r.jsx)(s.code,{children:"DEBUG"})," on your CI machine and inspect the terminal output\nto see why the commit information is unavailable."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"DEBUG=commit-info,cypress:server:record\n"})}),"\n",(0,r.jsx)(s.h4,{id:"CI-Build-Information",children:"CI Build Information"}),"\n",(0,r.jsx)(s.p,{children:"In some newer CI providers, Cypress can't map the environment variables required\nto link back to builds or pull requests. In this case we provided users some\nenvironment variables to help pass that information along."}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Pull Request Id: ",(0,r.jsx)(s.code,{children:"CYPRESS_PULL_REQUEST_ID"})]}),"\n",(0,r.jsxs)(s.li,{children:["Pull Request URL: ",(0,r.jsx)(s.code,{children:"CYPRESS_PULL_REQUEST_URL"})]}),"\n",(0,r.jsxs)(s.li,{children:["Build URL: ",(0,r.jsx)(s.code,{children:"CYPRESS_CI_BUILD_URL"})]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"Setting these will allow links within the Cloud run to take you to the\nappropriate place."}),"\n",(0,r.jsx)(s.h4,{id:"Custom-Environment-Variables",children:"Custom Environment Variables"}),"\n",(0,r.jsx)(s.p,{children:"You can also set custom environment variables for use in your tests. These\nenable your code to reference dynamic values."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:'export "EXTERNAL_API_SERVER=https://corp.acme.co"\n'})}),"\n",(0,r.jsx)(s.p,{children:"And then in your tests:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-javascript",children:"cy.request({\n  method: 'POST',\n  url: Cypress.env('EXTERNAL_API_SERVER') + '/users/1',\n  body: {\n    foo: 'bar',\n    baz: 'quux',\n  },\n})\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Refer to the dedicated\n",(0,r.jsx)(s.a,{href:"/guides/guides/environment-variables",children:"Environment Variables Guide"})," for more\nexamples."]}),"\n",(0,r.jsx)(s.h3,{id:"Module-API",children:"Module API"}),"\n",(0,r.jsx)(s.p,{children:"Oftentimes it can be less complex to programmatically control and boot your\nservers with a Node script."}),"\n",(0,r.jsxs)(s.p,{children:["If you're using our ",(0,r.jsx)(s.a,{href:"/guides/guides/module-api",children:"Module API"})," then you can write a\nscript that boots and then shuts down the server later. As a bonus, you can work\nwith the results and do other things."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"// scripts/run-cypress-tests.js\n\nconst cypress = require('cypress')\nconst server = require('./lib/my-server')\n\n// start your server\nreturn server.start().then(() => {\n  // kick off a cypress run\n  return cypress.run().then((results) => {\n    // stop your server when it's complete\n    return server.stop()\n  })\n})\n"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"node scripts/run-cypress-tests.js\n"})}),"\n",(0,r.jsx)(s.h2,{id:"Common-problems-and-solutions",children:"Common problems and solutions"}),"\n",(0,r.jsx)(s.h3,{id:"Missing-binary",children:"Missing binary"}),"\n",(0,r.jsxs)(s.p,{children:["When npm or yarn install the ",(0,r.jsx)(s.code,{children:"cypress"})," package, a ",(0,r.jsx)(s.code,{children:"postinstall"})," hook is executed\nthat downloads the platform-specific Cypress binary. If the hook is skipped for\nany reason the Cypress binary will be missing (unless it was already cached)."]}),"\n",(0,r.jsxs)(s.p,{children:["To better diagnose the error, add\n",(0,r.jsx)(s.a,{href:"/guides/guides/command-line#cypress-cache-command",children:"commands to get information about the Cypress cache"}),"\nto your CI setup. This will print where the binary is located and what versions\nare already present."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"npx cypress cache path\nnpx cypress cache list\n"})}),"\n",(0,r.jsx)(s.p,{children:"If the required binary version is not found in the cache, you can try the\nfollowing:"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["Clean your CI's cache using your CI's settings to force a clean ",(0,r.jsx)(s.code,{children:"npm install"}),"\non the next build."]}),"\n",(0,r.jsxs)(s.li,{children:["Run the binary install yourself by adding the command ",(0,r.jsx)(s.code,{children:"npx cypress install"}),"\nto your CI script. If there is a binary already present, it should finish\nquickly."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["See\n",(0,r.jsx)(s.a,{href:"https://github.com/bahmutov/yarn-cypress-cache",children:"bahmutov/yarn-cypress-cache"}),"\nfor an example that runs the ",(0,r.jsx)(s.code,{children:"npx cypress install"})," command to ensure the Cypress\nbinary is always present before the tests begin."]}),"\n",(0,r.jsx)(s.h3,{id:"Xvfb",children:"Xvfb"}),"\n",(0,r.jsxs)(s.p,{children:["When running on Linux, Cypress needs an X11 server; otherwise it spawns its own\nX11 server during the test run. When running several Cypress instances in\nparallel, the spawning of multiple X11 servers at once can cause problems for\nsome of them. In this case, you can separately start a single X11 server and\npass the server's address to each Cypress instance using ",(0,r.jsx)(s.code,{children:"DISPLAY"})," variable."]}),"\n",(0,r.jsxs)(s.p,{children:["First, spawn the X11 server in the background at some port, for example ",(0,r.jsx)(s.code,{children:":99"}),".\nIf you have installed ",(0,r.jsx)(s.code,{children:"xvfb"})," on Linux or if you are using one of our Docker\nimages from\n",(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-docker-images",children:"cypress-docker-images"}),",\nthe tools below should be available."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"Xvfb :99 &\n"})}),"\n",(0,r.jsx)(s.p,{children:"Second, set the X11 address in an environment variable"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"export DISPLAY=:99\n"})}),"\n",(0,r.jsx)(s.p,{children:"Start Cypress as usual"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"npx cypress run\n"})}),"\n",(0,r.jsxs)(s.p,{children:["After all tests across all Cypress instances finish, kill the Xvfb background\nprocess using ",(0,r.jsx)(s.code,{children:"pkill"})]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"pkill Xvfb\n"})}),"\n",(0,r.jsxs)(s.admonition,{type:"caution",children:[(0,r.jsx)(s.p,{children:"In certain Linux environments, you may experience connection errors with your\nX11 server. In this case, you may need to start Xvfb with the following command:"}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"Xvfb -screen 0 1024x768x24 :99 &\n"})}),(0,r.jsx)(s.p,{children:"Cypress internally passes these Xvfb arguments, but if you are spawning your own\nXvfb, you would need to pass these arguments. This is necessary to avoid using\n8-bit color depth with Xvfb, which will prevent Chrome or Electron from\ncrashing."})]}),"\n",(0,r.jsx)(s.h3,{id:"Colors",children:"Colors"}),"\n",(0,r.jsxs)(s.p,{children:["If you want colors to be disabled, you can pass the ",(0,r.jsx)(s.code,{children:"NO_COLOR"})," environment\nvariable to disable colors. You may want to do this if ASCII characters or\ncolors are not properly formatted in your CI."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-shell",children:"NO_COLOR=1 cypress run\n"})}),"\n",(0,r.jsx)(s.h2,{id:"See-also",children:"See also"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-realworld-app",children:"Cypress Real World App"}),"\nruns parallelized CI jobs across multiple operating systems, browsers, and\nviewport sizes."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://github.com/cypress-io/cypress-example-kitchensink#ci-status",children:"cypress-example-kitchensink"}),"\nis set up to run on multiple CI providers."]}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"/guides/cloud/test-replay",children:"Test Replay"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"/guides/guides/cross-browser-testing",children:"Cross Browser Testing Guide"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://www.cypress.io/blog/2018/08/30/setting-up-bitbucket-pipelines-with-proper-caching-of-npm-and-cypress/",children:"Blog: Setting up Bitbucket Pipelines with proper caching of npm and Cypress"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://www.cypress.io/blog/2018/08/28/record-test-artifacts-from-any-ci/",children:"Blog: Record Test Artifacts from any Docker CI"})}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"https://www.cypress.io/blog/2019/10/04/webcast-recording-continuous-integration-with-cypress/",children:"Continuous Integration with Cypress"}),"\nwebinar covering TeamCity, Travis and CircleCI setups."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function u(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,s,n)=>{n.d(s,{Z:()=>c,a:()=>t});var r=n(7294);const i={},o=r.createContext(i);function t(e){const s=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:s},e.children)}}}]);