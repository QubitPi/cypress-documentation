"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[1299],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),c=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},y="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),y=c(n),d=a,m=y["".concat(o,".").concat(d)]||y[d]||u[d]||s;return n?r.createElement(m,i(i({ref:t},l),{},{components:n})):r.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=d;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[y]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<s;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2239:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>y,frontMatter:()=>s,metadata:()=>p,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const s={title:"Cypress.testingType"},i=void 0,p={unversionedId:"api/cypress-api/testing-type",id:"api/cypress-api/testing-type",title:"Cypress.testingType",description:"Cypress.testingType returns the current testing type, determined by your",source:"@site/docs/api/cypress-api/testing-type.mdx",sourceDirName:"api/cypress-api",slug:"/api/cypress-api/testing-type",permalink:"/cypress-documentation/api/cypress-api/testing-type",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/cypress-api/testing-type.mdx",tags:[],version:"current",lastUpdatedAt:1697463939,formattedLastUpdatedAt:"Oct 16, 2023",frontMatter:{title:"Cypress.testingType"},sidebar:"api",previous:{title:"Cypress.spec",permalink:"/cypress-documentation/api/cypress-api/spec"},next:{title:"Cypress.version",permalink:"/cypress-documentation/api/cypress-api/version"}},o={},c=[{value:"Syntax",id:"Syntax",level:2},{value:"Examples",id:"Examples",level:2},{value:"Testing Type",id:"Testing-Type",level:3},{value:"Conditionals",id:"Conditionals",level:3},{value:"History",id:"History",level:2}],l={toc:c};function y(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Cypress.testingType")," returns the current testing type, determined by your\nselection in the Cypress Launchpad. The ",(0,a.kt)("inlineCode",{parentName:"p"},"Cypress.testingType")," returns ",(0,a.kt)("inlineCode",{parentName:"p"},"e2e")," for\n",(0,a.kt)("a",{parentName:"p",href:"/guides/core-concepts/testing-types#What-is-E2E-Testing"},"E2E Testing")," or\n",(0,a.kt)("inlineCode",{parentName:"p"},"component")," for\n",(0,a.kt)("a",{parentName:"p",href:"/guides/core-concepts/testing-types#What-is-Component-Testing"},"Component Testing"),"."),(0,a.kt)("h2",{id:"Syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"Cypress.testingType // returns 'e2e' or 'component'\n")),(0,a.kt)("h2",{id:"Examples"},"Examples"),(0,a.kt)("h3",{id:"Testing-Type"},"Testing Type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"it('is running experimental component testing mode', () => {\n  expect(Cypress.testingType).to.equal('component')\n})\n")),(0,a.kt)("h3",{id:"Conditionals"},"Conditionals"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"it('does something differently', () => {\n  if (Cypress.testingType === 'e2e') {\n    cy.exec('something')\n  } else {\n    cy.exec('something else')\n  }\n})\n")),(0,a.kt)("h2",{id:"History"},"History"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Version"),(0,a.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/guides/references/changelog"},"7.0.0")),(0,a.kt)("td",{parentName:"tr",align:null},"Added ",(0,a.kt)("inlineCode",{parentName:"td"},"Cypress.testingType"))))))}y.isMDXComponent=!0}}]);