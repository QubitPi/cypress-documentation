"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[1115],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(n),c=r,k=m["".concat(s,".").concat(c)]||m[c]||u[c]||l;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7377:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>k,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={title:"Advanced Installation"},i=void 0,o={unversionedId:"guides/references/advanced-installation",id:"guides/references/advanced-installation",title:"Advanced Installation",description:"Environment variables",source:"@site/docs/guides/references/advanced-installation.mdx",sourceDirName:"guides/references",slug:"/guides/references/advanced-installation",permalink:"/guides/references/advanced-installation",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/guides/references/advanced-installation.mdx",tags:[],version:"current",lastUpdatedAt:1717543563,formattedLastUpdatedAt:"Jun 4, 2024",frontMatter:{title:"Advanced Installation"},sidebar:"guides",previous:{title:"Visual Testing",permalink:"/guides/tooling/visual-testing"},next:{title:"Assertions",permalink:"/guides/references/assertions"}},s={},p=[{value:"Environment variables",id:"Environment-variables",level:2},{value:"Install binary",id:"Install-binary",level:2},{value:"Skipping installation",id:"Skipping-installation",level:3},{value:"Binary cache",id:"Binary-cache",level:2},{value:"Run binary",id:"Run-binary",level:2},{value:"Mac",id:"Mac",level:3},{value:"Linux",id:"Linux",level:3},{value:"Windows",id:"Windows",level:3},{value:"Download URLs",id:"Download-URLs",level:2},{value:"Mirroring",id:"Mirroring",level:2},{value:"Download path template",id:"Download-path-template",level:2},{value:"Using a custom certificate authority (CA)",id:"Using-a-custom-certificate-authority-CA",level:2},{value:"Opt out of sending exception data to Cypress",id:"Opt-out-of-sending-exception-data-to-Cypress",level:2},{value:"Opt out on Linux or macOS",id:"Opt-out-on-Linux-or-macOS",level:3},{value:"Opt out on Windows",id:"Opt-out-on-Windows",level:3},{value:"Opt out of Cypress commercial messaging",id:"Opt-out-of-Cypress-commercial-messaging",level:2},{value:"Install pre-release version",id:"Install-pre-release-version",level:2},{value:"Windows Subsystem for Linux",id:"Windows-Subsystem-for-Linux",level:2}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},m=d("Badge"),u=d("DocsImage"),c={toc:p};function k(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"Environment-variables"},"Environment variables"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CYPRESS_INSTALL_BINARY")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#Install-binary"},"Destination of Cypress binary that's downloaded and installed"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CYPRESS_CONNECT_RETRY_THRESHOLD")),(0,r.kt)("td",{parentName:"tr",align:null},"Overrides the maximum number of retries when connecting to a browser. The default value is 62.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CYPRESS_DOWNLOAD_MIRROR")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#Mirroring"},"Downloads the Cypress binary through a mirror server"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CYPRESS_DOWNLOAD_PATH_TEMPLATE")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#Download-path-template"},"Allows generating a custom URL to download the Cypress binary from"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CYPRESS_CACHE_FOLDER")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#Binary-cache"},"Changes the Cypress binary cache location"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CYPRESS_RUN_BINARY")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#Run-binary"},"Location of Cypress binary at run-time"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CYPRESS_VERIFY_TIMEOUT")),(0,r.kt)("td",{parentName:"tr",align:null},"Overrides the timeout duration for the ",(0,r.kt)("inlineCode",{parentName:"td"},"verify")," command. The default value is 30000.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("del",{parentName:"td"},"CYPRESS_SKIP_BINARY_INSTALL")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(m,{type:"danger",mdxType:"Badge"},"removed")," use ",(0,r.kt)("inlineCode",{parentName:"td"},"CYPRESS_INSTALL_BINARY=0")," instead")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("del",{parentName:"td"},"CYPRESS_BINARY_VERSION")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)(m,{type:"danger",mdxType:"Badge"},"removed")," use ",(0,r.kt)("inlineCode",{parentName:"td"},"CYPRESS_INSTALL_BINARY")," instead")))),(0,r.kt)("h2",{id:"Install-binary"},"Install binary"),(0,r.kt)("p",null,"Using the ",(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_INSTALL_BINARY")," environment variable, you can control how\nCypress is installed. To override what is installed, you set\n",(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_INSTALL_BINARY")," alongside the ",(0,r.kt)("inlineCode",{parentName:"p"},"npm install")," command."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"This is helpful if you want to:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install a version different than the default npm package.\n",(0,r.kt)("inlineCode",{parentName:"li"},"shell CYPRESS_INSTALL_BINARY=2.0.1 npm install cypress@2.0.3 ")),(0,r.kt)("li",{parentName:"ul"},"Specify an external URL (to bypass a corporate firewall).\n",(0,r.kt)("inlineCode",{parentName:"li"},"shell CYPRESS_INSTALL_BINARY=https://company.domain.com/cypress.zip npm install cypress ")),(0,r.kt)("li",{parentName:"ul"},"Specify a file to install locally instead of using the internet.\n",(0,r.kt)("inlineCode",{parentName:"li"},"shell CYPRESS_INSTALL_BINARY=/local/path/to/cypress.zip npm install cypress "))),(0,r.kt)("p",null,"In all cases, the fact that the binary was installed from a custom location ",(0,r.kt)("em",{parentName:"p"},"is\nnot saved in your ",(0,r.kt)("inlineCode",{parentName:"em"},"package.json")," file"),". Every repeated installation needs to use\nthe same environment variable to install the same binary."),(0,r.kt)("h3",{id:"Skipping-installation"},"Skipping installation"),(0,r.kt)("p",null,"You can also force Cypress to skip the installation of the binary application by\nsetting ",(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_INSTALL_BINARY=0"),". This could be useful if you want to prevent\nCypress from downloading the Cypress binary at the time of ",(0,r.kt)("inlineCode",{parentName:"p"},"npm install"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"CYPRESS_INSTALL_BINARY=0 npm install\n")),(0,r.kt)("p",null,"Now Cypress will skip its install phase once the npm module is installed."),(0,r.kt)("h2",{id:"Binary-cache"},"Binary cache"),(0,r.kt)("p",null,"As of version ",(0,r.kt)("inlineCode",{parentName:"p"},"3.0"),", Cypress downloads the matching Cypress binary to the global\nsystem cache, so that the binary can be shared between projects. By default,\nglobal cache folders are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"MacOS"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"~/Library/Caches/Cypress")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Linux"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"~/.cache/Cypress")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Windows"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"/AppData/Local/Cypress/Cache"))),(0,r.kt)("p",null,"To override the default cache folder, set the environment variable\n",(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_CACHE_FOLDER"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"CYPRESS_CACHE_FOLDER=~/Desktop/cypress_cache npm install\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"CYPRESS_CACHE_FOLDER=~/Desktop/cypress_cache npm run test\n")),(0,r.kt)("p",null,"Cypress will automatically replace the ",(0,r.kt)("inlineCode",{parentName:"p"},"~")," with the user's home directory. So\nyou can pass ",(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_CACHE_FOLDER")," as a string from CI configuration files, for\nexample:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"environment:\n  CYPRESS_CACHE_FOLDER: '~/.cache/Cypress'\n")),(0,r.kt)("p",null,"See also\n",(0,r.kt)("a",{parentName:"p",href:"/guides/continuous-integration/introduction#Caching"},"Continuous Integration - Caching"),"\nsection in the documentation."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_CACHE_FOLDER")," will need to exist every time cypress is launched. To\nensure this, consider exporting this environment variable. For example, in a\n",(0,r.kt)("inlineCode",{parentName:"p"},".bash_profile")," (MacOS, Linux), or using ",(0,r.kt)("inlineCode",{parentName:"p"},"RegEdit")," (Windows).")),(0,r.kt)("h2",{id:"Run-binary"},"Run binary"),(0,r.kt)("p",null,"Setting the environment variable ",(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_RUN_BINARY")," overrides where the npm\nmodule finds the Cypress binary."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_RUN_BINARY")," should be a path to an already unzipped binary executable.\nThe Cypress commands ",(0,r.kt)("inlineCode",{parentName:"p"},"open"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"run"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"verify")," will then launch the provided\nbinary."),(0,r.kt)("h3",{id:"Mac"},"Mac"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"CYPRESS_RUN_BINARY=~/Downloads/Cypress.app/Contents/MacOS/Cypress cypress run\n")),(0,r.kt)("h3",{id:"Linux"},"Linux"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"CYPRESS_RUN_BINARY=~/Downloads/Cypress/Cypress cypress run\n")),(0,r.kt)("h3",{id:"Windows"},"Windows"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"CYPRESS_RUN_BINARY=~/Downloads/Cypress/Cypress.exe cypress run\n")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"We recommend ",(0,r.kt)("strong",{parentName:"p"},"not exporting")," the ",(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_RUN_BINARY")," environment variable,\nsince it will affect every cypress module installed on your file system.")),(0,r.kt)("h2",{id:"Download-URLs"},"Download URLs"),(0,r.kt)("p",null,"If you want to download a specific Cypress version for a given platform\n(Operating System), you can get it from our CDN."),(0,r.kt)("p",null,"The download server URL is ",(0,r.kt)("inlineCode",{parentName:"p"},"https://download.cypress.io"),"."),(0,r.kt)("p",null,"We currently have the following downloads available:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Windows 64-bit (",(0,r.kt)("inlineCode",{parentName:"li"},"?platform=win32&arch=x64"),")"),(0,r.kt)("li",{parentName:"ul"},"Linux 64-bit (",(0,r.kt)("inlineCode",{parentName:"li"},"?platform=linux"),")"),(0,r.kt)("li",{parentName:"ul"},"macOS 64-bit (",(0,r.kt)("inlineCode",{parentName:"li"},"?platform=darwin"),")")),(0,r.kt)("p",null,"Here are the available download URLs:"),(0,r.kt)("p",null,"See\n",(0,r.kt)("a",{parentName:"p",href:"https://download.cypress.io/desktop.json"},"https://download.cypress.io/desktop.json"),"\nfor all available platforms."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"URL"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GET")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/desktop")),(0,r.kt)("td",{parentName:"tr",align:null},"Download Cypress at latest version (platform auto-detected)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GET")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/desktop.json")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns JSON containing latest available CDN destinations")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GET")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/desktop?platform=p&arch=a")),(0,r.kt)("td",{parentName:"tr",align:null},"Download Cypress for a specific platform and/or architecture")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GET")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/desktop/:version")),(0,r.kt)("td",{parentName:"tr",align:null},"Download Cypress with a specified version")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"GET")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"/desktop/:version?platform=p&arch=a")),(0,r.kt)("td",{parentName:"tr",align:null},"Download Cypress with a specified version and platform and/or architecture")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example of downloading Cypress ",(0,r.kt)("inlineCode",{parentName:"strong"},"3.0.0")," for Windows 64-bit:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"https://download.cypress.io/desktop/3.0.0?platform=win32&arch=x64\n")),(0,r.kt)("h2",{id:"Mirroring"},"Mirroring"),(0,r.kt)("p",null,"If you choose to mirror the entire Cypress download site, you can specify\n",(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_DOWNLOAD_MIRROR")," to set the download server URL from\n",(0,r.kt)("inlineCode",{parentName:"p"},"https://download.cypress.io")," to your own mirror."),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'CYPRESS_DOWNLOAD_MIRROR="https://www.example.com" cypress install\n')),(0,r.kt)("p",null,"Cypress will then attempt to download a binary with this format:\n",(0,r.kt)("inlineCode",{parentName:"p"},"https://www.example.com/desktop/:version?platform=p")),(0,r.kt)("h2",{id:"Download-path-template"},"Download path template"),(0,r.kt)("p",null,"Starting with Cypress 9.3.0, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_DOWNLOAD_PATH_TEMPLATE"),"\nenvironment variable to download the Cypress binary from a custom URL that's\ngenerated based on endpoint, version, platform and architecture."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"The following replacements are supported:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"${endpoint}")," is replaced with ",(0,r.kt)("inlineCode",{parentName:"li"},"https://download.cypress.io/desktop/:version"),".\nIf ",(0,r.kt)("inlineCode",{parentName:"li"},"CYPRESS_DOWNLOAD_MIRROR")," is set, its value is used instead of\n",(0,r.kt)("inlineCode",{parentName:"li"},"https://download.cypress.io")," (note that the ",(0,r.kt)("inlineCode",{parentName:"li"},"/desktop")," remains!)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"${platform}")," is replaced with the platform the installation is running on\n(e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"win32"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"linux"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"darwin"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"${arch}")," is replaced with the architecture the installation is running on\n(e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"x64"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"arm64"),")"),(0,r.kt)("li",{parentName:"ul"},"Starting with Cypress 10.6.0, ",(0,r.kt)("inlineCode",{parentName:"li"},"${version}")," is replaced with the version number\nthat's being installed (e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"10.11.0"),")")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples:")),(0,r.kt)("p",null,"To install the binary from a download mirror that matches the exact file\nstructure of ",(0,r.kt)("inlineCode",{parentName:"p"},"https://cdn.cypress.io")," (works for Cypress 9.3.0 or newer):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"export CYPRESS_DOWNLOAD_MIRROR=https://cypress-download.local\nexport CYPRESS_DOWNLOAD_PATH_TEMPLATE='${endpoint}/${platform}-${arch}/cypress.zip'\n# Example of a resulting URL: https://cypress-download.local/desktop/10.11.0/linux-x64/cypress.zip\n")),(0,r.kt)("p",null,"To install the binary from a download server with a custom file structure (works\nfor Cypress 10.6.0 or newer):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"export CYPRESS_DOWNLOAD_PATH_TEMPLATE='https://software.local/cypress/${platform}/${arch}/${version}/cypress.zip'\n# Example of a resulting URL: https://software.local/cypress/linux/x64/10.11.0/cypress.zip\n")),(0,r.kt)("p",null,"To define ",(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_DOWNLOAD_PATH_TEMPLATE")," in ",(0,r.kt)("inlineCode",{parentName:"p"},".npmrc"),", put a backslash before\nevery ",(0,r.kt)("inlineCode",{parentName:"p"},"$")," (works for Cypress 9.5.3 or newer):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ini"},"CYPRESS_DOWNLOAD_PATH_TEMPLATE=\\${endpoint}/\\${platform}-\\${arch}/cypress.zip\n")),(0,r.kt)("h2",{id:"Using-a-custom-certificate-authority-CA"},"Using a custom certificate authority (CA)"),(0,r.kt)("p",null,"Cypress can be configured to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"ca")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"cafile")," options from your NPM\nconfig file to download the Cypress binary."),(0,r.kt)("p",null,"For example, to use the CA at ",(0,r.kt)("inlineCode",{parentName:"p"},"/home/person/certs/ca.crt")," when downloading\nCypress, add the following to your ",(0,r.kt)("inlineCode",{parentName:"p"},".npmrc"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cafile=/home/person/certs/ca.crt\n")),(0,r.kt)("p",null,"If neither ",(0,r.kt)("inlineCode",{parentName:"p"},"cafile")," nor ",(0,r.kt)("inlineCode",{parentName:"p"},"ca")," are set, Cypress looks at the system environment\nvariable ",(0,r.kt)("inlineCode",{parentName:"p"},"NODE_EXTRA_CA_CERTS")," and uses the corresponding certificate(s) as an\nextension for the trusted certificate authority when downloading the Cypress\nbinary."),(0,r.kt)("p",null,"Note that the npm config is used as a replacement, and the node environment\nvariable is used as an extension."),(0,r.kt)("h2",{id:"Opt-out-of-sending-exception-data-to-Cypress"},"Opt out of sending exception data to Cypress"),(0,r.kt)("p",null,"When an exception is thrown regarding Cypress, we send along the exception data\nto ",(0,r.kt)("inlineCode",{parentName:"p"},"https://api.cypress.io"),". We solely use this information to help develop a\nbetter product."),(0,r.kt)("p",null,"If you would like to opt out of sending any exception data to Cypress, you can\ndo so by setting ",(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_CRASH_REPORTS=0")," in your system environment variables."),(0,r.kt)("h3",{id:"Opt-out-on-Linux-or-macOS"},"Opt out on Linux or macOS"),(0,r.kt)("p",null,"To opt out of sending exception data on Linux or macOS, run the following\ncommand in a terminal before installing Cypress:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"export CYPRESS_CRASH_REPORTS=0\n")),(0,r.kt)("p",null,"To make these changes permanent, you can add this command to your shell's\n",(0,r.kt)("inlineCode",{parentName:"p"},"~/.profile")," (",(0,r.kt)("inlineCode",{parentName:"p"},"~/.zsh_profile"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.bash_profile"),", etc.) to run them on every\nlogin."),(0,r.kt)("h3",{id:"Opt-out-on-Windows"},"Opt out on Windows"),(0,r.kt)("p",null,"To opt out of sending exception data on Windows, run the following command in\nthe Command Prompt before installing Cypress:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"set CYPRESS_CRASH_REPORTS=0\n")),(0,r.kt)("p",null,"To accomplish the same thing in PowerShell:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'$env:CYPRESS_CRASH_REPORTS = "0"\n')),(0,r.kt)("p",null,"To save the ",(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_CRASH_REPORTS")," variable for use in all new shells, use\n",(0,r.kt)("inlineCode",{parentName:"p"},"setx"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"setx CYPRESS_CRASH_REPORTS 0\n")),(0,r.kt)("h2",{id:"Opt-out-of-Cypress-commercial-messaging"},"Opt out of Cypress commercial messaging"),(0,r.kt)("p",null,"Cypress may occasionally display messages in your CI logs related to our\ncommercial offerings and how they could benefit you during your workflows."),(0,r.kt)("p",null,"If you would like to opt out of all commercial messaging, you can do so by\nsetting ",(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_COMMERCIAL_RECOMMENDATIONS=0")," in your system environment\nvariables."),(0,r.kt)("h2",{id:"Install-pre-release-version"},"Install pre-release version"),(0,r.kt)("p",null,"If you would like to install a pre-release version of Cypress to test out\nfunctionality that has not yet been released, here is how:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Open up the list of commits to ",(0,r.kt)("inlineCode",{parentName:"li"},"develop")," on the Cypress repo:\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/cypress-io/cypress/commits/develop"},"https://github.com/cypress-io/cypress/commits/develop")),(0,r.kt)("li",{parentName:"ol"},"Find the commit that you would like to install the pre-release version of.\nClick the comment icon (highlighted in red below):",(0,r.kt)(u,{src:"/img/guides/install/develop-commit-comment-link.png",alt:"Example of a commit for which pre-releases are available. Comment link highlighted in red.",mdxType:"DocsImage"})),(0,r.kt)("li",{parentName:"ol"},"You should see several comments from the ",(0,r.kt)("inlineCode",{parentName:"li"},"cypress-bot")," user with instructions\nfor installing Cypress pre-releases. Pick the one that corresponds to your\noperating system and CPU architecture, and follow the instructions there to\ninstall the pre-release.")),(0,r.kt)("p",null,"Cypress pre-releases are only available for 60 days after they are built. Do not\nrely on these being available past 60 days."),(0,r.kt)("h2",{id:"Windows-Subsystem-for-Linux"},"Windows Subsystem for Linux"),(0,r.kt)("p",null,"First, install the ",(0,r.kt)("a",{parentName:"p",href:"/guides/getting-started/installing-cypress#Linux-Prerequisites"},"prerequisite Linux packages")," using the command that relates to your\nLinux distribution (",(0,r.kt)("a",{parentName:"p",href:"/guides/getting-started/installing-cypress#UbuntuDebian"},"Ubuntu/Debian")," or ",(0,r.kt)("a",{parentName:"p",href:"/guides/getting-started/installing-cypress#CentOS"},"CentOS"),")."),(0,r.kt)("p",null,"We need to have an ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/X.Org_Server"},"X-server")," to\ndisplay the Cypress UI from the linux subsystem. There are a variety of\nX-servers available, here we are going to use VcXsrv, you can use any other\nsimilar tool."),(0,r.kt)("p",null,"Download ",(0,r.kt)("a",{parentName:"p",href:"https://sourceforge.net/projects/vcxsrv/"},"VcXsrv"),' and install. You can\nset the settings to your preference ("Multiple windows" and "Start no client"\nare recommended), but on the page that lets you enable extra settings, be sure\nto select "Disable access control" which is required as WSL2 has its own IP\naddress, which changes often.'),(0,r.kt)(u,{src:"/img/guides/install/vcxsrv-extra-settings.png",alt:"Disable access control in vcxsrv",mdxType:"DocsImage"}),(0,r.kt)("p",null,"In your ",(0,r.kt)("inlineCode",{parentName:"p"},".bashrc")," (or equivalent such as ",(0,r.kt)("inlineCode",{parentName:"p"},".zshrc"),") set the ",(0,r.kt)("inlineCode",{parentName:"p"},"DISPLAY")," environment\nvariable."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"# set DISPLAY variable to the IP automatically assigned to WSL2\nexport DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2; exit;}'):0.0\n")),(0,r.kt)("p",null,"To confirm ",(0,r.kt)("inlineCode",{parentName:"p"},"DISPLAY")," variable has been set, print it out in the terminal. You\nmay need to restart your terminal to see this change."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"echo $DISPLAY\n# something like 172.17.224.1:0.0\n")),(0,r.kt)("p",null,"The VcXsrv GUI uses ",(0,r.kt)("a",{parentName:"p",href:"https://www.freedesktop.org/wiki/Software/dbus/"},"D-Bus")," to\ninternally communicate. After the ",(0,r.kt)("inlineCode",{parentName:"p"},"export DISPLAY")," line in your ",(0,r.kt)("inlineCode",{parentName:"p"},".bashrc"),", add\nthe following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"sudo /etc/init.d/dbus start &> /dev/null\n")),(0,r.kt)("p",null,"Now your user needs to be granted access to run ",(0,r.kt)("inlineCode",{parentName:"p"},"sudo dbus")," without needing to\nenter a password. To do so, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"visudo")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"sudo visudo -f /etc/sudoers.d/dbus\n")),(0,r.kt)("p",null,"In the editor that launches, add the following line, replacing ",(0,r.kt)("inlineCode",{parentName:"p"},"<your_username>"),"\nwith your username (you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"whoami")," command to print your username if\nyou don't know it)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"<your_username> ALL = (root) NOPASSWD: /etc/init.d/dbus\n")),(0,r.kt)("p",null,"Go to Control Panel > System and Security > Windows Defender Firewall > Inbound\nRules > New Rule."),(0,r.kt)(u,{src:"/img/guides/install/windows-firewall-disable-vcxsrv.png",alt:"Add rule to allow connections for vcxsrv",mdxType:"DocsImage"}),(0,r.kt)("p",null,"Select Program and click on next. On the This program path, browse and select\npath to VcxSrv. On the next page select allow the connection and click next. On\nthe next page, select all three options (Domain, Private, Public)."),(0,r.kt)(u,{src:"/img/guides/install/rule-application-selection.png",alt:"Select inbound rule application cases for vcxsrv",mdxType:"DocsImage"}),(0,r.kt)("p",null,"Give the rule a suitable name and description and click finish. WSL2 should now\nbe able to open a GUI from shell."))}k.isMDXComponent=!0}}]);