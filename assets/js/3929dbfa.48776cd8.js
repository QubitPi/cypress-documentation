"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[1120],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},m="mdxType",l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=u(t),y=s,d=m["".concat(c,".").concat(y)]||m[y]||l[y]||a;return t?r.createElement(d,o(o({ref:n},p),{},{components:t})):r.createElement(d,o({ref:n},p))}));function d(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var a=t.length,o=new Array(a);o[0]=y;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[m]="string"==typeof e?e:s,o[1]=i;for(var u=2;u<a;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},1393:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>y,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var r=t(7462),s=(t(7294),t(3905));const a={title:"Cypress.ensure"},o=void 0,i={unversionedId:"api/cypress-api/ensure",id:"api/cypress-api/ensure",title:"Cypress.ensure",description:"Cypress.ensure is a collection of helper methods for making assertions. They",source:"@site/docs/api/cypress-api/ensure.mdx",sourceDirName:"api/cypress-api",slug:"/api/cypress-api/ensure",permalink:"/cypress-documentation/api/cypress-api/ensure",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/cypress-api/ensure.mdx",tags:[],version:"current",lastUpdatedAt:1696480553,formattedLastUpdatedAt:"Oct 5, 2023",frontMatter:{title:"Cypress.ensure"},sidebar:"api",previous:{title:"Cypress.dom",permalink:"/cypress-documentation/api/cypress-api/dom"},next:{title:"Cypress.env",permalink:"/cypress-documentation/api/cypress-api/env"}},c={},u=[{value:"Syntax",id:"Syntax",level:2},{value:"Usage",id:"Usage",level:3},{value:"See also",id:"See-also",level:2}],p=(m="Icon",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",e)});var m;const l={toc:u};function y(e){let{components:n,...t}=e;return(0,s.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"Cypress.ensure")," is a collection of helper methods for making assertions. They\nare mostly useful when writing ",(0,s.kt)("a",{parentName:"p",href:"/api/cypress-api/custom-queries"},"custom queries"),"\nor ",(0,s.kt)("a",{parentName:"p",href:"/api/cypress-api/custom-commands"},"custom commands"),"."),(0,s.kt)("p",null,"Most functions on ",(0,s.kt)("inlineCode",{parentName:"p"},"Cypress.ensure")," accept a\n",(0,s.kt)("a",{parentName:"p",href:"/guides/core-concepts/introduction-to-cypress#Subject-Management"},(0,s.kt)("inlineCode",{parentName:"a"},"subject")),"\nargument, check an assertion, and throw an error if the assertion fails. These\nfunctions have no return value."),(0,s.kt)("h2",{id:"Syntax"},"Syntax"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"// Type of argument\nCypress.ensure.isType(subject, type, commandName, cy)\u200b\nCypress.ensure.isElement(subject, commandName, cy)\u200b\nCypress.ensure.isWindow(subject, commandName, cy)\nCypress.ensure.isDocument(subject, commandName, cy)\u200b\n\n// State of DOM element\nCypress.ensure.isAttached(subject, commandName, cy)\u200b\nCypress.ensure.isNotDisabled(subject, commandName)\u200b\nCypress.ensure.isNotHiddenByAncestors(subject, commandName)\u200b\nCypress.ensure.isNotReadonly(subject, commandName)\u200b\nCypress.ensure.isScrollable(subject, commandName)\u200b\nCypress.ensure.isStrictlyVisible(subject, commandName)\u200b\nCypress.ensure.isVisible(subject, commandName)\u200b\n")),(0,s.kt)("admonition",{type:"caution"},(0,s.kt)("p",{parentName:"admonition"},"Many of these functions accept an optional ",(0,s.kt)("inlineCode",{parentName:"p"},"onFail")," argument. This is a legacy\nfeature used to customize the thrown error, and may be removed in a future\nrelease; we recommend against relying on it. If you need more control over the\nerror thrown, write your own ",(0,s.kt)("inlineCode",{parentName:"p"},"ensure")," function instead.")),(0,s.kt)("h3",{id:"Usage"},"Usage"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},(0,s.kt)(p,{name:"check-circle",color:"green",mdxType:"Icon"})," Correct Usage")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"Cypress.Commands.addQuery('getChildById', function (id) {\n  return (subject) => {\n    // Verify that the subject is an element, document, or window object\n    Cypress.ensure.isType(\n      subject,\n      ['element', 'document', 'window'],\n      'getChildById',\n      cy\n    )\n\n    return $$(`#${id}`, subject)\n  }\n})\n\nconst queryName = 'verifyElementActionable'\n\nCypress.Commands.addQuery(queryName, function (...args) {\n  return (subject) => {\n    // Verify that the subject fulfills a variety of conditions\n    Cypress.ensure.isElement(subject, queryName, cy)\n    Cypress.ensure.isVisible(subject, queryName, cy)\n    Cypress.ensure.isNotDisabled(subject, queryName, cy)\n    Cypress.ensure.isNotReadonly(subject, queryName, cy)\n\n    return subject\n  }\n})\n")),(0,s.kt)("h2",{id:"See-also"},"See also"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/api/cypress-api/custom-queries"},'"Custom Queries"')," contains more information\nabout writing custom queries, which is the main use-case for the ",(0,s.kt)("inlineCode",{parentName:"li"},"ensure"),"\nfunctions.")))}y.isMDXComponent=!0}}]);