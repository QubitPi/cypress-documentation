"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[5476],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,h=u["".concat(l,".").concat(m)]||u[m]||p[m]||o;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3743:(e,t,n)=>{n.d(t,{Z:()=>h});var a=n(7462),r=n(7294),o=n(6668);function i(e){const t=e.map((e=>({...e,parentIndex:-1,children:[]}))),n=Array(7).fill(-1);t.forEach(((e,t)=>{const a=n.slice(2,e.level);e.parentIndex=Math.max(...a),n[e.level]=t}));const a=[];return t.forEach((e=>{const{parentIndex:n,...r}=e;n>=0?t[n].children.push(r):a.push(r)})),a}function s(e){let{toc:t,minHeadingLevel:n,maxHeadingLevel:a}=e;return t.flatMap((e=>{const t=s({toc:e.children,minHeadingLevel:n,maxHeadingLevel:a});return function(e){return e.level>=n&&e.level<=a}(e)?[{...e,children:t}]:t}))}function l(e){const t=e.getBoundingClientRect();return t.top===t.bottom?l(e.parentNode):t}function c(e,t){let{anchorTopOffset:n}=t;const a=e.find((e=>l(e).top>=n));if(a){return function(e){return e.top>0&&e.bottom<window.innerHeight/2}(l(a))?a:e[e.indexOf(a)-1]??null}return e[e.length-1]??null}function d(){const e=(0,r.useRef)(0),{navbar:{hideOnScroll:t}}=(0,o.L)();return(0,r.useEffect)((()=>{e.current=t?0:document.querySelector(".navbar").clientHeight}),[t]),e}function u(e){const t=(0,r.useRef)(void 0),n=d();(0,r.useEffect)((()=>{if(!e)return()=>{};const{linkClassName:a,linkActiveClassName:r,minHeadingLevel:o,maxHeadingLevel:i}=e;function s(){const e=function(e){return Array.from(document.getElementsByClassName(e))}(a),s=function(e){let{minHeadingLevel:t,maxHeadingLevel:n}=e;const a=[];for(let r=t;r<=n;r+=1)a.push(`h${r}.anchor`);return Array.from(document.querySelectorAll(a.join()))}({minHeadingLevel:o,maxHeadingLevel:i}),l=c(s,{anchorTopOffset:n.current}),d=e.find((e=>l&&l.id===function(e){return decodeURIComponent(e.href.substring(e.href.indexOf("#")+1))}(e)));e.forEach((e=>{!function(e,n){n?(t.current&&t.current!==e&&t.current.classList.remove(r),e.classList.add(r),t.current=e):e.classList.remove(r)}(e,e===d)}))}return document.addEventListener("scroll",s),document.addEventListener("resize",s),s(),()=>{document.removeEventListener("scroll",s),document.removeEventListener("resize",s)}}),[e,n])}function p(e){let{toc:t,className:n,linkClassName:a,isChild:o}=e;return t.length?r.createElement("ul",{className:o?void 0:n},t.map((e=>r.createElement("li",{key:e.id},r.createElement("a",{href:`#${e.id}`,className:a??void 0,dangerouslySetInnerHTML:{__html:e.value}}),r.createElement(p,{isChild:!0,toc:e.children,className:n,linkClassName:a}))))):null}const m=r.memo(p);function h(e){let{toc:t,className:n="table-of-contents table-of-contents__left-border",linkClassName:l="table-of-contents__link",linkActiveClassName:c,minHeadingLevel:d,maxHeadingLevel:p,...h}=e;const g=(0,o.L)(),y=d??g.tableOfContents.minHeadingLevel,f=p??g.tableOfContents.maxHeadingLevel,k=function(e){let{toc:t,minHeadingLevel:n,maxHeadingLevel:a}=e;return(0,r.useMemo)((()=>s({toc:i(t),minHeadingLevel:n,maxHeadingLevel:a})),[t,n,a])}({toc:t,minHeadingLevel:y,maxHeadingLevel:f});return u((0,r.useMemo)((()=>{if(l&&c)return{linkClassName:l,linkActiveClassName:c,minHeadingLevel:y,maxHeadingLevel:f}}),[l,c,y,f])),r.createElement(m,(0,a.Z)({toc:k,className:n,linkClassName:l},h))}},5130:(e,t,n)=>{n.d(t,{b:()=>i,k:()=>s});var a=n(7294),r=n(902);const o=a.createContext(null);function i(e){let{children:t,content:n}=e;const r=function(e){return(0,a.useMemo)((()=>({metadata:e.metadata,frontMatter:e.frontMatter,assets:e.assets,contentTitle:e.contentTitle,toc:e.toc})),[e])}(n);return a.createElement(o.Provider,{value:r},t)}function s(){const e=(0,a.useContext)(o);if(null===e)throw new r.i6("DocProvider");return e}},9784:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),r=n(3743);const o="tableOfContentsInline_prmo";function i(e){let{toc:t,minHeadingLevel:n,maxHeadingLevel:i}=e;return a.createElement("div",{className:o},a.createElement(r.Z,{toc:t,minHeadingLevel:n,maxHeadingLevel:i,className:"table-of-contents",linkClassName:null}))}var s=n(5130);function l(e){const{frontMatter:{inlineErrorsTable:t}}=(0,s.k)(),n=t&&["inlineTOC","errorsInlineTOC"].join(" ");return a.createElement(a.Fragment,null,a.createElement("div",{className:n||"inlineTOC"},a.createElement(i,e)))}},6682:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>y,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var a=n(7462),r=(n(7294),n(3905)),o=n(9784);const i={title:"Error Messages",hide_table_of_contents:!0,inlineErrorsTable:!0},s=void 0,l={unversionedId:"guides/references/error-messages",id:"guides/references/error-messages",title:"Error Messages",description:"Test File Errors",source:"@site/docs/guides/references/error-messages.mdx",sourceDirName:"guides/references",slug:"/guides/references/error-messages",permalink:"/cypress-documentation/guides/references/error-messages",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/guides/references/error-messages.mdx",tags:[],version:"current",frontMatter:{title:"Error Messages",hide_table_of_contents:!0,inlineErrorsTable:!0},sidebar:"guides",previous:{title:"Cypress Studio",permalink:"/cypress-documentation/guides/references/cypress-studio"},next:{title:"Experiments",permalink:"/cypress-documentation/guides/references/experiments"}},c={},d=[{value:"Test File Errors",id:"Test-File-Errors",level:2},{value:'<Icon name="exclamation-triangle" color="red" /> No tests found',id:"No-tests-found",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> We found an error preparing your test file',id:"We-found-an-error-preparing-your-test-file",level:3},{value:"You&#39;ll typically receive this message due to:",id:"Youll-typically-receive-this-message-due-to",level:4},{value:"Support File Errors",id:"Support-File-Errors",level:2},{value:'<Icon name="exclamation-triangle" color="red" /> Support file missing or invalid',id:"Support-file-missing-or-invalid",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> Error Loading Config',id:"Error-Loading-Config",level:3},{value:"Use modules for utility functions",id:"Use-modules-for-utility-functions",level:4},{value:"Use supportFile to load scripts before your test code",id:"Use-supportFile-to-load-scripts-before-your-test-code",level:4},{value:"Command Errors",id:"Command-Errors",level:2},{value:'<Icon name="exclamation-triangle" color="red" /> Cypress cannot execute commands outside a running test',id:"Cypress-cannot-execute-commands-outside-a-running-test",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> <code>cy...()</code> failed because the page updated',id:"cy-failed-because-the-page-updated",level:3},{value:"Application HTML",id:"Application-HTML",level:4},{value:"Application JavaScript",id:"Application-JavaScript",level:4},{value:"Test Code causing error",id:"Test-Code-causing-error",level:4},{value:"Fixed Test Code",id:"Fixed-Test-Code",level:4},{value:'<Icon name="exclamation-triangle" color="red" /> <code>cy...()</code> failed because the element cannot be interacted with',id:"cy-failed-because-the-element-cannot-be-interacted-with",level:3},{value:"Ignore built-in error checking",id:"Ignore-built-in-error-checking",level:4},{value:'<Icon name="exclamation-triangle" color="red" /> <code>cy...()</code> failed because the element is currently animating',id:"cy-failed-because-the-element-is-currently-animating",level:3},{value:"Cypress configuration file",id:"Cypress-configuration-file",level:4},{value:'<Icon name="exclamation-triangle" color="red" /> The test has finished but Cypress still has commands in its queue',id:"The-test-has-finished-but-Cypress-still-has-commands-in-its-queue",level:3},{value:"Short Example",id:"Short-Example",level:4},{value:"Complex Async Example",id:"Complex-Async-Example",level:4},{value:"Complex Promise Example",id:"Complex-Promise-Example",level:4},{value:'<Icon name="exclamation-triangle" color="red" /> <code>cy.visit()</code> failed because you are attempting to visit a second unique domain',id:"cyvisit-failed-because-you-are-attempting-to-visit-a-second-unique-domain",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> <code>cy.visit()</code> failed because you are attempting to visit a different origin domain',id:"cyvisit-failed-because-you-are-attempting-to-visit-a-different-origin-domain",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> <code>cy.visit()</code> succeeded, but commands are timing out',id:"cyvisit-succeeded-but-commands-are-timing-out",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> <code>Cypress.addParentCommand()</code> / <code>Cypress.addDualCommand()</code> / <code>Cypress.addChildCommand()</code> has been removed and replaced by <code>Cypress.Commands.add()</code>',id:"CypressaddParentCommand--CypressaddDualCommand--CypressaddChildCommand-has-been-removed-and-replaced-by-CypressCommandsadd",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> Cypress detected that you invoked one or more <code>cy</code> commands in a custom command but returned a different value.',id:"Cypress-detected-that-you-invoked-one-or-more-cy-commands-in-a-custom-command-but-returned-a-different-value",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> Cypress detected that you invoked one or more <code>cy</code> commands but returned a different value.',id:"Cypress-detected-that-you-invoked-one-or-more-cy-commands-but-returned-a-different-value",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> Cypress detected that you returned a promise from a command while also invoking one or more cy commands in that promise.',id:"Cypress-detected-that-you-returned-a-promise-from-a-command-while-also-invoking-one-or-more-cy-commands-in-that-promise",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> Cypress detected that you returned a promise in a test, but also invoked one or more <code>cy</code> commands inside of that promise.',id:"Cypress-detected-that-you-returned-a-promise-in-a-test-but-also-invoked-one-or-more-cy-commands-inside-of-that-promise",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> Cypress detected that you returned a promise in a test, but also invoked a done callback.',id:"Cypress-detected-that-you-returned-a-promise-in-a-test-but-also-invoked-a-done-callback",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> CypressError: Timed out retrying: Expected to find element: \u2018\u2026\u2019, but never found it. Queried from element: &lt;\u2026&gt;',id:"CypressError-Timed-out-retrying-Expected-to-find-element--but-never-found-it-Queried-from-element-",level:3},{value:"CLI Errors",id:"CLI-Errors",level:2},{value:'<Icon name="exclamation-triangle" color="red" /> You passed the <code>--record</code> flag but did not provide us your Record Key.',id:"You-passed-the---record-flag-but-did-not-provide-us-your-Record-Key",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> The <code>cypress ci</code> command has been deprecated',id:"The-cypress-ci-command-has-been-deprecated",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> A Cached Cypress Binary Could not be found',id:"A-Cached-Cypress-Binary-Could-not-be-found",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> Incorrect usage of <code>--ci-build-id</code> flag',id:"Incorrect-usage-of---ci-build-id-flag",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> The <code>--ci-build-id</code>, <code>--group</code>, <code>--tag</code>, <code>--parallel</code>, or <code>--auto-cancel-after-failures</code> flags can only be used when recording',id:"record-params-without-recording",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> We could not determine a unique CI build ID',id:"We-could-not-determine-a-unique-CI-build-ID",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> Group name has already been used for this run',id:"Group-name-has-already-been-used-for-this-run",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> Cannot parallelize tests across environments',id:"Cannot-parallelize-tests-across-environments",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> Cannot parallelize tests in this group',id:"Cannot-parallelize-tests-in-this-group",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> Run must pass <code>--parallel</code> flag',id:"Run-must-pass---parallel-flag",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> Cannot parallelize tests on a stale run',id:"Cannot-parallelize-tests-on-a-stale-run",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> Run is not accepting any new groups',id:"Run-is-not-accepting-any-new-groups",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> The Cypress App could not be unzipped. This is most likely because the maximum path length is being exceeded on your system.',id:"The-Cypress-App-could-not-be-unzipped-This-is-most-likely-because-the-maximum-path-length-is-being-exceeded-on-your-system",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> error: unknown option: --auto-cancel-after-failures',id:"error-unknown-option---auto-cancel-after-failures",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> --auto-cancel-after-failures must be a integer or false',id:"--auto-cancel-after-failures-must-be-a-integer-or-false",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> --auto-cancel-after-failures passed without a Business or Enterprise Cloud account',id:"--auto-cancel-after-failures-passed-without-a-Business-or-Enterprise-Cloud-account",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> You passed the --auto-cancel-after-failures flag for a run that is already in progress',id:"You-passed-the---auto-cancel-after-failures-flag-for-a-run-that-is-already-in-progress",level:3},{value:"Page Load Errors",id:"Page-Load-Errors",level:2},{value:'<Icon name="exclamation-triangle" color="red" /> Cypress detected a cross-origin error happened on page load',id:"Cypress-detected-a-cross-origin-error-happened-on-page-load",level:3},{value:"There are a few workarounds to these common situations:",id:"There-are-a-few-workarounds-to-these-common-situations",level:4},{value:'<Icon name="exclamation-triangle" color="red" /> Cypress detected that an uncaught error was thrown from a cross-origin script.',id:"Cypress-detected-that-an-uncaught-error-was-thrown-from-a-cross-origin-script",level:3},{value:"Browser Errors",id:"Browser-Errors",level:2},{value:'<Icon name="exclamation-triangle" color="red" /> The browser process running your tests just exited unexpectedly',id:"The-browser-process-running-your-tests-just-exited-unexpectedly",level:3},{value:"Cypress App errors",id:"Cypress-App-errors",level:2},{value:'<Icon name="exclamation-triangle" color="red" /> Whoops, we can&#39;t run your tests',id:"Whoops-we-cant-run-your-tests",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> Cannot connect to API server',id:"Cannot-connect-to-API-server",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> Cypress detected policy settings on your computer that may cause issues',id:"Cypress-detected-policy-settings-on-your-computer-that-may-cause-issues",level:3},{value:'<Icon name="exclamation-triangle" color="red" /> Uncaught exceptions from your application',id:"Uncaught-exceptions-from-your-application",level:3}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},p=u("Icon"),m=u("DocsImage"),h=u("CypressConfigFileTabs"),g={toc:d};function y(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(o.Z,{toc:d,mdxType:"TOCInline"}),(0,r.kt)("h2",{id:"Test-File-Errors"},"Test File Errors"),(0,r.kt)("h3",{id:"No-tests-found"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," No tests found"),(0,r.kt)("p",null,"This message means that Cypress was unable to find tests in the specified file.\nYou'll likely get this message if you have an empty test file and have not yet\nwritten any tests."),(0,r.kt)(m,{src:"/img/guides/references/no-tests-found.png",alt:"No tests found",mdxType:"DocsImage"}),(0,r.kt)("h3",{id:"We-found-an-error-preparing-your-test-file"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," We found an error preparing your test file"),(0,r.kt)("p",null,"This message means that Cypress encountered an error when compiling and/or\nbundling your test file. Cypress automatically compiles and bundles your test\ncode so you can use ES2015, CoffeeScript, modules, etc."),(0,r.kt)("h4",{id:"Youll-typically-receive-this-message-due-to"},"You'll typically receive this message due to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The file not existing"),(0,r.kt)("li",{parentName:"ul"},"A syntax error in the file or one of its dependencies"),(0,r.kt)("li",{parentName:"ul"},"A missing dependency")),(0,r.kt)("p",null,"When the error is fixed in your test file, your tests will automatically re-run."),(0,r.kt)("h2",{id:"Support-File-Errors"},"Support File Errors"),(0,r.kt)("h3",{id:"Support-file-missing-or-invalid"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Support file missing or invalid"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"supportFolder")," option was removed from Cypress in version\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/changelog#0-18-0"},(0,r.kt)("inlineCode",{parentName:"a"},"0.18.0"))," and was replaced by module\nsupport and the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#Testing-Type-Specific-Options"},(0,r.kt)("inlineCode",{parentName:"a"},"supportFile")),"\nconfiguration option."),(0,r.kt)("p",null,"Cypress used to automatically include any scripts in the ",(0,r.kt)("inlineCode",{parentName:"p"},"supportFolder")," before\nyour test files. However, automatically including all the files in a certain\ndirectory is somewhat magical and unintuitive, and requires creating globals for\nthe purpose of utility functions."),(0,r.kt)("h3",{id:"Error-Loading-Config"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Error Loading Config"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"supportFile")," configuration option was removed from the root configutation\nobject in Cypress version ",(0,r.kt)("inlineCode",{parentName:"p"},"10.0.0"),". Instead, it must be added within each\ntesting type's configuration object as a separate property if you would like to\nuse a file other than the default\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#Folders-Files"},"supportFile")," configuration."),(0,r.kt)("h4",{id:"Use-modules-for-utility-functions"},"Use modules for utility functions"),(0,r.kt)("p",null,"Cypress supports both ES2015 modules and CommonJS modules. You can\nimport/require npm modules as well as local modules:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import _ from 'lodash'\nimport util from './util'\n\nit('uses modules', () => {\n  expect(_.kebabCase('FooBar')).to.equal('foo-bar')\n  expect(util.secretCode()).to.equal('1-2-3-4')\n})\n")),(0,r.kt)("h4",{id:"Use-supportFile-to-load-scripts-before-your-test-code"},"Use supportFile to load scripts before your test code"),(0,r.kt)("p",null,"It's still useful to load a setup file before your test code. If you are setting\nCypress defaults or utilizing custom Cypress commands, instead of needing to\nimport/require those defaults/commands in every test file, you can use the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#Testing-Type-Specific-Options"},(0,r.kt)("inlineCode",{parentName:"a"},"supportFile")),"\nconfiguration option within each testing type's configuration object."),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"\u26a0\ufe0f For a given testing type, multiple matching ",(0,r.kt)("inlineCode",{parentName:"p"},"supportFile")," files will result\nin an error when Cypress loads.")),(0,r.kt)("p",null,"Just like with your test files, the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#Testing-Type-Specific-Options"},(0,r.kt)("inlineCode",{parentName:"a"},"supportFile")),"\ncan use ES2015+, ",(0,r.kt)("a",{parentName:"p",href:"/guides/tooling/typescript-support"},"TypeScript")," or\nCoffeeScript and modules, so you can import/require other files as needed."),(0,r.kt)("h2",{id:"Command-Errors"},"Command Errors"),(0,r.kt)("h3",{id:"Cypress-cannot-execute-commands-outside-a-running-test"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Cypress cannot execute commands outside a running test"),(0,r.kt)(m,{src:"/img/guides/references/cypress-cannot-execute.png",alt:"Cannot execute commands",mdxType:"DocsImage"}),(0,r.kt)("p",null,"This message means you tried to execute one or more Cypress commands outside of\na currently running test. Cypress has to be able to associate commands to a\nspecific test."),(0,r.kt)("p",null,"Typically this happens accidentally, like in the following situation."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"describe('Some Tests', () => {\n  it('is true', () => {\n    expect(true).to.be.true // yup, fine\n  })\n\n  it('is false', () => {\n    expect(false).to.be.false // yup, also fine\n  })\n\n  context('some nested tests', () => {\n    // oops you forgot to write an it(...) here!\n    // these cypress commands below\n    // are running outside of a test and cypress\n    // throws an error\n    cy.get('h1').should('contain', 'todos')\n  })\n})\n")),(0,r.kt)("p",null,"Move those Cypress commands into an ",(0,r.kt)("inlineCode",{parentName:"p"},"it(...)")," block and everything will work\ncorrectly."),(0,r.kt)("p",null,"If you are purposefully writing commands outside of a test, there is probably a\nbetter way to accomplish what you're trying to do. Read through the\n",(0,r.kt)("a",{parentName:"p",href:"/examples/recipes"},"Examples"),",\n",(0,r.kt)("a",{parentName:"p",href:"https://discord.gg/ncdA3Jz63n"},"chat with someone in Discord"),", or\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress/issues/new/choose"},"open an issue"),"."),(0,r.kt)("h3",{id:"cy-failed-because-the-page-updated"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," ",(0,r.kt)("inlineCode",{parentName:"h3"},"cy...()")," failed because the page updated"),(0,r.kt)("p",null,'Getting this error means you\'ve tried to interact with a "dead" DOM element -\nmeaning the current subject has been removed from the DOM.'),(0,r.kt)(m,{src:"/img/guides/references/cypress-method-failed-page-updated.png",alt:"cy.method() failed because the page updated",mdxType:"DocsImage"}),(0,r.kt)("p",null,"Cypress errors because after a command, the subject becomes 'fixed' to a\nspecific element - since it can't retry commands, if the element becomes\ndetached from the page, we can't assert or interact on it."),(0,r.kt)("p",null,"Let's take a look at an example below."),(0,r.kt)("h4",{id:"Application-HTML"},"Application HTML"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<body>\n  <div data-testid="parent">\n    <button>Delete</button>\n  </div>\n</body>\n')),(0,r.kt)("h4",{id:"Application-JavaScript"},"Application JavaScript"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"$('button').click(function () {\n  // when the <button> is clicked\n  // we remove the button from the DOM,\n  // and add a new, identical one.\n  $(this).replaceWith(this.outerHTML)\n})\n")),(0,r.kt)("h4",{id:"Test-Code-causing-error"},"Test Code causing error"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.get('button').click().parent()\n")),(0,r.kt)("p",null,"We've programmed our application above so that as soon as the ",(0,r.kt)("inlineCode",{parentName:"p"},"click")," event\nhappens, the button is removed from the DOM. When Cypress begins processing the\nnext query (",(0,r.kt)("a",{parentName:"p",href:"/api/commands/parent"},(0,r.kt)("inlineCode",{parentName:"a"},".parent()")),") in the test above, it detects\nthat the yielded subject (the original button) is detached from the DOM and\nthrows the error."),(0,r.kt)("p",null,"Fortunately, the error tells us exactly what to do:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"You can typically solve this by breaking up a chain.")),(0,r.kt)("h4",{id:"Fixed-Test-Code"},"Fixed Test Code"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.get('button').click()\ncy.get('button').parent()\n")),(0,r.kt)("p",null,"The above example is an oversimplification, but a representative one. In modern\nJavaScript frameworks, DOM elements are regularly re-rendered - meaning that the\nold element is thrown away and a new one is put in its place. Because this\nhappens so fast, it may ",(0,r.kt)("em",{parentName:"p"},"appear")," as if nothing has visibly changed to the user.\nBut if you are in the middle of executing test commands, it's possible the\nelement you're interacting with has become \"dead\". To deal with this situation\nyou must:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Always start a new chain after each ",(0,r.kt)("em",{parentName:"li"},"command"),"."),(0,r.kt)("li",{parentName:"ul"},"Use Cypress ",(0,r.kt)("em",{parentName:"li"},"queries")," to locate elements on the page, rather than using\nspecific HTML elements as your subject")),(0,r.kt)("p",null,"Queries (",(0,r.kt)("inlineCode",{parentName:"p"},".get()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},".as()")," and",(0,r.kt)("inlineCode",{parentName:"p"},".parent()"),", for example) and assertions\n(",(0,r.kt)("inlineCode",{parentName:"p"},".should()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},".and()"),") are safe to chain off of. Commands (such as ",(0,r.kt)("inlineCode",{parentName:"p"},".click()"),")\nare not."),(0,r.kt)("h3",{id:"cy-failed-because-the-element-cannot-be-interacted-with"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," ",(0,r.kt)("inlineCode",{parentName:"h3"},"cy...()")," failed because the element cannot be interacted with"),(0,r.kt)("p",null,"You may see a variation of this message for 4 different reasons:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The element is not visible"),(0,r.kt)("li",{parentName:"ol"},"The element is being covered by another element"),(0,r.kt)("li",{parentName:"ol"},"The element's center is hidden from view"),(0,r.kt)("li",{parentName:"ol"},"The element is disabled")),(0,r.kt)("p",null,"Cypress runs several calculations to ensure an element can ",(0,r.kt)("em",{parentName:"p"},"actually")," be\ninteracted with like a real user would. If you're seeing this error, you may\nneed to ",(0,r.kt)("em",{parentName:"p"},"guard")," your commands (due to a timing or an animation issue)."),(0,r.kt)("p",null,"There have been situations where Cypress does not correctly allow you to\ninteract with an element that should be interactable. If that's the case,\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress/issues/new/choose"},"open an issue"),"."),(0,r.kt)("p",null,"If you'd like to override these built-in checks, provide the ",(0,r.kt)("inlineCode",{parentName:"p"},"{force: true}"),"\noption to the action itself. Refer to each command for their available options,\nadditional use cases, and argument usage."),(0,r.kt)("h4",{id:"Ignore-built-in-error-checking"},"Ignore built-in error checking"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.get('[disabled]').click({force: true}).\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Be careful with this option. It's possible to force your tests to pass when the\nelement is actually not interactable in your application.")),(0,r.kt)("h3",{id:"cy-failed-because-the-element-is-currently-animating"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," ",(0,r.kt)("inlineCode",{parentName:"h3"},"cy...()")," failed because the element is currently animating"),(0,r.kt)(m,{src:"/img/guides/references/cy-method-failed-element-is-animating.png",alt:"cy.method() failed because element is animating",mdxType:"DocsImage"}),(0,r.kt)("p",null,"By default Cypress detects if an element you're trying to interact with is\nanimating. This check ensures that an element is not animating too quickly for a\nreal user to interact with the element. This also prevents some edge cases where\nactions, such as ",(0,r.kt)("a",{parentName:"p",href:"/api/commands/type"},(0,r.kt)("inlineCode",{parentName:"a"},".type()"))," or\n",(0,r.kt)("a",{parentName:"p",href:"/api/commands/click"},(0,r.kt)("inlineCode",{parentName:"a"},".click()")),", happened too fast during a transition."),(0,r.kt)("p",null,"Cypress will continuously attempt to interact with the element until it\neventually times out. If you'd like to force Cypress to interact with the\nelement there are a few options:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Pass ",(0,r.kt)("inlineCode",{parentName:"li"},"{force: true}"),". This disables ",(0,r.kt)("em",{parentName:"li"},"all")," error checking"),(0,r.kt)("li",{parentName:"ul"},"Pass ",(0,r.kt)("inlineCode",{parentName:"li"},"{waitForAnimations: false}")," to disable animation error checking"),(0,r.kt)("li",{parentName:"ul"},"Pass ",(0,r.kt)("inlineCode",{parentName:"li"},"{animationDistanceThreshold: 20}")," to decrease the sensitivity of\ndetecting if an element is animating. By increasing the threshold this enables\nyour element to move farther on the page without causing Cypress to\ncontinuously retry.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.get('[data-testid=\"modal-close\"]').click({ waitForAnimations: false })\n")),(0,r.kt)("p",null,"You can globally disable animation error checking, or increase the threshold by\nmodifying the ",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration"},"Cypress configuration"),"."),(0,r.kt)("h4",{id:"Cypress-configuration-file"},"Cypress configuration file"),(0,r.kt)("cypress-config-example",null,(0,r.kt)(h,{mdxType:"CypressConfigFileTabs"},(0,r.kt)("pre",{parentName:"cypress-config-example"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  waitForAnimations: false,\n  animationDistanceThreshold: 50,\n})\n")),(0,r.kt)("pre",{parentName:"cypress-config-example"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  waitForAnimations: false,\n  animationDistanceThreshold: 50,\n})\n")))),(0,r.kt)("h3",{id:"The-test-has-finished-but-Cypress-still-has-commands-in-its-queue"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," The test has finished but Cypress still has commands in its queue"),(0,r.kt)("p",null,"Let's examine several different ways you may get this error message. In every\nsituation, you'll need to change something in your test code to prevent the\nerror."),(0,r.kt)(m,{src:"/img/guides/references/the-test-has-finished.png",alt:"The test has finished but Cypress still has commands",mdxType:"DocsImage"}),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("strong",null,"Flaky tests below!"),(0,r.kt)("p",{parentName:"admonition"},"Several of these tests are dependent on race conditions. You may have to run\nthese tests multiple times before they will actually fail. You can also try\ntweaking some of the delays.")),(0,r.kt)("h4",{id:"Short-Example"},"Short Example"),(0,r.kt)("p",null,"This first test below will pass and shows you that Cypress tries to prevent\nleaving commands behind in the queue in every test."),(0,r.kt)("p",null,"Even though we return a string in our test, Cypress automatically figures out\nthat you've queued commands above and does not end the test until all cy\ncommands have finished."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// This test passes!\nit('Cypress is smart and this does not fail', () => {\n  cy.get('body').children().should('not.contain', 'foo') // <- no return here\n\n  return 'foobarbaz' // <- return here\n})\n")),(0,r.kt)("p",null,"The example below will fail because you've forcibly terminated the test early\nwith mocha's ",(0,r.kt)("inlineCode",{parentName:"p"},"done"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// This test errors!\nit('but you can forcibly end the test early which does fail', (done) => {\n  cy.get('body')\n    .then(() => {\n      done() // forcibly end test even though there are commands below\n    })\n    .children()\n    .should('not.contain', 'foo')\n})\n")),(0,r.kt)("h4",{id:"Complex-Async-Example"},"Complex Async Example"),(0,r.kt)("p",null,"What's happening in this example is that because we have ",(0,r.kt)("em",{parentName:"p"},"NOT")," told Mocha this\nis an asynchronous test, this test will pass ",(0,r.kt)("em",{parentName:"p"},"immediately")," then move onto the\nnext test. Then, when the ",(0,r.kt)("inlineCode",{parentName:"p"},"setTimeout")," callback function runs, new commands will\nget queued on the wrong test. Cypress will detect this and fail the ",(0,r.kt)("em",{parentName:"p"},"next")," test."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"describe('a complex example with async code', function () {\n  it('you can cause commands to bleed into the next test', function () {\n    // This test passes...but...\n    setTimeout(() => {\n      cy.get('body').children().should('not.contain', 'foo')\n    }, 10)\n  })\n\n  it('this test will fail due to the previous poorly written test', () => {\n    // This test errors!\n    cy.wait(10)\n  })\n})\n")),(0,r.kt)("p",null,"The correct way to write the above test code is using Mocha's ",(0,r.kt)("inlineCode",{parentName:"p"},"done")," to signify\nit is asynchronous."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"it('does not cause commands to bleed into the next test', (done) => {\n  setTimeout(() => {\n    cy.get('body')\n      .children()\n      .should('not.contain', 'foo')\n      .then(() => {\n        done()\n      })\n  }, 10)\n})\n")),(0,r.kt)("h4",{id:"Complex-Promise-Example"},"Complex Promise Example"),(0,r.kt)("p",null,"In the example below, we forget to return the ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise")," in our test. This means\nthe test passes synchronously but our ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise")," resolves in the next test. This\nalso causes the commands to be queued on the wrong test. We will get the error\nin the next test that Cypress detected it had commands in its command queue."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"describe('another complex example using a forgotten \"return\"', () => {\n  it('forgets to return a promise', () => {\n    // This test passes...but...\n    Cypress.Promise.delay(10).then(() => {\n      cy.get('body').children().should('not.contain', 'foo')\n    })\n  })\n\n  it('this test will fail due to the previous poorly written test', () => {\n    // This test errors!\n    cy.wait(10)\n  })\n})\n")),(0,r.kt)("p",null,"The correct way to write the above test code would be to return our ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"it('does not forget to return a promise', () => {\n  return Cypress.Promise.delay(10).then(() => {\n    return cy.get('body').children().should('not.contain', 'foo')\n  })\n})\n")),(0,r.kt)("h3",{id:"cyvisit-failed-because-you-are-attempting-to-visit-a-second-unique-domain"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," ",(0,r.kt)("inlineCode",{parentName:"h3"},"cy.visit()")," failed because you are attempting to visit a second unique domain"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("strong",null,"Note"),(0,r.kt)("p",{parentName:"admonition"},"This error only pertains to Cypress version ",(0,r.kt)("inlineCode",{parentName:"p"},"v11.0.0")," and under. As of Cypress\n",(0,r.kt)("a",{parentName:"p",href:"https://on.cypress.io/changelog#12-0-0"},"v12.0.0"),", users can navigate to\nmultiple domains in a single test.")),(0,r.kt)("p",null,"See our ",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/web-security#Limitations"},"Web Security")," documentation."),(0,r.kt)("h3",{id:"cyvisit-failed-because-you-are-attempting-to-visit-a-different-origin-domain"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," ",(0,r.kt)("inlineCode",{parentName:"h3"},"cy.visit()")," failed because you are attempting to visit a different origin domain"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("strong",null,"Note"),(0,r.kt)("p",{parentName:"admonition"},"This error only pertains to Cypress version ",(0,r.kt)("inlineCode",{parentName:"p"},"v11.0.0")," and under. As of Cypress\n",(0,r.kt)("a",{parentName:"p",href:"https://on.cypress.io/changelog#12-0-0"},"v12.0.0"),", users can navigate to\nmultiple domains in a single test.")),(0,r.kt)("p",null,"Two URLs have the same origin if the ",(0,r.kt)("inlineCode",{parentName:"p"},"protocol"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"port")," (if specified), and\n",(0,r.kt)("inlineCode",{parentName:"p"},"host")," are the same for both. You can only visit domains that are of the\nsame-origin within a single test. You can read more about same-origin policy in\ngeneral\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy"},"here"),"."),(0,r.kt)("p",null,"You can visit urls that are of different origin across different tests, so you\nmay consider splitting your ",(0,r.kt)("inlineCode",{parentName:"p"},"cy.visit()")," of different origin domains into\nseparate tests."),(0,r.kt)("p",null,"See our ",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/web-security#Limitations"},"Web Security")," documentation\nfor more information and workarounds."),(0,r.kt)("h3",{id:"cyvisit-succeeded-but-commands-are-timing-out"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," ",(0,r.kt)("inlineCode",{parentName:"h3"},"cy.visit()")," succeeded, but commands are timing out"),(0,r.kt)("p",null,"As of Cypress ",(0,r.kt)("a",{parentName:"p",href:"https://on.cypress.io/changelog#12-0-0"},"v12.0.0"),", users can\nnavigate to multiple domains in a single test. The following test will succeed\nas-is:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"it('navigates to docs.cypress.io', () => {\n  cy.visit('http://localhost:3000')\n  cy.visit('https://docs.cypress.io') // visit a different superdomain\n})\n")),(0,r.kt)("p",null,"However, when the newly visited URL is not considered the same superdomain, the\n",(0,r.kt)("a",{parentName:"p",href:"/api/commands/origin"},(0,r.kt)("inlineCode",{parentName:"a"},"cy.origin()"))," command ",(0,r.kt)("strong",{parentName:"p"},"must")," be used to interact with\nthe newly visited domain. The following test is incorrect:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"it('navigates to docs.cypress.io and runs additional commands', () => {\n  cy.visit('http://localhost:3000')\n  cy.visit('https://docs.cypress.io') // visit a different superdomain\n  cy.get('h1').should('contain', 'Why Cypress?') // fails\n})\n")),(0,r.kt)("p",null,"And will result in the following error:"),(0,r.kt)(m,{src:"/img/guides/references/cy-visit-subsequent-commands-timed-out.png",alt:"cy.visit() subsequent commands timed out",mdxType:"DocsImage"}),(0,r.kt)("p",null,"In order to fix this, our ",(0,r.kt)("inlineCode",{parentName:"p"},"cy.get()")," command ",(0,r.kt)("strong",{parentName:"p"},"must")," be wrapped with the\n",(0,r.kt)("a",{parentName:"p",href:"/api/commands/origin"},(0,r.kt)("inlineCode",{parentName:"a"},"cy.origin()"))," command, like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"it('navigates to docs.cypress.io and runs additional commands', () => {\n  cy.visit('http://localhost:3000')\n  cy.visit('https://docs.cypress.io') // visit a different superdomain\n  cy.origin('https://docs.cypress.io', () => {\n    cy.get('h1').should('contain', 'Why Cypress?') // now succeeds!\n  })\n})\n")),(0,r.kt)("p",null,"See our ",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/web-security#Limitations"},"Web Security")," documentation\nfor more information and workarounds."),(0,r.kt)("h3",{id:"CypressaddParentCommand--CypressaddDualCommand--CypressaddChildCommand-has-been-removed-and-replaced-by-CypressCommandsadd"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," ",(0,r.kt)("inlineCode",{parentName:"h3"},"Cypress.addParentCommand()")," / ",(0,r.kt)("inlineCode",{parentName:"h3"},"Cypress.addDualCommand()")," / ",(0,r.kt)("inlineCode",{parentName:"h3"},"Cypress.addChildCommand()")," has been removed and replaced by ",(0,r.kt)("inlineCode",{parentName:"h3"},"Cypress.Commands.add()")),(0,r.kt)("p",null,"In version ",(0,r.kt)("a",{parentName:"p",href:"/guides/references/changelog"},"0.20.0"),", we removed the commands for\nadding custom commands and replaced them with, what we believe to be, a simpler\ninterface."),(0,r.kt)("p",null,"Now you can create parent, dual, and child commands using the same\n",(0,r.kt)("a",{parentName:"p",href:"/api/cypress-api/custom-commands"},"Cypress.Commands.add()")," command."),(0,r.kt)("p",null,"Please read our\n",(0,r.kt)("a",{parentName:"p",href:"/api/cypress-api/custom-commands"},"new documentation on writing custom commands"),"."),(0,r.kt)("h3",{id:"Cypress-detected-that-you-invoked-one-or-more-cy-commands-in-a-custom-command-but-returned-a-different-value"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Cypress detected that you invoked one or more ",(0,r.kt)("inlineCode",{parentName:"h3"},"cy")," commands in a custom command but returned a different value."),(0,r.kt)("p",null,"Because ",(0,r.kt)("inlineCode",{parentName:"p"},"cy")," commands are asynchronous and are queued to be run later, it\ndoesn't make sense to return anything else."),(0,r.kt)("p",null,"For convenience, you can also omit any return value or return ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," and\nCypress will not error."),(0,r.kt)("p",null,"In versions before ",(0,r.kt)("a",{parentName:"p",href:"/guides/references/changelog"},"0.20.0")," of Cypress we\nautomatically detected this and forced the ",(0,r.kt)("inlineCode",{parentName:"p"},"cy")," commands to be returned. To make\nthings less magical and clearer, we are now throwing an error."),(0,r.kt)("h3",{id:"Cypress-detected-that-you-invoked-one-or-more-cy-commands-but-returned-a-different-value"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Cypress detected that you invoked one or more ",(0,r.kt)("inlineCode",{parentName:"h3"},"cy")," commands but returned a different value."),(0,r.kt)("p",null,"Because cy commands are asynchronous and are queued to be run later, it doesn't\nmake sense to return anything else."),(0,r.kt)("p",null,"For convenience, you can also omit any return value or return ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," and\nCypress will not error."),(0,r.kt)("p",null,"In versions before ",(0,r.kt)("a",{parentName:"p",href:"/guides/references/changelog"},"0.20.0")," of Cypress we\nautomatically detected this and forced the ",(0,r.kt)("inlineCode",{parentName:"p"},"cy")," commands to be returned. To make\nthings less magical and clearer, we are now throwing an error."),(0,r.kt)("h3",{id:"Cypress-detected-that-you-returned-a-promise-from-a-command-while-also-invoking-one-or-more-cy-commands-in-that-promise"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Cypress detected that you returned a promise from a command while also invoking one or more cy commands in that promise."),(0,r.kt)("p",null,"Because Cypress commands are already promise-like, you don't need to wrap them\nor return your own promise."),(0,r.kt)("p",null,"Cypress will resolve your command with whatever the final Cypress command\nyields."),(0,r.kt)("p",null,"The reason this is an error instead of a warning is because Cypress internally\nqueues commands serially whereas Promises execute as soon as they are invoked.\nAttempting to reconcile this would prevent Cypress from ever resolving."),(0,r.kt)("h3",{id:"Cypress-detected-that-you-returned-a-promise-in-a-test-but-also-invoked-one-or-more-cy-commands-inside-of-that-promise"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Cypress detected that you returned a promise in a test, but also invoked one or more ",(0,r.kt)("inlineCode",{parentName:"h3"},"cy")," commands inside of that promise."),(0,r.kt)("p",null,"While this works in practice, it's often indicative of an anti-pattern. You\nalmost never need to return both a promise and also invoke ",(0,r.kt)("inlineCode",{parentName:"p"},"cy")," commands."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"cy")," commands themselves are already promise like, and you can likely avoid the\nuse of the separate Promise."),(0,r.kt)("h3",{id:"Cypress-detected-that-you-returned-a-promise-in-a-test-but-also-invoked-a-done-callback"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Cypress detected that you returned a promise in a test, but also invoked a done callback."),(0,r.kt)("p",null,"The version of Mocha was upgraded with Cypress 4.0. Mocha 3+ no longer allows\nreturning a promise and invoking a done callback. Read more about it in the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/migration-guide#Mocha-upgrade"},"4.0 migration guide"),"."),(0,r.kt)("h3",{id:"CypressError-Timed-out-retrying-Expected-to-find-element--but-never-found-it-Queried-from-element-"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," CypressError: Timed out retrying: Expected to find element: \u2018\u2026\u2019, but never found it. Queried from element: <\u2026>"),(0,r.kt)("p",null,"If you get this error in a case where the element is definitely visible in the\nDOM, your document might contain malformed HTML. In such cases,\n",(0,r.kt)("inlineCode",{parentName:"p"},"document.querySelector()")," will not find any elements that appear after the\npoint where the HTML is malformed. Even if you feel certain your HTML is not\nmalformed anywhere, check it anyway (line by line in the dev tools). Especially\nif you've exhausted all other possibilities."),(0,r.kt)("h2",{id:"CLI-Errors"},"CLI Errors"),(0,r.kt)("h3",{id:"You-passed-the---record-flag-but-did-not-provide-us-your-Record-Key"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," You passed the ",(0,r.kt)("inlineCode",{parentName:"h3"},"--record")," flag but did not provide us your Record Key."),(0,r.kt)("p",null,"You may receive this error when trying to run Cypress tests in\n",(0,r.kt)("a",{parentName:"p",href:"/guides/continuous-integration/introduction"},"Continuous Integration"),". This\nmeans that you did not pass a specific record key to:\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line#cypress-run"},"cypress run --record"),"."),(0,r.kt)("p",null,"Since no record key was passed, Cypress checks for any environment variable with\nthe name ",(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_RECORD_KEY"),". In this case, that was also not found."),(0,r.kt)("p",null,"You can get your project's record key by locating it in your settings tab in the\nCypress app or in ",(0,r.kt)("a",{parentName:"p",href:"https://on.cypress.io/cloud"},"Cypress Cloud"),"."),(0,r.kt)("p",null,"You will want to then\n",(0,r.kt)("a",{parentName:"p",href:"/guides/continuous-integration/introduction#Record-tests"},"add the key to your config file or as an environment variable"),"."),(0,r.kt)("h3",{id:"The-cypress-ci-command-has-been-deprecated"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," The ",(0,r.kt)("inlineCode",{parentName:"h3"},"cypress ci")," command has been deprecated"),(0,r.kt)("p",null,"As of version ",(0,r.kt)("a",{parentName:"p",href:"/guides/references/changelog#0-19-0"},(0,r.kt)("inlineCode",{parentName:"a"},"0.19.0"))," and CLI versions\n",(0,r.kt)("inlineCode",{parentName:"p"},"0.13.0"),", the ",(0,r.kt)("inlineCode",{parentName:"p"},"cypress ci")," command has been deprecated. We did this to make it\nclearer what the difference was between a ",(0,r.kt)("em",{parentName:"p"},"regular test run")," and a ",(0,r.kt)("em",{parentName:"p"},"recorded\ntest run"),"."),(0,r.kt)("p",null,"Previously to record runs you had the environment variable: ",(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_CI_KEY")," or\nyou wrote:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cypress ci abc-key-123\n")),(0,r.kt)("p",null,"You need to rewrite this as:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cypress run --record --key abc-key-123\n")),(0,r.kt)("p",null,"If you were using the environment variable ",(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_CI_KEY"),", rename it\nto",(0,r.kt)("inlineCode",{parentName:"p"},"CYPRESS_RECORD_KEY"),"."),(0,r.kt)("p",null,"You can now run and omit the ",(0,r.kt)("inlineCode",{parentName:"p"},"--key")," flag:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cypress run --record\n")),(0,r.kt)("p",null,"We will automatically apply the record key environment variable."),(0,r.kt)("h3",{id:"A-Cached-Cypress-Binary-Could-not-be-found"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," A Cached Cypress Binary Could not be found"),(0,r.kt)("p",null,"This error occurs in CI when using ",(0,r.kt)("inlineCode",{parentName:"p"},"cypress run")," without a valid Cypress binary\ncache installed on the system (on linux that's ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.cache/Cypress"),")."),(0,r.kt)("p",null,"To fix this error, follow instructions on\n",(0,r.kt)("a",{parentName:"p",href:"/guides/continuous-integration/introduction#Caching"},"caching the cypress binary in CI"),",\nthen bump the version of your CI cache to ensure a clean build."),(0,r.kt)("h3",{id:"Incorrect-usage-of---ci-build-id-flag"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Incorrect usage of ",(0,r.kt)("inlineCode",{parentName:"h3"},"--ci-build-id")," flag"),(0,r.kt)("p",null,"You passed the ",(0,r.kt)("inlineCode",{parentName:"p"},"--ci-build-id")," flag but did not provide either a\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line#cypress-run-group-lt-name-gt"},"--group")," or\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line#cypress-run-parallel"},"--parallel")," flag."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"--ci-build-id")," flag is used to either group or parallelize multiple runs\ntogether."),(0,r.kt)("p",null,"Check out our ",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/parallelization"},"guide on parallelizing runs")," and\nwhen to use the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line#cypress-run-ci-build-id-lt-id-gt"},"--ci-build-id"),"\noption."),(0,r.kt)("h3",{id:"record-params-without-recording"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," The ",(0,r.kt)("inlineCode",{parentName:"h3"},"--ci-build-id"),", ",(0,r.kt)("inlineCode",{parentName:"h3"},"--group"),", ",(0,r.kt)("inlineCode",{parentName:"h3"},"--tag"),", ",(0,r.kt)("inlineCode",{parentName:"h3"},"--parallel"),", or ",(0,r.kt)("inlineCode",{parentName:"h3"},"--auto-cancel-after-failures")," flags can only be used when recording"),(0,r.kt)("p",null,"You passed the ",(0,r.kt)("inlineCode",{parentName:"p"},"--ci-build-id"),",\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line#cypress-run-group-lt-name-gt"},"--group"),",\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line#cypress-run-tag-lt-tag-gt"},"--tag"),",\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line#cypress-run-parallel"},"--parallel"),", or\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line/#auto-cancel-after-runs"},"--auto-cancel-after-failures"),"\nflag without also passing the ",(0,r.kt)("inlineCode",{parentName:"p"},"--record")," flag."),(0,r.kt)("p",null,"These flags can only be used when recording to\n",(0,r.kt)("a",{parentName:"p",href:"/guides/cloud/introduction"},"Cypress Cloud"),"."),(0,r.kt)("p",null,"Please review our ",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/parallelization"},"parallelization"),"\ndocumentation to learn more."),(0,r.kt)("h3",{id:"We-could-not-determine-a-unique-CI-build-ID"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," We could not determine a unique CI build ID"),(0,r.kt)("p",null,"You passed the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line#cypress-run-group-lt-name-gt"},"--group")," or\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line#cypress-run-parallel"},"--parallel")," flag but we could\nnot automatically determine or generate a ",(0,r.kt)("inlineCode",{parentName:"p"},"ciBuildId"),"."),(0,r.kt)("p",null,"In order to use either of these parameters a ",(0,r.kt)("inlineCode",{parentName:"p"},"ciBuildId")," must be determined."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ciBuildId")," is automatically detected if you are running Cypress in most\n",(0,r.kt)("a",{parentName:"p",href:"/guides/continuous-integration/introduction#Examples"},"CI providers"),". Please\nreview the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/parallelization#CI-Build-ID-environment-variables-by-provider"},"natively recognized environment variables"),"\nfor your CI provider."),(0,r.kt)("p",null,"You can avoid this check in the future by passing an ID to the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line#cypress-run-ci-build-id-lt-id-gt"},"--ci-build-id"),"\nflag manually."),(0,r.kt)("p",null,"Please review our ",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/parallelization"},"parallelization"),"\ndocumentation to learn more."),(0,r.kt)("h3",{id:"Group-name-has-already-been-used-for-this-run"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Group name has already been used for this run"),(0,r.kt)("p",null,"You passed the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line#cypress-run-group-lt-name-gt"},"--group")," flag, but\nthis group name has already been used for this run."),(0,r.kt)("p",null,"If you are trying to parallelize this run, then also pass the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line#cypress-run-parallel"},"--parallel")," flag, else pass a\ndifferent group name."),(0,r.kt)("p",null,"Please review\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/parallelization#Grouping-test-runs"},"grouping test runs"),"\ndocumentation to learn more."),(0,r.kt)("h3",{id:"Cannot-parallelize-tests-across-environments"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Cannot parallelize tests across environments"),(0,r.kt)("p",null,"You passed the ",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line#cypress-run-parallel"},"--parallel"),"\nflag, but we do not parallelize tests across different environments."),(0,r.kt)("p",null,"This machine is sending different environment parameters than the first machine\nthat started this parallel run."),(0,r.kt)("p",null,"In order to run in parallel mode each machine must send identical environment\nparameters such as:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Specs"),(0,r.kt)("li",{parentName:"ul"},"Operation system name"),(0,r.kt)("li",{parentName:"ul"},"Operating system version"),(0,r.kt)("li",{parentName:"ul"},"Browser name"),(0,r.kt)("li",{parentName:"ul"},"Major browser version")),(0,r.kt)("p",null,"Please review our ",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/parallelization"},"parallelization"),"\ndocumentation to learn more."),(0,r.kt)("h3",{id:"Cannot-parallelize-tests-in-this-group"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Cannot parallelize tests in this group"),(0,r.kt)("p",null,"You passed the ",(0,r.kt)("inlineCode",{parentName:"p"},"--parallel")," flag, but this run group was originally created\nwithout the ",(0,r.kt)("inlineCode",{parentName:"p"},"--parallel")," flag."),(0,r.kt)("p",null,"You cannot use the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line#cypress-run-parallel"},"--parallel")," flag with this\ngroup."),(0,r.kt)("p",null,"Please review our\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/parallelization#Grouping-test-runs"},"grouping test runs"),"\ndocumentation to learn more."),(0,r.kt)("h3",{id:"Run-must-pass---parallel-flag"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Run must pass ",(0,r.kt)("inlineCode",{parentName:"h3"},"--parallel")," flag"),(0,r.kt)("p",null,"You did not pass the ",(0,r.kt)("inlineCode",{parentName:"p"},"--parallel")," flag, but this run's group was originally\ncreated with the ",(0,r.kt)("inlineCode",{parentName:"p"},"--parallel")," flag."),(0,r.kt)("p",null,"You must use the ",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line#cypress-run-parallel"},"--parallel"),"\nflag with this group."),(0,r.kt)("p",null,"Please review our ",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/parallelization"},"parallelization"),"\ndocumentation to learn more."),(0,r.kt)("h3",{id:"Cannot-parallelize-tests-on-a-stale-run"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Cannot parallelize tests on a stale run"),(0,r.kt)("p",null,"This error is thrown when you are attempting to pass the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line#cypress-run-parallel"},"--parallel")," flag to a run\nthat Cypress detected was completed over 24 hours ago."),(0,r.kt)("p",null,"In order to uniquely identify each run during ",(0,r.kt)("inlineCode",{parentName:"p"},"cypress run"),", Cypress attempts to\nread a unique identifier from your CI provider as described in our\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/parallelization#CI-Build-ID-environment-variables-by-provider"},"parallelization doc"),"."),(0,r.kt)("p",null,"You may encounter this error if Cypress is detecting the exact same CI Build ID\nmatching a previous CI Build ID in a run that was completed over 24 hours ago.\nYou cannot run tests on a run that has been complete for that long. \u200b \u200bYou can\nsee the CI Build ID that is detected for each completed run by looking at the\ndetails section at the top of your run in\n",(0,r.kt)("a",{parentName:"p",href:"https://on.cypress.io/cloud"},"Cypress Cloud"),". \u200b \u200bYou can generate and pass in\nyour own unique CI Build ID per run as described\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line#cypress-run-ci-build-id-lt-id-gt"},"here"),"."),(0,r.kt)("p",null,"Please also review our ",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/parallelization"},"parallelization"),"\ndocumentation to learn more."),(0,r.kt)("h3",{id:"Run-is-not-accepting-any-new-groups"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Run is not accepting any new groups"),(0,r.kt)("p",null,"The run you are attempting access to is already complete and will not accept new\ngroups."),(0,r.kt)("p",null,"When a run finishes all of its groups, it waits for a configurable set of time\nbefore finally completing. You must add more groups during that time period."),(0,r.kt)("p",null,"Please review our ",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/parallelization"},"parallelization"),"\ndocumentation to learn more."),(0,r.kt)("a",{name:"win-max-path-length"}),(0,r.kt)("h3",{id:"The-Cypress-App-could-not-be-unzipped-This-is-most-likely-because-the-maximum-path-length-is-being-exceeded-on-your-system"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," The Cypress App could not be unzipped. This is most likely because the maximum path length is being exceeded on your system."),(0,r.kt)("p",null,"When Cypress is installed, it unzips to the designated cache location on your\ncomputer. This error means that Cypress detected that it has exceeded the\nmaximum path length while unzipping Cypress."),(0,r.kt)("p",null,"This is common on Windows, where the maximum path length used to be 260\ncharacters."),(0,r.kt)("p",null,'To fix this error, enable "long paths" on your Windows system:'),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},'Go to the Start Menu, and right click on PowerShell. Select "Run as\nadministrator."'),(0,r.kt)("li",{parentName:"ol"},"Run this command:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},'New-ItemProperty -Path "HKLM:\\SYSTEM\\CurrentControlSet\\Control\\FileSystem" `\n  -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force\n')),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Restart your computer.")),(0,r.kt)("p",null,"This should get rid of the error. If you are still receiving this error, please\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress/issues"},"search for an open issue")," or\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress/issues/new/choose"},"open a new one"),"."),(0,r.kt)("p",null,"If you do not have Powershell available, you can also make this change via\nregedit or gpedit.\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation"},"See Microsoft's documentation for details.")),(0,r.kt)("h3",{id:"error-unknown-option---auto-cancel-after-failures"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," error: unknown option: --auto-cancel-after-failures"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"--auto-cancel-after-failures")," flag is only available in Cypress 12.6.0 and\nlater, and must be used with the ",(0,r.kt)("inlineCode",{parentName:"p"},"cypress run")," command."),(0,r.kt)("h3",{id:"--auto-cancel-after-failures-must-be-a-integer-or-false"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," --auto-cancel-after-failures must be a integer or false"),(0,r.kt)("p",null,"You passed in an invalid value for the ",(0,r.kt)("inlineCode",{parentName:"p"},"--auto-cancel-after-failures")," flag. It\nmust be an integer or false."),(0,r.kt)("h3",{id:"--auto-cancel-after-failures-passed-without-a-Business-or-Enterprise-Cloud-account"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," --auto-cancel-after-failures passed without a Business or Enterprise Cloud account"),(0,r.kt)("p",null,"Auto Cancellation is not included in your current billing plan. To enable this\nservice, please visit your billing and upgrade to another plan with Auto\nCancellation."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.cypress.io/pricing/"},"https://www.cypress.io/pricing/")),(0,r.kt)("h3",{id:"You-passed-the---auto-cancel-after-failures-flag-for-a-run-that-is-already-in-progress"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," You passed the --auto-cancel-after-failures flag for a run that is already in progress"),(0,r.kt)("p",null,"You passed the ",(0,r.kt)("inlineCode",{parentName:"p"},"--auto-cancel-after-failures")," flag, but this run originally\nstarted with a different value on this ",(0,r.kt)("inlineCode",{parentName:"p"},"--auto-cancel-after-failures")," flag."),(0,r.kt)("p",null,"The first setting of ",(0,r.kt)("inlineCode",{parentName:"p"},"--auto-cancel-after-failures")," for any given run takes\nprecedent."),(0,r.kt)("h2",{id:"Page-Load-Errors"},"Page Load Errors"),(0,r.kt)("h3",{id:"Cypress-detected-a-cross-origin-error-happened-on-page-load"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Cypress detected a cross-origin error happened on page load"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"For a more thorough explanation of Cypress's Web Security model,\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/web-security"},"please read our dedicated guide to it"),".")),(0,r.kt)("p",null,"This error means that your application navigated to a superdomain that Cypress\nwas not bound to. Initially when you ",(0,r.kt)("a",{parentName:"p",href:"/api/commands/visit"},(0,r.kt)("inlineCode",{parentName:"a"},"cy.visit()")),",\nCypress changes the browser's URL to match the ",(0,r.kt)("inlineCode",{parentName:"p"},"url")," passed to\n",(0,r.kt)("a",{parentName:"p",href:"/api/commands/visit"},(0,r.kt)("inlineCode",{parentName:"a"},"cy.visit()")),". This enables Cypress to communicate with\nyour application to bypass all same-origin security policies among other things."),(0,r.kt)("p",null,"When your application navigates to a superdomain outside of the current\norigin-policy, Cypress is unable to communicate with it, and thus fails."),(0,r.kt)("h4",{id:"There-are-a-few-workarounds-to-these-common-situations"},"There are a few workarounds to these common situations:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Don't click ",(0,r.kt)("inlineCode",{parentName:"p"},"<a>")," links in your tests that navigate outside of your\napplication. Likely this isn't worth testing anyway. You should ask yourself:\n",(0,r.kt)("em",{parentName:"p"},"What's the point of clicking and going to another app?")," Likely all you care\nabout is that the ",(0,r.kt)("inlineCode",{parentName:"p"},"href")," attribute matches what you expect. So make an\nassertion about that. You can see more strategies on testing anchor links\n",(0,r.kt)("a",{parentName:"p",href:"/examples/recipes#Testing-the-DOM"},'in our "Tab Handling and Links" example recipe'),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"You are testing a page that uses Single sign-on (SSO). In this case your web\nserver is likely redirecting you between superdomains, so you receive this\nerror message. You can likely get around this redirect problem by using\n",(0,r.kt)("a",{parentName:"p",href:"/api/commands/request"},(0,r.kt)("inlineCode",{parentName:"a"},"cy.request()"))," to manually handle the session\nyourself."))),(0,r.kt)("p",null,"If you find yourself stuck and can't work around these issues you can set\n",(0,r.kt)("inlineCode",{parentName:"p"},"chromeWebSecurity")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," in your\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration"},"Cypress configuration")," when running in Chrome\nfamily browsers (this setting will not work in other browsers). Before doing so\nyou should really understand and\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/web-security"},"read about the reasoning here"),"."),(0,r.kt)("cypress-config-example",null,(0,r.kt)(h,{mdxType:"CypressConfigFileTabs"},(0,r.kt)("pre",{parentName:"cypress-config-example"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  chromeWebSecurity: false,\n})\n")),(0,r.kt)("pre",{parentName:"cypress-config-example"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  chromeWebSecurity: false,\n})\n")))),(0,r.kt)("h3",{id:"Cypress-detected-that-an-uncaught-error-was-thrown-from-a-cross-origin-script"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Cypress detected that an uncaught error was thrown from a cross-origin script."),(0,r.kt)("p",null,"Check your Developer Tools Console for the actual error - it should be printed\nthere."),(0,r.kt)("p",null,"It's possible to enable debugging these scripts by adding the ",(0,r.kt)("inlineCode",{parentName:"p"},"crossorigin"),"\nattribute and setting a ",(0,r.kt)("inlineCode",{parentName:"p"},"CORS")," header."),(0,r.kt)("h2",{id:"Browser-Errors"},"Browser Errors"),(0,r.kt)("a",{name:"The-Chromium-Renderer-process-just-crashed"}),(0,r.kt)("h3",{id:"The-browser-process-running-your-tests-just-exited-unexpectedly"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," The browser process running your tests just exited unexpectedly"),(0,r.kt)("p",null,"This error can occur whenever Cypress detects that the launched browser has\nexited or crashed before the tests could finish running."),(0,r.kt)("p",null,"This can happen for a number of reasons, including:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'The browser was exited manually, by clicking the "Quit" button or otherwise'),(0,r.kt)("li",{parentName:"ul"},"Your test suite or application under test is starving the browser of\nresources."),(0,r.kt)("li",{parentName:"ul"},"Cypress is running in a memory-starved environment"),(0,r.kt)("li",{parentName:"ul"},"The browser is testing a memory-heavy application"),(0,r.kt)("li",{parentName:"ul"},"There are problems with the GPU / GPU drivers"),(0,r.kt)("li",{parentName:"ul"},"There is a bug in the browser involving memory management"),(0,r.kt)("li",{parentName:"ul"},"There is a memory leak in Cypress")),(0,r.kt)("p",null,"For Chromium-based browsers, you can try enabling\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/experiments"},"experimentalMemoryManagement"),"."),(0,r.kt)("p",null,"If you are running in ",(0,r.kt)("inlineCode",{parentName:"p"},"open")," mode, you can also try lowering\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration#Global"},"numTestsKeptInMemory"),"."),(0,r.kt)("p",null,"If the browser running Cypress tests crashes, Cypress will abort any remaining\ntests and print out this error."),(0,r.kt)("h2",{id:"Cypress-App-errors"},"Cypress App errors"),(0,r.kt)("h3",{id:"Whoops-we-cant-run-your-tests"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Whoops, we can't run your tests"),(0,r.kt)("p",null,"This error happens when Cypress detects that the browser automation is not\nconnected, or that Cypress's internal proxy is being bypassed. This is caused by\none of the following:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"A policy setting blocks the Cypress proxy server or browser extension")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"See\n",(0,r.kt)("a",{parentName:"li",href:"#Cypress-detected-policy-settings-on-your-computer-that-may-cause-issues"},"Cypress detected policy settings on your computer that may cause issues"),".")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"The ",(0,r.kt)("inlineCode",{parentName:"strong"},"--proxy-server")," or ",(0,r.kt)("inlineCode",{parentName:"strong"},"--load-extension")," arguments have been changed")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"When adding a plugin with the\n",(0,r.kt)("a",{parentName:"li",href:"/api/plugins/browser-launch-api"},"Browser Launch API"),", it's possible for a\nnecessary command-line argument to be changed. If you're running into this\nerror, you can troubleshoot by inspecting ",(0,r.kt)("inlineCode",{parentName:"li"},"args")," before and after the plugin\nruns, either by using ",(0,r.kt)("inlineCode",{parentName:"li"},"console.log()")," or by\n",(0,r.kt)("a",{parentName:"li",href:"/guides/references/troubleshooting#Print-DEBUG-logs"},"printing DEBUG logs"),"\nwith ",(0,r.kt)("inlineCode",{parentName:"li"},"DEBUG=cypress:server:plugins,cypress:server:plugins:*"),".")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"You visit the Cypress proxy URL outside of a Cypress browser.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Don't copy the URL you see when launching a Cypress browser from the Cypress\nApp and open it in a non-Cypress browser. If you want to run your tests in a\ndifferent browser, follow the instructions in the\n",(0,r.kt)("a",{parentName:"li",href:"/guides/guides/cross-browser-testing"},"Cross Browser Testing")," guide.")),(0,r.kt)("h3",{id:"Cannot-connect-to-API-server"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Cannot connect to API server"),(0,r.kt)("p",null,"Logging in, viewing runs, and setting up new projects to record requires\nconnecting to an external API server. This error displays when we failed to\nconnect to the API server."),(0,r.kt)("p",null,"This error likely appeared because:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"You do not have internet. Please ensure you have connectivity then try again."),(0,r.kt)("li",{parentName:"ol"},"You are a developer that has forked our codebase and do not have access to\nrun our API locally. Please read more about this in our\n",(0,r.kt)("a",{parentName:"li",href:"https://on.cypress.io/contributing"},"contributing doc"),".")),(0,r.kt)("h3",{id:"Cypress-detected-policy-settings-on-your-computer-that-may-cause-issues"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Cypress detected policy settings on your computer that may cause issues"),(0,r.kt)("p",null,"When Cypress launches Chrome, it attempts to launch it with a custom proxy\nserver and browser extension. Certain group policies (GPOs) on Windows can\nprevent this from working as intended, which can cause tests to break."),(0,r.kt)("p",null,"If your administrator has set any of the following Chrome GPOs, it can prevent\nyour tests from running in Chrome:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Proxy policies:\n",(0,r.kt)("inlineCode",{parentName:"li"},"ProxySettings, ProxyMode, ProxyServerMode, ProxyServer, ProxyPacUrl, ProxyBypassList")),(0,r.kt)("li",{parentName:"ul"},"Extension policies:\n",(0,r.kt)("inlineCode",{parentName:"li"},"ExtensionInstallBlacklist, ExtensionInstallWhitelist, ExtensionInstallForcelist, ExtensionInstallSources, ExtensionAllowedTypes, ExtensionAllowInsecureUpdates, ExtensionSettings, UninstallBlacklistedExtensions"))),(0,r.kt)("p",null,"Here are some potential workarounds:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Ask your administrator to disable these policies so that you can use Cypress\nwith Chrome."),(0,r.kt)("li",{parentName:"ol"},"Use the built-in Electron browser for tests, since it is not affected by\nthese policies.\n",(0,r.kt)("a",{parentName:"li",href:"/guides/guides/launching-browsers#Electron-Browser"},"See the guide to launching browsers for more information.")),(0,r.kt)("li",{parentName:"ol"},"Try using Chromium instead of Google Chrome for your tests, since it may be\nunaffected by GPO. You can\n",(0,r.kt)("a",{parentName:"li",href:"https://download-chromium.appspot.com"},"download the latest Chromium build here.")),(0,r.kt)("li",{parentName:"ol"},"If you have Local Administrator access to your computer, you may be able to\ndelete the registry keys that are affecting Chrome. Here are some\ninstructions:",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Open up Registry Editor by pressing WinKey+R and typing ",(0,r.kt)("inlineCode",{parentName:"li"},"regedit.exe")),(0,r.kt)("li",{parentName:"ol"},"Look in the following locations for the policy settings listed above:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HKEY_LOCAL_MACHINE\\Software\\Policies\\Google\\Chrome")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HKEY_LOCAL_MACHINE\\Software\\Policies\\Google\\Chromium")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HKEY_CURRENT_USER\\Software\\Policies\\Google\\Chrome")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HKEY_CURRENT_USER\\Software\\Policies\\Google\\Chromium")))),(0,r.kt)("li",{parentName:"ol"},"Delete or rename any policy keys found. ",(0,r.kt)("em",{parentName:"li"},"Make sure to back up your\nregistry before making any changes."))))),(0,r.kt)("h3",{id:"Uncaught-exceptions-from-your-application"},(0,r.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Uncaught exceptions from your application"),(0,r.kt)("p",null,"When Cypress detects an uncaught exception in your application, it will fail the\ncurrently running test."),(0,r.kt)("p",null,"You can turn off this behavior globally or conditionally with the\n",(0,r.kt)("inlineCode",{parentName:"p"},"uncaught:exception")," event. Please see the\n",(0,r.kt)("a",{parentName:"p",href:"/api/cypress-api/catalog-of-events#Uncaught-Exceptions"},"Catalog of Events")," for\nexamples."),(0,r.kt)("p",null,'On a technical note, Cypress considers uncaught exceptions to be any error that\nis uncaught by your application, whether they are "standard" errors or unhandled\npromise rejections. If the error triggers the window\'s global ',(0,r.kt)("inlineCode",{parentName:"p"},"error")," handler or\nits ",(0,r.kt)("inlineCode",{parentName:"p"},"unhandledrejection")," handler, Cypress will detect it and fail the test."))}y.isMDXComponent=!0}}]);