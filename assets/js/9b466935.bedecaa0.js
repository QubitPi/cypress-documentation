"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[6718],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>c});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),o=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=o(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),m=o(a),u=l,c=m["".concat(s,".").concat(u)]||m[u]||k[u]||r;return a?n.createElement(c,i(i({ref:t},p),{},{components:a})):n.createElement(c,i({ref:t},p))}));function c(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=u;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d[m]="string"==typeof e?e:l,i[1]=d;for(var o=2;o<r;o++)i[o]=a[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6212:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>o});var n=a(7462),l=(a(7294),a(3905));const r={title:"Assertions"},i=void 0,d={unversionedId:"guides/references/assertions",id:"guides/references/assertions",title:"Assertions",description:"Cypress bundles the popular Chai assertion",source:"@site/docs/guides/references/assertions.mdx",sourceDirName:"guides/references",slug:"/guides/references/assertions",permalink:"/guides/references/assertions",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/guides/references/assertions.mdx",tags:[],version:"current",lastUpdatedAt:1717543563,formattedLastUpdatedAt:"Jun 4, 2024",frontMatter:{title:"Assertions"},sidebar:"guides",previous:{title:"Advanced Installation",permalink:"/guides/references/advanced-installation"},next:{title:"Best Practices",permalink:"/guides/references/best-practices"}},s={},o=[{value:"Chai",id:"Chai",level:2},{value:"Chai-jQuery",id:"Chai-jQuery",level:2},{value:"Sinon-Chai",id:"Sinon-Chai",level:2},{value:"Adding New Assertions",id:"Adding-New-Assertions",level:2},{value:"Common Assertions",id:"Common-Assertions",level:2},{value:"Length",id:"Length",level:3},{value:"Class",id:"Class",level:3},{value:"Value",id:"Value",level:3},{value:"Text Content",id:"Text-Content",level:3},{value:"Visibility",id:"Visibility",level:3},{value:"Existence",id:"Existence",level:3},{value:"State",id:"State",level:3},{value:"CSS",id:"CSS",level:3},{value:"Disabled property",id:"Disabled-property",level:3},{value:"Negative assertions",id:"Negative-assertions",level:2},{value:'<Icon name="exclamation-triangle" color="red"/> False passing tests',id:"False-passing-tests",level:4},{value:"Should callback",id:"Should-callback",level:2},{value:"Multiple assertions",id:"Multiple-assertions",level:2},{value:"See also",id:"See-also",level:2}],p=(m="Icon",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",e)});var m;const k={toc:o};function u(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Cypress bundles the popular ",(0,l.kt)("a",{parentName:"p",href:"/guides/references/assertions#Chai"},"Chai")," assertion\nlibrary, as well as helpful extensions for\n",(0,l.kt)("a",{parentName:"p",href:"/guides/references/assertions#Sinon-Chai"},"Sinon")," and\n",(0,l.kt)("a",{parentName:"p",href:"/guides/references/assertions#Chai-jQuery"},"jQuery"),", bringing you dozens of\npowerful assertions for free."),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("strong",null,"New to Cypress?"),(0,l.kt)("p",{parentName:"admonition"},"This document is only a reference to every assertion Cypress supports."),(0,l.kt)("p",{parentName:"admonition"},"If you're looking to understand ",(0,l.kt)("strong",{parentName:"p"},"how")," to use these assertions please read\nabout assertions in our\n",(0,l.kt)("a",{parentName:"p",href:"/guides/core-concepts/introduction-to-cypress#Assertions"},"Introduction to Cypress"),"\nguide.")),(0,l.kt)("h2",{id:"Chai"},"Chai"),(0,l.kt)(p,{name:"github",url:"https://github.com/chaijs/chai",mdxType:"Icon"}),(0,l.kt)("p",null,"These chainers are available for BDD assertions (",(0,l.kt)("inlineCode",{parentName:"p"},"expect"),"/",(0,l.kt)("inlineCode",{parentName:"p"},"should"),"). Aliases\nlisted can be used interchangeably with their original chainer. You can see the\nentire list of available BDD Chai assertions ",(0,l.kt)("a",{parentName:"p",href:"http://chaijs.com/api/bdd/"},"here"),"."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Chainer"),(0,l.kt)("th",{parentName:"tr",align:null},"Example"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"not"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('not.equal', 'Jane')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(name).to.not.equal('Jane')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"deep"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('deep.equal', { name: 'Jane' })"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(obj).to.deep.equal({ name: 'Jane' })"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"nested"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.nested.property', 'a.b[1]')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},".should('nested.include', {'a.b[1]': 'y'})"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect({a: {b: 'x'}}).to.have.nested.property('a.b')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect({a: {b: 'x'}}).to.nested.include({'a.b': 'x'})"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ordered"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.ordered.members', [1, 2])"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect([1, 2]).to.have.ordered.members([1, 2])"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect([1, 2]).not.to.have.ordered.members([2, 1])"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"any"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.any.keys', 'age')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(arr).to.have.any.keys('age')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"all"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.all.keys', 'name', 'age')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(arr).to.have.all.keys('name', 'age')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"a(",(0,l.kt)("em",{parentName:"td"},"type"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"an")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.a', 'string')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect('test').to.be.a('string')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"include(",(0,l.kt)("em",{parentName:"td"},"value"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"contain, includes, contains")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('include', 2)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect([1,2,3]).to.include(2)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ok"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('not.be.ok')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(undefined).to.not.be.ok"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.true')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(true).to.be.true"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.false')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(false).to.be.false"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"null"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.null')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(null).to.be.null"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"undefined"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.undefined')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(undefined).to.be.undefined"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"exist"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('exist')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(myVar).to.exist"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"empty"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.empty')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect([]).to.be.empty"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"arguments ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"Arguments")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.arguments')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(arguments).to.be.arguments"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"equal(",(0,l.kt)("em",{parentName:"td"},"value"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"equals, eq")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('equal', 42)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(42).to.equal(42)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"deep.equal(",(0,l.kt)("em",{parentName:"td"},"value"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('deep.equal', { name: 'Jane' })"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect({ name: 'Jane' }).to.deep.equal({ name: 'Jane' })"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"eql(",(0,l.kt)("em",{parentName:"td"},"value"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"eqls")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('eql', { name: 'Jane' })"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect({ name: 'Jane' }).to.eql({ name: 'Jane' })"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"greaterThan(",(0,l.kt)("em",{parentName:"td"},"value"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"gt, above")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.greaterThan', 5)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(10).to.be.greaterThan(5)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"least(",(0,l.kt)("em",{parentName:"td"},"value"),")",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"gte")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.at.least', 10)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(10).to.be.at.least(10)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"lessThan(",(0,l.kt)("em",{parentName:"td"},"value"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"lt, below")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.lessThan', 10)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(5).to.be.lessThan(10)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"most(",(0,l.kt)("em",{parentName:"td"},"value"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"lte")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.length.of.at.most', 4)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect('test').to.have.length.of.at.most(4)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"within(",(0,l.kt)("em",{parentName:"td"},"start"),", ",(0,l.kt)("em",{parentName:"td"},"finish"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.within', 5, 10)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(7).to.be.within(5, 10)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"instanceOf(",(0,l.kt)("em",{parentName:"td"},"constructor"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"instanceof")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.instanceOf', Array)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect([1, 2, 3]).to.be.instanceOf(Array)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"property(",(0,l.kt)("em",{parentName:"td"},"name"),", ",(0,l.kt)("em",{parentName:"td"},"[value]"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.property', 'name')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(obj).to.have.property('name')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"deep.property(",(0,l.kt)("em",{parentName:"td"},"name"),", ",(0,l.kt)("em",{parentName:"td"},"[value]"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.deep.property', 'tests[1]', 'e2e')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(deepObj).to.have.deep.property('tests[1]', 'e2e')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ownProperty(",(0,l.kt)("em",{parentName:"td"},"name"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"haveOwnProperty, own.property")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.ownProperty', 'length')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect('test').to.have.ownProperty('length')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ownPropertyDescriptor(",(0,l.kt)("em",{parentName:"td"},"name"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"haveOwnPropertyDescriptor")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.ownPropertyDescriptor', 'a')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect({a: 1}).to.have.ownPropertyDescriptor('a')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"lengthOf(",(0,l.kt)("em",{parentName:"td"},"value"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.lengthOf', 4)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect('test').to.have.lengthOf(4)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"match(",(0,l.kt)("em",{parentName:"td"},"RegExp"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"matches")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('to.match', /^test/)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect('testing').to.match(/^test/)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"string(",(0,l.kt)("em",{parentName:"td"},"string"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.string', 'test')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect('testing').to.have.string('test')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"keys(",(0,l.kt)("em",{parentName:"td"},"key1"),", ",(0,l.kt)("em",{parentName:"td"},"[key2]"),", ",(0,l.kt)("em",{parentName:"td"},"[...]"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"key")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.keys', 'pass', 'fail')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect({ pass: 1, fail: 2 }).to.have.keys('pass', 'fail')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"throw(",(0,l.kt)("em",{parentName:"td"},"constructor"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"throws, Throw")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('throw', Error)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(fn).to.throw(Error)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"respondTo(",(0,l.kt)("em",{parentName:"td"},"method"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"respondsTo")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('respondTo', 'getName')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(obj).to.respondTo('getName')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"itself"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('itself.respondTo', 'getName')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(Foo).itself.to.respondTo('bar')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"satisfy(",(0,l.kt)("em",{parentName:"td"},"method"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"satisfies")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('satisfy', (num) => num > 0)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(1).to.satisfy((num) => num > 0)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"closeTo(",(0,l.kt)("em",{parentName:"td"},"expected"),", ",(0,l.kt)("em",{parentName:"td"},"delta"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"approximately")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.closeTo', 1, 0.5)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(1.5).to.be.closeTo(1, 0.5)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"members(",(0,l.kt)("em",{parentName:"td"},"set"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('include.members', [3, 2])"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect([1, 2, 3]).to.include.members([3, 2])"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"oneOf(",(0,l.kt)("em",{parentName:"td"},"values"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.oneOf', [1, 2, 3])"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(2).to.be.oneOf([1,2,3])"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"change(",(0,l.kt)("em",{parentName:"td"},"function"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"changes")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('change', obj, 'val')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(fn).to.change(obj, 'val')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"increase(",(0,l.kt)("em",{parentName:"td"},"function"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"increases")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('increase', obj, 'val')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(fn).to.increase(obj, 'val')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"decrease(",(0,l.kt)("em",{parentName:"td"},"function"),") ",(0,l.kt)("br",null),(0,l.kt)("small",{class:"aliases"},(0,l.kt)("strong",null,"Aliases: "),"decreases")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('decrease', obj, 'val')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(fn).to.decrease(obj, 'val')"))))),(0,l.kt)("p",null,"These getters are also available for BDD assertions. They don't actually do\nanything, but they enable you to write clear, english sentences."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Chainable getters"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"to"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"be"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"been"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"is"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"that"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"which"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"and"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"has"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"have"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"with"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"at"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"of"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"same"))))),(0,l.kt)("h2",{id:"Chai-jQuery"},"Chai-jQuery"),(0,l.kt)(p,{name:"github",url:"https://github.com/chaijs/chai-jquery",mdxType:"Icon"}),(0,l.kt)("p",null,"These chainers are available when asserting about a DOM object."),(0,l.kt)("p",null,"You will commonly use these chainers after using DOM commands like:\n",(0,l.kt)("a",{parentName:"p",href:"/api/commands/get"},(0,l.kt)("inlineCode",{parentName:"a"},"cy.get()")),", ",(0,l.kt)("a",{parentName:"p",href:"/api/commands/contains"},(0,l.kt)("inlineCode",{parentName:"a"},"cy.contains()")),", etc."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Chainers"),(0,l.kt)("th",{parentName:"tr",align:null},"Assertion"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"attr(",(0,l.kt)("em",{parentName:"td"},"name"),", ",(0,l.kt)("em",{parentName:"td"},"[value]"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.attr', 'bar')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($el).to.have.attr('foo', 'bar')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"prop(",(0,l.kt)("em",{parentName:"td"},"name"),", ",(0,l.kt)("em",{parentName:"td"},"[value]"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.prop', 'disabled', false)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($el).to.have.prop('disabled', false)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"css(",(0,l.kt)("em",{parentName:"td"},"name"),", ",(0,l.kt)("em",{parentName:"td"},"[value]"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.css', 'background-color', 'rgb(0, 0, 0)')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($el).to.have.css('background-color', 'rgb(0, 0, 0)')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"data(",(0,l.kt)("em",{parentName:"td"},"name"),", ",(0,l.kt)("em",{parentName:"td"},"[value]"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.data', 'foo', 'bar')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($el).to.have.data('foo', 'bar')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"class(",(0,l.kt)("em",{parentName:"td"},"className"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.class', 'foo')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($el).to.have.class('foo')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"id(",(0,l.kt)("em",{parentName:"td"},"id"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.id', 'foo')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($el).to.have.id('foo')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"html(",(0,l.kt)("em",{parentName:"td"},"html"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.html', 'I love testing')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($el).to.have.html('with Cypress')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"text(",(0,l.kt)("em",{parentName:"td"},"text"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.text', 'I love testing')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($el).to.have.text('with Cypress')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value(",(0,l.kt)("em",{parentName:"td"},"value"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.value', 'test@dev.com')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($el).to.have.value('test@dev.com')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"visible"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.visible')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($el).to.be.visible"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"hidden"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.hidden')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($el).to.be.hidden"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"selected"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.selected')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($option).not.to.be.selected"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"checked"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.checked')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($input).not.to.be.checked"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"focus","[ed]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.focus')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($input).not.to.be.focused"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($input).to.have.focus"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"enabled"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.enabled')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($input).to.be.enabled"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"disabled"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.disabled')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($input).to.be.disabled"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"empty"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('be.empty')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($el).not.to.be.empty"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"exist"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('exist')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($nonexistent).not.to.exist"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"match(",(0,l.kt)("em",{parentName:"td"},"selector"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('match', ':empty')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($emptyEl).to.match(':empty')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"contain(",(0,l.kt)("em",{parentName:"td"},"text"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('contain', 'text')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($el).to.contain('text')"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"descendants(",(0,l.kt)("em",{parentName:"td"},"selector"),")"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.descendants', 'div')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect($el).to.have.descendants('div')"))))),(0,l.kt)("h2",{id:"Sinon-Chai"},"Sinon-Chai"),(0,l.kt)(p,{name:"github",url:"https://github.com/domenic/sinon-chai",mdxType:"Icon"}),(0,l.kt)("p",null,"These chainers are used on assertions with ",(0,l.kt)("a",{parentName:"p",href:"/api/commands/stub"},(0,l.kt)("inlineCode",{parentName:"a"},"cy.stub()"))," and\n",(0,l.kt)("a",{parentName:"p",href:"/api/commands/spy"},(0,l.kt)("inlineCode",{parentName:"a"},"cy.spy()")),"."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Sinon.JS property/method"),(0,l.kt)("th",{parentName:"tr",align:null},"Assertion"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"called"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.been.called')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.be.called"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"callCount"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.callCount', 3)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.have.callCount(n)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"calledOnce"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.been.calledOnce')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.be.calledOnce"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"calledTwice"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.been.calledTwice')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.be.calledTwice"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"calledThrice"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.been.calledThrice')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.be.calledThrice"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"calledBefore"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.been.calledBefore', spy2)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy1).to.be.calledBefore(spy2)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"calledAfter"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.been.calledAfter', spy2)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy1).to.be.calledAfter(spy2)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"calledWithNew"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.been.calledWithNew')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.be.calledWithNew"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"alwaysCalledWithNew"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.always.been.calledWithNew')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.always.be.calledWithNew"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"calledOn"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.been.calledOn', context)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.be.calledOn(context)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"alwaysCalledOn"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.always.been.calledOn', context)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.always.be.calledOn(context)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"calledWith"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.been.calledWith', ['arg1, 'arg2'])"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.be.calledWith(...args)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"alwaysCalledWith"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.always.been.calledWith', ['arg1', 'arg2'])"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.always.be.calledWith(...args)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"calledOnceWith"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.been.calledOnceWith', ['arg1', 'arg2'])"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.be.calledOnceWith(...args)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"calledWithExactly"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.been.calledWithExactly', ['arg1, 'arg2'])"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.be.calledWithExactly(...args)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"alwaysCalledWithExactly"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.always.been.calledWithExactly', ['arg1, 'arg2'])"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.always.be.calledWithExactly(...args)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"calledOnceWithExactly"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.been.calledOnceWithExactly', ['arg1, 'arg2'])"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.be.calledOnceWithExactly(...args)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"calledWithMatch"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.been.calledWithMatch', ['arg1, 'arg2'])"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.be.calledWithMatch(...args)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"alwaysCalledWithMatch"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.always.been.calledWithMatch', ['arg1, 'arg2'])"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.always.be.calledWithMatch(...args)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"returned"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.returned', 'foo')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.have.returned(returnVal)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"alwaysReturned"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.always.returned', 'foo')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.have.always.returned(returnVal)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"threw"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.thrown', TypeError)"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.have.thrown(errorObjOrErrorTypeStringOrNothing)"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"alwaysThrew"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".should('have.always.thrown', 'TypeError')"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"expect(spy).to.have.always.thrown(errorObjOrErrorTypeStringOrNothing)"))))),(0,l.kt)("h2",{id:"Adding-New-Assertions"},"Adding New Assertions"),(0,l.kt)("p",null,"Because we are using ",(0,l.kt)("inlineCode",{parentName:"p"},"chai"),', that means you can extend it however you\'d like.\nCypress will "just work" with new assertions added to ',(0,l.kt)("inlineCode",{parentName:"p"},"chai"),". You can:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Write your own ",(0,l.kt)("inlineCode",{parentName:"li"},"chai")," assertions as\n",(0,l.kt)("a",{parentName:"li",href:"http://chaijs.com/api/plugins/"},"documented here"),"."),(0,l.kt)("li",{parentName:"ul"},"npm install any existing ",(0,l.kt)("inlineCode",{parentName:"li"},"chai")," library and import into your test file or\n",(0,l.kt)("a",{parentName:"li",href:"/guides/core-concepts/writing-and-organizing-tests#Support-file"},"support file"),".")),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},(0,l.kt)("a",{parentName:"p",href:"/examples/recipes#Fundamentals"},"Check out our example recipe extending chai with new assertions."))),(0,l.kt)("h2",{id:"Common-Assertions"},"Common Assertions"),(0,l.kt)("p",null,"Here is a list of common element assertions. Notice how we use these assertions\n(listed above) with ",(0,l.kt)("a",{parentName:"p",href:"/api/commands/should"},(0,l.kt)("inlineCode",{parentName:"a"},".should()")),". You may also want to\nread about how Cypress ",(0,l.kt)("a",{parentName:"p",href:"/guides/core-concepts/retry-ability"},"retries"),"\nassertions."),(0,l.kt)("h3",{id:"Length"},"Length"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"// retry until we find 3 matching <li.selected>\ncy.get('li.selected').should('have.length', 3)\n")),(0,l.kt)("h3",{id:"Class"},"Class"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"// retry until this input does not have class disabled\ncy.get('form').find('input').should('not.have.class', 'disabled')\n")),(0,l.kt)("h3",{id:"Value"},"Value"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"// retry until this textarea has the correct value\ncy.get('textarea').should('have.value', 'foo bar baz')\n")),(0,l.kt)("h3",{id:"Text-Content"},"Text Content"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"// assert the element's text content is exactly the given text\ncy.get('[data-testid=\"user-name\"]').should('have.text', 'Joe Smith')\n// assert the element's text includes the given substring\ncy.get('[data-testid=\"address\"]').should('include.text', 'Atlanta')\n// retry until this span does not contain 'click me'\ncy.get('a').parent('span.help').should('not.contain', 'click me')\n// the element's text should start with \"Hello\"\ncy.get('[data-testid=\"greeting\"]')\n  .invoke('text')\n  .should('match', /^Hello/)\n// use cy.contains to find an element with its text\n// matching the given regular expression\ncy.contains('[data-testid=\"greeting\"]', /^Hello/)\n")),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},(0,l.kt)("strong",{parentName:"p"},"Tip:")," read about assertions against text with non-breaking space entities in\n",(0,l.kt)("a",{parentName:"p",href:"/faq/questions/using-cypress-faq#How-do-I-get-an-element-s-text-contents"},"How do I get an element's text contents?"))),(0,l.kt)("h3",{id:"Visibility"},"Visibility"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"// retry until the element with\n// data-testid \"form-submit\" is visible\ncy.get('[data-testid=\"form-submit\"]').should('be.visible')\n// retry until the list item with\n// text \"write tests\" is visible\ncy.contains('[data-testid=\"todo\"] li', 'write tests').should('be.visible')\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note:")," if there are multiple elements, the assertions ",(0,l.kt)("inlineCode",{parentName:"p"},"be.visible")," and\n",(0,l.kt)("inlineCode",{parentName:"p"},"not.be.visible")," act differently:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"// retry until SOME elements are visible\ncy.get('li').should('be.visible')\n// retry until EVERY element is invisible\ncy.get('li.hidden').should('not.be.visible')\n")),(0,l.kt)("p",null,"Watch the short video\n",(0,l.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=LxkrhUEE2Qk"},"\"Multiple elements and should('be.visible') assertion\""),"\nthat shows how to correctly check the visibility of elements."),(0,l.kt)("h3",{id:"Existence"},"Existence"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"// retry until loading spinner no longer exists\ncy.get('[data-testid=\"loading\"]').should('not.exist')\n")),(0,l.kt)("h3",{id:"State"},"State"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"// retry until our radio is checked\ncy.get(':radio').should('be.checked')\n")),(0,l.kt)("h3",{id:"CSS"},"CSS"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"// retry until element has matching css\ncy.get('[data-testid=\"completed\"]').should(\n  'have.css',\n  'text-decoration',\n  'line-through'\n)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"// retry while accordion css has the\n// \"display: none\" property\ncy.get('[data-testid=\"accordion\"]').should('not.have.css', 'display', 'none')\n")),(0,l.kt)("h3",{id:"Disabled-property"},"Disabled property"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<input type="text" data-testid="example-input" disabled />\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.get('[data-testid=\"example-input\"]')\n  .should('be.disabled')\n  // let's enable this element from the test\n  .invoke('prop', 'disabled', false)\n\ncy.get('[data-testid=\"example-input\"]')\n  // we can use \"enabled\" assertion\n  .should('be.enabled')\n  // or negate the \"disabled\" assertion\n  .and('not.be.disabled')\n")),(0,l.kt)("h2",{id:"Negative-assertions"},"Negative assertions"),(0,l.kt)("p",null,"There are positive and negative assertions. Examples of positive assertions are:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.get('[data-testid=\"todo-item\"]')\n  .should('have.length', 2)\n  .and('have.class', 'completed')\n")),(0,l.kt)("p",null,'The negative assertions have the "not" chainer prefixed to the assertion.\nExamples of negative assertions are:'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.contains('first todo').should('not.have.class', 'completed')\ncy.get('[data-testid=\"loading\"]').should('not.be.visible')\n")),(0,l.kt)("h4",{id:"False-passing-tests"},(0,l.kt)(p,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," False passing tests"),(0,l.kt)("p",null,"Negative assertions may pass for reasons you weren't expecting. Let's say we\nwant to test that a Todo list app adds a new Todo item after typing the Todo and\npressing enter."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Positive assertions")),(0,l.kt)("p",null,"When adding an element to the list and using a ",(0,l.kt)("strong",{parentName:"p"},"positive assertion"),", the test\nasserts a specific number of Todo items in our application."),(0,l.kt)("p",null,'The test below may still falsely pass if the application behaves unexpectedly,\nlike adding a blank Todo, instead of adding the new Todo with the text "Write\ntests".'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.get('[data-testid=\"todos\"]').should('have.length', 2)\ncy.get('[data-testid=\"new-todo\"]').type('Write tests{enter}')\n\n// using a positive assertion to check the\n// exact number of items\ncy.get('[data-testid=\"todos\"]').should('have.length', 3)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Negative assertions")),(0,l.kt)("p",null,"But when using a ",(0,l.kt)("strong",{parentName:"p"},"negative assertion")," in the test below, the test can falsely\npass when the application behaves in multiple unexpected ways:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The app deletes the entire list of Todo items instead of inserting the 3rd\nTodo"),(0,l.kt)("li",{parentName:"ul"},"The app deletes a Todo instead of adding a new Todo"),(0,l.kt)("li",{parentName:"ul"},"The app adds a blank Todo")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.get('[data-testid=\"todos\"]').should('have.length', 2)\ncy.get('[data-testid=\"new-todo\"]').type('Write tests{enter}')\n\n// using negative assertion to check it's\n// not a number of items\ncy.get('[data-testid=\"todos\"]').should('not.have.length', 2)\n")),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"For more examples, please read the blog post\n",(0,l.kt)("a",{parentName:"p",href:"https://glebbahmutov.com/blog/negative-assertions/"},"Be Careful With Negative Assertions"),".")),(0,l.kt)("h2",{id:"Should-callback"},"Should callback"),(0,l.kt)("p",null,"If built-in assertions are not enough, you can write your own assertion function\nand pass it as a callback to the ",(0,l.kt)("inlineCode",{parentName:"p"},".should()")," command. Cypress will automatically\n",(0,l.kt)("a",{parentName:"p",href:"/guides/core-concepts/retry-ability"},"retry")," the callback function until it\npasses or the command times out. See the\n",(0,l.kt)("a",{parentName:"p",href:"/api/commands/should#Function"},(0,l.kt)("inlineCode",{parentName:"a"},".should()"))," documentation."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<div class="main-abc123 heading-xyz987">Introduction</div>\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.get('div').should(($div) => {\n  expect($div).to.have.length(1)\n\n  const className = $div[0].className\n\n  // className will be a string like \"main-abc123 heading-xyz987\"\n  expect(className).to.match(/heading-/)\n})\n")),(0,l.kt)("h2",{id:"Multiple-assertions"},"Multiple assertions"),(0,l.kt)("p",null,"You can attach multiple assertions to the same command."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<a\n  data-testid="assertions-link"\n  class="active"\n  href="https://on.cypress.io"\n  target="_blank"\n>\n  Cypress Docs\n</a>\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"cy.get('[data-testid=\"assertions-link\"]')\n  .should('have.class', 'active')\n  .and('have.attr', 'href')\n  .and('include', 'cypress.io')\n")),(0,l.kt)("p",null,"Note that all chained assertions will use the same reference to the original\nsubject. For example, if you wanted to test a loading element that first appears\nand then disappears, the following WILL NOT WORK because the same element cannot\nbe visible and invisible at the same time:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// \u26d4\ufe0f DOES NOT WORK\ncy.get('[data-testid=\"loading\"]').should('be.visible').and('not.be.visible')\n")),(0,l.kt)("p",null,"Instead you should split the assertions and re-query the element:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// \u2705 THE CORRECT WAY\ncy.get('[data-testid=\"loading\"]').should('be.visible')\ncy.get('[data-testid=\"loading\"]').should('not.be.visible')\n")),(0,l.kt)("h2",{id:"See-also"},"See also"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/guides/core-concepts/introduction-to-cypress#Assertions"},"Guide: Introduction to Cypress")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://example.cypress.io/commands/assertions"},"cypress-example-kitchensink Assertions")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://glebbahmutov.com/blog/cypress-should-callback/"},"Cypress should callback"),"\nblog post")))}u.isMDXComponent=!0}}]);