"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[5908],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(t),g=r,f=c["".concat(l,".").concat(g)]||c[g]||d[g]||i;return t?a.createElement(f,o(o({ref:n},u),{},{components:t})):a.createElement(f,o({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=g;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[c]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},7910:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const i={title:"Plugins"},o=void 0,s={unversionedId:"guides/tooling/plugins-guide",id:"guides/tooling/plugins-guide",title:"Plugins",description:"Plugins enable you to tap into, modify, or extend the internal behavior of",source:"@site/docs/guides/tooling/plugins-guide.mdx",sourceDirName:"guides/tooling",slug:"/guides/tooling/plugins-guide",permalink:"/cypress-documentation/guides/tooling/plugins-guide",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/guides/tooling/plugins-guide.mdx",tags:[],version:"current",lastUpdatedAt:1697463939,formattedLastUpdatedAt:"Oct 16, 2023",frontMatter:{title:"Plugins"},sidebar:"guides",previous:{title:"Code Coverage",permalink:"/cypress-documentation/guides/tooling/code-coverage"},next:{title:"Reporters",permalink:"/cypress-documentation/guides/tooling/reporters"}},l={},p=[{value:"Use Cases",id:"Use-Cases",level:2},{value:"Configuration",id:"Configuration",level:3},{value:"Preprocessors",id:"Preprocessors",level:3},{value:"Run Lifecycle",id:"Run-Lifecycle",level:3},{value:"Spec Lifecycle",id:"Spec-Lifecycle",level:3},{value:"Browser Launching",id:"Browser-Launching",level:3},{value:"Screenshot handling",id:"Screenshot-handling",level:3},{value:"cy.task",id:"cytask",level:3},{value:'<Icon name="graduation-cap" /> Real World Example',id:"Real-World-Example",level:3},{value:"List of plugins",id:"List-of-plugins",level:2},{value:"Installing plugins",id:"Installing-plugins",level:2},{value:"Using a plugin",id:"Using-a-plugin",level:2}],u=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",n)},c=u("Icon"),d=u("WarningSetupNodeEvents"),g=u("CypressConfigFileTabs"),f={toc:p};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Plugins enable you to tap into, modify, or extend the internal behavior of\nCypress."),(0,r.kt)("p",null,"Normally, as a user, all of your test code, your application, and Cypress\ncommands are executed in the browser. But Cypress is also a Node process that\nplugins can use."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Plugins enable you to tap into the Node process running outside of the\nbrowser.")),(0,r.kt)("p",null,'Plugins are a "seam" for you to write your own custom code that executes during\nparticular stages of the Cypress lifecycle.'),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("strong",null,"This is a brief overview"),(0,r.kt)("p",{parentName:"admonition"},"If you want more details about how to write a plugin, we've written API docs\nthat show you how to work with each plugin event."),(0,r.kt)("p",{parentName:"admonition"},"You can ",(0,r.kt)("a",{parentName:"p",href:"/api/plugins/writing-a-plugin"},"check out the API docs here"),".")),(0,r.kt)("h2",{id:"Use-Cases"},"Use Cases"),(0,r.kt)("h3",{id:"Configuration"},"Configuration"),(0,r.kt)("p",null,"With plugins, you can programmatically alter the resolved configuration and\nenvironment variables that come from the\n",(0,r.kt)("a",{parentName:"p",href:"/guides/references/configuration"},"Cypress configuration file"),",\n",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/environment-variables#Option-2-cypress-env-json"},(0,r.kt)("inlineCode",{parentName:"a"},"cypress.env.json")),",\nthe ",(0,r.kt)("a",{parentName:"p",href:"/guides/guides/command-line"},"command line"),", or system environment\nvariables."),(0,r.kt)("p",null,"This enables you to do things like:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Use multiple environments with their own configurations"),(0,r.kt)("li",{parentName:"ul"},"Swap out environment variables based on an environment"),(0,r.kt)("li",{parentName:"ul"},"Read in configuration files using the built in ",(0,r.kt)("inlineCode",{parentName:"li"},"fs")," lib"),(0,r.kt)("li",{parentName:"ul"},"Change the list of browsers used for testing"),(0,r.kt)("li",{parentName:"ul"},"Write your configuration in ",(0,r.kt)("inlineCode",{parentName:"li"},"yml"))),(0,r.kt)("p",null,"Check out our ",(0,r.kt)("a",{parentName:"p",href:"/api/plugins/configuration-api"},"Configuration API docs")," which\ndescribe how to use this event."),(0,r.kt)("h3",{id:"Preprocessors"},"Preprocessors"),(0,r.kt)("p",null,"The event ",(0,r.kt)("inlineCode",{parentName:"p"},"file:preprocessor")," is used to customize how your test code is\ntranspiled and sent to the browser. By default, Cypress handles ES2015+,\nTypeScript, and CoffeeScript, using webpack to package it for the browser."),(0,r.kt)("p",null,"You can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"file:preprocessor")," event to do things like:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Add the latest ES","*"," support."),(0,r.kt)("li",{parentName:"ul"},"Write your test code in ClojureScript."),(0,r.kt)("li",{parentName:"ul"},"Customize the Babel settings to add your own plugins."),(0,r.kt)("li",{parentName:"ul"},"Customize the options for compiling TypeScript."),(0,r.kt)("li",{parentName:"ul"},"Swap out webpack for Browserify or anything else.")),(0,r.kt)("p",null,"Check out our ",(0,r.kt)("a",{parentName:"p",href:"/api/plugins/preprocessors-api"},"File Preprocessor API docs")," which\ndescribe how to use this event."),(0,r.kt)("h3",{id:"Run-Lifecycle"},"Run Lifecycle"),(0,r.kt)("p",null,"The events ",(0,r.kt)("a",{parentName:"p",href:"/api/plugins/before-run-api"},(0,r.kt)("inlineCode",{parentName:"a"},"before:run"))," and\n",(0,r.kt)("a",{parentName:"p",href:"/api/plugins/after-run-api"},(0,r.kt)("inlineCode",{parentName:"a"},"after:run"))," occur before and after a run,\nrespectively."),(0,r.kt)("p",null,"You can use ",(0,r.kt)("a",{parentName:"p",href:"/api/plugins/before-run-api"},(0,r.kt)("inlineCode",{parentName:"a"},"before:run"))," to do things like:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Set up reporting on a run"),(0,r.kt)("li",{parentName:"ul"},"Start a timer for the run to time how long it takes")),(0,r.kt)("p",null,"You can use ",(0,r.kt)("a",{parentName:"p",href:"/api/plugins/after-run-api"},(0,r.kt)("inlineCode",{parentName:"a"},"after:run"))," to do things like:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Finish up reporting on a run set up in ",(0,r.kt)("inlineCode",{parentName:"li"},"before:run")),(0,r.kt)("li",{parentName:"ul"},"Stop the timer for the run set up in ",(0,r.kt)("inlineCode",{parentName:"li"},"before:run"))),(0,r.kt)("h3",{id:"Spec-Lifecycle"},"Spec Lifecycle"),(0,r.kt)("p",null,"The events ",(0,r.kt)("a",{parentName:"p",href:"/api/plugins/before-spec-api"},(0,r.kt)("inlineCode",{parentName:"a"},"before:spec"))," and\n",(0,r.kt)("a",{parentName:"p",href:"/api/plugins/after-spec-api"},(0,r.kt)("inlineCode",{parentName:"a"},"after:spec"))," run before and after a single spec\nis run, respectively."),(0,r.kt)("p",null,"You can use ",(0,r.kt)("a",{parentName:"p",href:"/api/plugins/before-spec-api"},(0,r.kt)("inlineCode",{parentName:"a"},"before:spec"))," to do things like:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Set up reporting on a spec running"),(0,r.kt)("li",{parentName:"ul"},"Start a timer for the spec to time how long it takes")),(0,r.kt)("p",null,"You can use ",(0,r.kt)("a",{parentName:"p",href:"/api/plugins/after-spec-api"},(0,r.kt)("inlineCode",{parentName:"a"},"after:spec"))," to do things like:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Finish up reporting set up in ",(0,r.kt)("inlineCode",{parentName:"li"},"before:spec")),(0,r.kt)("li",{parentName:"ul"},"Stop the timer for the spec set up in ",(0,r.kt)("inlineCode",{parentName:"li"},"before:spec")),(0,r.kt)("li",{parentName:"ul"},"Delete the video recorded for the spec. This prevents it from taking time and\ncomputing resources for compressing and uploading the video. You can do this\nconditionally based on the results of the spec, such as if it passes (so\nvideos for failing tests are preserved for debugging purposes).")),(0,r.kt)("p",null,"Check out the ",(0,r.kt)("a",{parentName:"p",href:"/api/plugins/before-spec-api"},"Before Spec API doc")," and\n",(0,r.kt)("a",{parentName:"p",href:"/api/plugins/after-spec-api"},"After Spec API doc")," which describe how to use\nthese events."),(0,r.kt)("h3",{id:"Browser-Launching"},"Browser Launching"),(0,r.kt)("p",null,"The event ",(0,r.kt)("inlineCode",{parentName:"p"},"before:browser:launch")," can be used to modify the launch arguments for\neach particular browser."),(0,r.kt)("p",null,"You can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"before:browser:launch")," event to do things like:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Load a Chrome extension"),(0,r.kt)("li",{parentName:"ul"},"Enable or disable experimental chrome features"),(0,r.kt)("li",{parentName:"ul"},"Control which Chrome components are loaded")),(0,r.kt)("p",null,"Check out our ",(0,r.kt)("a",{parentName:"p",href:"/api/plugins/browser-launch-api"},"Browser Launch API docs")," which\ndescribe how to use this event."),(0,r.kt)("h3",{id:"Screenshot-handling"},"Screenshot handling"),(0,r.kt)("p",null,"The event ",(0,r.kt)("inlineCode",{parentName:"p"},"after:screenshot")," is called after a screenshot is taken and saved to\ndisk."),(0,r.kt)("p",null,"You can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"after:screenshot")," event to do things like:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Save details about the screenshot"),(0,r.kt)("li",{parentName:"ul"},"Rename the screenshot"),(0,r.kt)("li",{parentName:"ul"},"Manipulate the screenshot image by resizing or cropping it")),(0,r.kt)("p",null,"Check out our ",(0,r.kt)("a",{parentName:"p",href:"/api/plugins/after-screenshot-api"},"After Screenshot API docs"),"\nwhich describe how to use this event."),(0,r.kt)("h3",{id:"cytask"},"cy.task"),(0,r.kt)("p",null,"The event ",(0,r.kt)("inlineCode",{parentName:"p"},"task")," is used in conjunction with the\n",(0,r.kt)("a",{parentName:"p",href:"/api/commands/task"},(0,r.kt)("inlineCode",{parentName:"a"},"cy.task()"))," command. It allows you to write arbitrary code\nin Node to accomplish tasks that aren't possible in the browser."),(0,r.kt)("p",null,"You can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"task")," event to do things like:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Manipulating a database (seeding, reading, writing, etc.)"),(0,r.kt)("li",{parentName:"ul"},"Storing state in Node that you want persisted (since the driver is fully\nrefreshed on visits)"),(0,r.kt)("li",{parentName:"ul"},"Performing parallel tasks (like making multiple http requests outside of\nCypress)"),(0,r.kt)("li",{parentName:"ul"},"Running an external process (like spinning up a Webdriver instance of another\nbrowser like Safari or puppeteer)")),(0,r.kt)("h3",{id:"Real-World-Example"},(0,r.kt)(c,{name:"graduation-cap",mdxType:"Icon"})," Real World Example"),(0,r.kt)("p",null,"The ",(0,r.kt)(c,{name:"github",inline:"true",contentType:"rwa",mdxType:"Icon"})," uses\n",(0,r.kt)("a",{parentName:"p",href:"/api/commands/task"},"tasks")," to re-seed its database, and to filter/find test\ndata for various testing scenarios."),(0,r.kt)(d,{mdxType:"WarningSetupNodeEvents"}),(0,r.kt)("cypress-config-plugin-example",null,(0,r.kt)(g,{mdxType:"CypressConfigFileTabs"},(0,r.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('task', {\n        async 'db:seed'() {\n          // seed database with test data\n          const { data } = await axios.post(`${testDataApiEndpoint}/seed`)\n          return data\n        },\n\n        // fetch test data from a database (MySQL, PostgreSQL, etc...)\n        'filter:database'(queryPayload) {\n          return queryDatabase(queryPayload, (data, attrs) =>\n            _.filter(data.results, attrs)\n          )\n        },\n        'find:database'(queryPayload) {\n          return queryDatabase(queryPayload, (data, attrs) =>\n            _.find(data.results, attrs)\n          )\n        },\n      })\n    },\n  },\n})\n")),(0,r.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('task', {\n        async 'db:seed'() {\n          // seed database with test data\n          const { data } = await axios.post(`${testDataApiEndpoint}/seed`)\n          return data\n        },\n\n        // fetch test data from a database (MySQL, PostgreSQL, etc...)\n        'filter:database'(queryPayload) {\n          return queryDatabase(queryPayload, (data, attrs) =>\n            _.filter(data.results, attrs)\n          )\n        },\n        'find:database'(queryPayload) {\n          return queryDatabase(queryPayload, (data, attrs) =>\n            _.find(data.results, attrs)\n          )\n        },\n      })\n    },\n  },\n})\n")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("em",{parentName:"p"},(0,r.kt)(c,{name:"github",mdxType:"Icon"})," Source:\n",(0,r.kt)("a",{parentName:"em",href:"https://github.com/cypress-io/cypress-realworld-app/blob/develop/cypress/plugins/index.ts"},"cypress/plugins/index.ts")))),(0,r.kt)("p",null,"Check out the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress-realworld-app/tree/develop/cypress/tests/ui"},"Real World App test suites"),"\nto see these tasks in action."),(0,r.kt)("h2",{id:"List-of-plugins"},"List of plugins"),(0,r.kt)("p",null,"Cypress maintains a curated list of plugins created by us and the community. You\ncan ",(0,r.kt)("inlineCode",{parentName:"p"},"npm install")," any of the plugins listed below:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/plugins"},"Our curated list of Cypress plugins.")),(0,r.kt)("h2",{id:"Installing-plugins"},"Installing plugins"),(0,r.kt)("p",null,"Plugins from our ",(0,r.kt)("a",{parentName:"p",href:"/plugins"},"official list")," are npm modules. This enables them to\nbe versioned and updated separately without needing to update Cypress itself."),(0,r.kt)("p",null,"You can install any published plugin using NPM:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npm install <plugin name> --save-dev\n")),(0,r.kt)("h2",{id:"Using-a-plugin"},"Using a plugin"),(0,r.kt)("p",null,"There are two ways to use a plugin in Cypress:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"As of Cypress version 10.0.0, you will need to add your plugin to the\n",(0,r.kt)("a",{parentName:"li",href:"/guides/references/configuration#setupNodeEvents"},(0,r.kt)("inlineCode",{parentName:"a"},"setupNodeEvents")),"\nfunction in the ",(0,r.kt)("a",{parentName:"li",href:"/guides/references/configuration"},"Cypress configuration"),"."),(0,r.kt)("li",{parentName:"ol"},"If you're using an older version of Cypress, you can add your plugin to the\n(deprecated) ",(0,r.kt)("a",{parentName:"li",href:"/guides/references/legacy-configuration#Plugins"},"plugins file"),".")),(0,r.kt)("p",null,"Here's an example of what this might look like:"),(0,r.kt)("cypress-config-plugin-example",null,(0,r.kt)(g,{mdxType:"CypressConfigFileTabs"},(0,r.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      // bind to the event we care about\n      on('<event>', (arg1, arg2) => {\n        // plugin stuff here\n      })\n    },\n  },\n})\n")),(0,r.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      // bind to the event we care about\n      on('<event>', (arg1, arg2) => {\n        // plugin stuff here\n      })\n    },\n  },\n})\n")))),(0,r.kt)("p",null,"For information on writing plugins, please check out our\n",(0,r.kt)("a",{parentName:"p",href:"/api/plugins/writing-a-plugin"},"Writing a Plugin")," guide."))}m.isMDXComponent=!0}}]);