"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[6256],{6083:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>a});var i=n(5893),t=n(1151);const r={sidebar_label:"Feedback during local development",title:"Feedback during local development | Cypress Accessibility Documentation",description:"Get precise, fast, and scoped accessibility feedback during local development by recording Cypress tests directly to Cypress Cloud\u2014bypassing CI pipelines and ensuring accurate insights with minimal effort.",sidebar_position:50},c="Feedback during local development",o={id:"accessibility/guides/local-development",title:"Feedback during local development | Cypress Accessibility Documentation",description:"Get precise, fast, and scoped accessibility feedback during local development by recording Cypress tests directly to Cypress Cloud\u2014bypassing CI pipelines and ensuring accurate insights with minimal effort.",source:"@site/docs/accessibility/guides/local-development.mdx",sourceDirName:"accessibility/guides",slug:"/accessibility/guides/local-development",permalink:"/accessibility/guides/local-development",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/accessibility/guides/local-development.mdx",tags:[],version:"current",lastUpdatedAt:1750130633,formattedLastUpdatedAt:"Jun 17, 2025",sidebarPosition:50,frontMatter:{sidebar_label:"Feedback during local development",title:"Feedback during local development | Cypress Accessibility Documentation",description:"Get precise, fast, and scoped accessibility feedback during local development by recording Cypress tests directly to Cypress Cloud\u2014bypassing CI pipelines and ensuring accurate insights with minimal effort.",sidebar_position:50},sidebar:"accessibility",previous:{title:"Block pull requests and set policies",permalink:"/accessibility/guides/block-pull-requests"},next:{title:"Production monitoring",permalink:"/accessibility/guides/production-monitoring"}},l={},a=[{value:"Key benefits",id:"Key-benefits",level:2},{value:"Organizing Local Runs",id:"Organizing-Local-Runs",level:2}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components},{ProductHeading:n,TabItem:r,Tabs:c}=s;return n||p("ProductHeading",!0),r||p("TabItem",!0),c||p("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n,{product:"accessibility"}),"\n",(0,i.jsx)(s.h1,{id:"Feedback-during-local-development",children:"Feedback during local development"}),"\n",(0,i.jsx)(s.p,{children:"For reliable accessibility feedback during local development, the best approach is recording your tests directly to Cypress Cloud. By running tests related to your changes locally, you can bypass build pipelines and CI processes entirely. This can be achieved with a single command:"}),"\n",(0,i.jsxs)(c,{children:[(0,i.jsx)(r,{value:"npm",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-shell",children:'npx cypress run --key <record_key> --record --spec "cypress/e2e/my-spec.cy.js"\n'})})}),(0,i.jsx)(r,{value:"yarn",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-shell",children:'yarn cypress run --key <record_key> --record --spec "cypress/e2e/my-spec.cy.js"\n'})})}),(0,i.jsx)(r,{value:"pnpm",children:(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-shell",children:'pnpm cypress run --key <record_key> --record --spec "cypress/e2e/my-spec.cy.js"\n'})})})]}),"\n",(0,i.jsxs)(s.p,{children:["(You can skip the ",(0,i.jsx)(s.code,{children:"--key"})," option by setting ",(0,i.jsx)(s.code,{children:"CYPRESS_RECORD_KEY"})," as an environment variable. Learn more about recording in our ",(0,i.jsx)(s.a,{href:"/cloud/features/recorded-runs",children:"Recorded Runs documentation"}),")."]}),"\n",(0,i.jsx)(s.h2,{id:"Key-benefits",children:"Key benefits"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Accuracy:"})," See how Cypress processes your new code changes, taking into account your project's configuration, and using the Cloud's version of Axe Core\xae. There will be no violation reports for rules, pages, or elements your team has chosen to ignore, for example."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Speed:"})," With the application already built locally, tests can run immediately without requiring your build pipeline."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Scope:"})," Execute only the tests you need to focus on your changes, ensuring faster results and excluding unrelated issues."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Recording tests locally offers early feedback, helping you quickly detect if resolving one accessibility issue introduces another. This targeted testing workflow can significantly enhance development efficiency and quality."}),"\n",(0,i.jsx)(s.h2,{id:"Organizing-Local-Runs",children:"Organizing Local Runs"}),"\n",(0,i.jsx)(s.p,{children:'If your team frequently records local runs and you\'re concerned about cluttering your Cypress Cloud project, consider setting up a dedicated Cloud project for "local runs". This keeps your main project organized while supporting local testing workflows.'})]})}function u(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}function p(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,s,n)=>{n.d(s,{Z:()=>o,a:()=>c});var i=n(7294);const t={},r=i.createContext(t);function c(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);