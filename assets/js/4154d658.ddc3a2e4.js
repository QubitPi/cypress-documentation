"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[8350],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(n),m=s,u=d["".concat(l,".").concat(m)]||d[m]||h[m]||r;return n?a.createElement(u,i(i({ref:t},p),{},{components:n})):a.createElement(u,i({ref:t},p))}));function u(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,i=new Array(r);i[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[d]="string"==typeof e?e:s,i[1]=o;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8425:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var a=n(7462),s=(n(7294),n(3905));const r={title:"screenshot"},i=void 0,o={unversionedId:"api/commands/screenshot",id:"api/commands/screenshot",title:"screenshot",description:"Take a screenshot of the application under test and, optionally, the",source:"@site/docs/api/commands/screenshot.mdx",sourceDirName:"api/commands",slug:"/api/commands/screenshot",permalink:"/cypress-documentation/api/commands/screenshot",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/commands/screenshot.mdx",tags:[],version:"current",lastUpdatedAt:1702622965,formattedLastUpdatedAt:"Dec 15, 2023",frontMatter:{title:"screenshot"},sidebar:"api",previous:{title:"request",permalink:"/cypress-documentation/api/commands/request"},next:{title:"session",permalink:"/cypress-documentation/api/commands/session"}},l={},c=[{value:"Syntax",id:"Syntax",level:2},{value:"Usage",id:"Usage",level:3},{value:"Arguments",id:"Arguments",level:3},{value:'Yields <Icon name="question-circle"/>',id:"Yields",level:3},{value:"Examples",id:"Examples",level:2},{value:"No Args",id:"No-Args",level:3},{value:"Take a screenshot",id:"Take-a-screenshot",level:4},{value:"Filename",id:"Filename",level:3},{value:"Take a screenshot and save as a specific filename",id:"Take-a-screenshot-and-save-as-a-specific-filename",level:4},{value:"Take a screenshot and save in a specific directory",id:"Take-a-screenshot-and-save-in-a-specific-directory",level:4},{value:"Clip",id:"Clip",level:3},{value:"Crop a screenshot to a specific position and size",id:"Crop-a-screenshot-to-a-specific-position-and-size",level:4},{value:"Screenshot an element",id:"Screenshot-an-element",level:3},{value:"Take a screenshot of the first <code>.post</code> element",id:"Take-a-screenshot-of-the-first-post-element",level:4},{value:"Take a screenshot of the first <code>.post</code> element with 10px of padding around it",id:"Take-a-screenshot-of-the-first-post-element-with-10px-of-padding-around-it",level:4},{value:"Chain off the screenshot to click the element captured",id:"Chain-off-the-screenshot-to-click-the-element-captured",level:4},{value:"Get screenshot info from the <code>onAfterScreenshot</code> callback",id:"Get-screenshot-info-from-the-onAfterScreenshot-callback",level:3},{value:"Notes",id:"Notes",level:2},{value:"Naming conventions",id:"Naming-conventions",level:3},{value:"<code>after:screenshot</code> plugin event",id:"afterscreenshot-plugin-event",level:3},{value:"Test Failures",id:"Test-Failures",level:3},{value:"Automatic screenshots on test failure",id:"Automatic-screenshots-on-test-failure",level:4},{value:"Viewing Screenshots",id:"Viewing-Screenshots",level:3},{value:"Screenshots in CI",id:"Screenshots-in-CI",level:4},{value:"Asynchronous",id:"Asynchronous",level:3},{value:"Understanding when the screenshot is taken",id:"Understanding-when-the-screenshot-is-taken",level:4},{value:"Full page captures and fixed/sticky elements",id:"Full-page-captures-and-fixedsticky-elements",level:3},{value:"Rules",id:"Rules",level:2},{value:'Requirements <Icon name="question-circle"/>',id:"Requirements",level:3},{value:'Assertions <Icon name="question-circle"/>',id:"Assertions",level:3},{value:'Timeouts <Icon name="question-circle"/>',id:"Timeouts",level:3},{value:"Command Log",id:"Command-Log",level:2},{value:"Take a screenshot with a specific filename",id:"Take-a-screenshot-with-a-specific-filename",level:4},{value:"History",id:"History",level:2},{value:"See also",id:"See-also",level:2}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",t)},d=p("Icon"),h=p("DocsImage"),m={toc:c};function u(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Take a screenshot of the application under test and, optionally, the\n",(0,s.kt)("a",{parentName:"p",href:"/guides/core-concepts/cypress-app#Command-Log"},"Cypress Command Log"),"."),(0,s.kt)("h2",{id:"Syntax"},"Syntax"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},".screenshot()\n.screenshot(fileName)\n.screenshot(options)\n.screenshot(fileName, options)\n\n// ---or---\n\ncy.screenshot()\ncy.screenshot(fileName)\ncy.screenshot(options)\ncy.screenshot(fileName, options)\n")),(0,s.kt)("h3",{id:"Usage"},"Usage"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},(0,s.kt)(d,{name:"check-circle",color:"green",mdxType:"Icon"})," Correct Usage")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.screenshot()\ncy.get('.post').screenshot()\n")),(0,s.kt)("h3",{id:"Arguments"},"Arguments"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},(0,s.kt)(d,{name:"angle-right",mdxType:"Icon"})," fileName")," ",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("em",{parentName:"strong"},"(String)"))),(0,s.kt)("p",null,"A name for the image file. Will be relative to the\n",(0,s.kt)("a",{parentName:"p",href:"/guides/references/configuration#Folders-Files"},"screenshots folder")," and the\npath to the spec file. When passed a path, the folder structure will be created.\nSee the ",(0,s.kt)("a",{parentName:"p",href:"/api/commands/screenshot#Naming-conventions"},"Naming conventions")," below\nfor more."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},(0,s.kt)(d,{name:"angle-right",mdxType:"Icon"})," options")," ",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("em",{parentName:"strong"},"(Object)"))),(0,s.kt)("p",null,"Pass in an options object to change the default behavior of ",(0,s.kt)("inlineCode",{parentName:"p"},".screenshot()"),"."),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Option"),(0,s.kt)("th",{parentName:"tr",align:null},"Default"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"log")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"true")),(0,s.kt)("td",{parentName:"tr",align:null},"Displays the command in the ",(0,s.kt)("a",{parentName:"td",href:"/guides/core-concepts/cypress-app#Command-Log"},"Command log"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"blackout")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"[]")),(0,s.kt)("td",{parentName:"tr",align:null},"Array of string selectors used to match elements that should be blacked out when the screenshot is taken. Does not apply to ",(0,s.kt)("inlineCode",{parentName:"td"},"runner")," captures.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"capture")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"'fullPage'")),(0,s.kt)("td",{parentName:"tr",align:null},"Which parts of the Cypress Test Runner to capture. This value is ignored for element screenshot captures. Valid values are ",(0,s.kt)("inlineCode",{parentName:"td"},"viewport"),", ",(0,s.kt)("inlineCode",{parentName:"td"},"fullPage"),", or ",(0,s.kt)("inlineCode",{parentName:"td"},"runner"),". When ",(0,s.kt)("inlineCode",{parentName:"td"},"viewport"),", the application under test is captured in the current viewport. When ",(0,s.kt)("inlineCode",{parentName:"td"},"fullPage"),", the application under test is captured in its entirety from top to bottom. When ",(0,s.kt)("inlineCode",{parentName:"td"},"runner"),", the entire browser viewport, including the Cypress Command Log, is captured. For screenshots automatically taken on test failure, capture is always coerced to ",(0,s.kt)("inlineCode",{parentName:"td"},"runner"),". When ",(0,s.kt)("a",{parentName:"td",href:"/guides/cloud/test-replay"},"Test Replay")," is enabled and the Runner UI is hidden, a ",(0,s.kt)("inlineCode",{parentName:"td"},"runner")," screenshot will not include the Runner UI and will instead capture the application under test only in the current viewport.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"clip")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"null")),(0,s.kt)("td",{parentName:"tr",align:null},"Position and dimensions (in pixels) used to crop the final screenshot image. Should have the following shape: ",(0,s.kt)("inlineCode",{parentName:"td"},"{ x: 0, y: 0, width: 100, height: 100 }"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"disableTimersAndAnimations")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"true")),(0,s.kt)("td",{parentName:"tr",align:null},"When true, prevents JavaScript timers (",(0,s.kt)("inlineCode",{parentName:"td"},"setTimeout"),", ",(0,s.kt)("inlineCode",{parentName:"td"},"setInterval"),", etc) and CSS animations from running while the screenshot is taken.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"padding")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"null")),(0,s.kt)("td",{parentName:"tr",align:null},"Padding used to alter the dimensions of a screenshot of an element. It can either be a number, or an array of up to four numbers ",(0,s.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties"},"using CSS shorthand notation"),". This property is only applied for element screenshots and is ignored for all other types.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"scale")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"false")),(0,s.kt)("td",{parentName:"tr",align:null},"Whether to scale the app to fit into the browser viewport. This is always coerced to ",(0,s.kt)("inlineCode",{parentName:"td"},"true")," when ",(0,s.kt)("inlineCode",{parentName:"td"},"capture")," is ",(0,s.kt)("inlineCode",{parentName:"td"},"runner"),".")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"timeout")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/guides/references/configuration#Timeouts"},(0,s.kt)("inlineCode",{parentName:"a"},"responseTimeout"))),(0,s.kt)("td",{parentName:"tr",align:null},"Time to wait for ",(0,s.kt)("inlineCode",{parentName:"td"},".screenshot()")," to resolve before ",(0,s.kt)("a",{parentName:"td",href:"#Timeouts"},"timing out"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"overwrite")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"false")),(0,s.kt)("td",{parentName:"tr",align:null},"Whether to overwrite duplicate screenshot files with the same file name when saving.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"onBeforeScreenshot")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"null")),(0,s.kt)("td",{parentName:"tr",align:null},"A callback before a non-failure screenshot is taken. When capturing screenshots of an element, the argument is the element being captured. For other screenshots, the argument is the ",(0,s.kt)("inlineCode",{parentName:"td"},"document"),".")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"onAfterScreenshot")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"null")),(0,s.kt)("td",{parentName:"tr",align:null},"A callback after a non-failure screenshot is taken. When capturing screenshots of an element, the first argument is the element being captured. For other screenshots, the first argument is the ",(0,s.kt)("inlineCode",{parentName:"td"},"document"),". The second argument is properties concerning the screenshot, including the ",(0,s.kt)("inlineCode",{parentName:"td"},"path")," it was saved to and the ",(0,s.kt)("inlineCode",{parentName:"td"},"dimensions")," of the saved screenshot.")))),(0,s.kt)("p",null,"For more details on these options and to set some as defaults across all uses of\n",(0,s.kt)("inlineCode",{parentName:"p"},".screenshot()"),", see the\n",(0,s.kt)("a",{parentName:"p",href:"/api/cypress-api/screenshot-api"},"Cypress.Screenshot API doc"),"."),(0,s.kt)("h3",{id:"Yields"},"Yields ",(0,s.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Subject-Management"},(0,s.kt)(d,{name:"question-circle",mdxType:"Icon"}))),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},".screenshot()")," yields the same subject it was given."),(0,s.kt)("li",{parentName:"ul"},"It is ",(0,s.kt)("a",{parentName:"li",href:"/guides/core-concepts/retry-ability#Only-queries-are-retried"},"unsafe"),"\nto chain further commands that rely on the subject after ",(0,s.kt)("inlineCode",{parentName:"li"},".screenshot()"),".")),(0,s.kt)("h2",{id:"Examples"},"Examples"),(0,s.kt)("p",null,"The screenshot will be stored in the ",(0,s.kt)("inlineCode",{parentName:"p"},"cypress/screenshots")," folder by default.\nYou can change the directory where screenshots are saved in the\n",(0,s.kt)("a",{parentName:"p",href:"/guides/references/configuration#Folders-Files"},"Cypress configuration"),"."),(0,s.kt)("h3",{id:"No-Args"},"No Args"),(0,s.kt)("h4",{id:"Take-a-screenshot"},"Take a screenshot"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"// cypress/e2e/users.cy.js\n\ndescribe('my tests', () => {\n  it('takes a screenshot', () => {\n    // screenshot will be saved as\n    // cypress/screenshots/users.cy.js/my tests -- takes a screenshot.png\n    cy.screenshot()\n  })\n})\n")),(0,s.kt)("h3",{id:"Filename"},"Filename"),(0,s.kt)("h4",{id:"Take-a-screenshot-and-save-as-a-specific-filename"},"Take a screenshot and save as a specific filename"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"// screenshot will be saved as\n// cypress/screenshots/spec.cy.js/clicking-on-nav.png\ncy.screenshot('clicking-on-nav')\n")),(0,s.kt)("h4",{id:"Take-a-screenshot-and-save-in-a-specific-directory"},"Take a screenshot and save in a specific directory"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"// screenshot will be saved as\n// cypress/screenshots/spec.cy.js/actions/login/clicking-login.png\ncy.screenshot('actions/login/clicking-login')\n")),(0,s.kt)("h3",{id:"Clip"},"Clip"),(0,s.kt)("h4",{id:"Crop-a-screenshot-to-a-specific-position-and-size"},"Crop a screenshot to a specific position and size"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"// screenshot will be clipped 20px from the top and left\n// to the dimensions 400px x 300px\ncy.screenshot({ clip: { x: 20, y: 20, width: 400, height: 300 } })\n")),(0,s.kt)("h3",{id:"Screenshot-an-element"},"Screenshot an element"),(0,s.kt)("h4",{id:"Take-a-screenshot-of-the-first-post-element"},"Take a screenshot of the first ",(0,s.kt)("inlineCode",{parentName:"h4"},".post")," element"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.get('.post').first().screenshot()\n")),(0,s.kt)("h4",{id:"Take-a-screenshot-of-the-first-post-element-with-10px-of-padding-around-it"},"Take a screenshot of the first ",(0,s.kt)("inlineCode",{parentName:"h4"},".post")," element with 10px of padding around it"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.get('.post').first().screenshot({ padding: 10 })\n")),(0,s.kt)("h4",{id:"Chain-off-the-screenshot-to-click-the-element-captured"},"Chain off the screenshot to click the element captured"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.get('button').first().screenshot().click()\n")),(0,s.kt)("h3",{id:"Get-screenshot-info-from-the-onAfterScreenshot-callback"},"Get screenshot info from the ",(0,s.kt)("inlineCode",{parentName:"h3"},"onAfterScreenshot")," callback"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.screenshot('my-screenshot', {\n  onAfterScreenshot($el, props) {\n    // props has information about the screenshot,\n    // including but not limited to the following:\n    // {\n    //   name: 'my-screenshot',\n    //   path: '/Users/janelane/project/screenshots/spec.cy.js/my-screenshot.png',\n    //   size: '15 kb',\n    //   dimensions: {\n    //     width: 1000,\n    //     height: 660,\n    //   },\n    //   scaled: true,\n    //   blackout: [],\n    //   duration: 2300,\n    // }\n  },\n})\n")),(0,s.kt)("h2",{id:"Notes"},"Notes"),(0,s.kt)("h3",{id:"Naming-conventions"},"Naming conventions"),(0,s.kt)("p",null,"Screenshot naming follows these rules:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Screenshots are saved inside the\n",(0,s.kt)("a",{parentName:"li",href:"/guides/core-concepts/writing-and-organizing-tests#Asset-File-Paths"},"screenshots folder"),".\nInside that folder, the screenshot is saved inside a folder structure relative\nto the path of the spec file, which is adjusted to remove any common ancestor\npaths shared with all other spec files. Inside this folder, the screenshot\nwill be saved with the test name:\n",(0,s.kt)("inlineCode",{parentName:"li"},"{screenshotsFolder}/{adjustedSpecPath}/{testName}.png")),(0,s.kt)("li",{parentName:"ul"},"For a named screenshot, the name is used instead of the suites and test name:\n",(0,s.kt)("inlineCode",{parentName:"li"},"{screenshotsFolder}/{adjustedSpecPath}/{name}.png")),(0,s.kt)("li",{parentName:"ul"},"For any duplicate screenshots (named or not), they will be appended with a\nnumber: ",(0,s.kt)("inlineCode",{parentName:"li"},"{screenshotsFolder}/{adjustedSpecPath}/{testName} (1).png"),".")),(0,s.kt)("admonition",{type:"info"},(0,s.kt)("p",{parentName:"admonition"},"This behavior can be changed by passing the ",(0,s.kt)("inlineCode",{parentName:"p"},"{overwrite: true}")," option to\n",(0,s.kt)("inlineCode",{parentName:"p"},"cy.screenshot()")," to explicitly overwrite duplicate screenshots.")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"For a failure screenshot, the default naming scheme is used and the name is\nappended with ",(0,s.kt)("inlineCode",{parentName:"li"}," (failed)"),":",(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"{screenshotsFolder}/{adjustedSpecPath}/{testName} (failed).png\n")))),(0,s.kt)("p",null,"For example, given a spec file located at ",(0,s.kt)("inlineCode",{parentName:"p"},"cypress/e2e/users/login.cy.js"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"describe('my tests', () => {\n  it('takes a screenshot', () => {\n    // NOTE: This file has multiple screenshots\n    // each screenshot has a common ancestor path of `/users/`.\n    // In this scenario `/users/` is stripped from the path.\n    // cypress/screenshots/login.cy.js/my tests -- takes a screenshot.png\n    cy.screenshot()\n    // cypress/screenshots/login.cy.js/my tests -- takes a screenshot (1).png\n    cy.screenshot()\n    // cypress/screenshots/login.cy.js/my tests -- takes a screenshot (2).png\n    cy.screenshot()\n\n    // cypress/screenshots/login.cy.js/my-screenshot.png\n    cy.screenshot('my-screenshot')\n    // cypress/screenshots/login.cy.js/my-screenshot (1).png\n    cy.screenshot('my-screenshot')\n    // cypress/screenshots/login.cy.js/my/nested/screenshot.png\n    cy.screenshot('my/nested/screenshot')\n\n    // if this test fails, the screenshot will be saved to\n    // cypress/screenshots/login.cy.js/my tests -- takes a screenshot (failed).png\n  })\n})\n")),(0,s.kt)("admonition",{type:"info"},(0,s.kt)("p",{parentName:"admonition"},"To learn more about how to write and organize tests and how assets are saved,\nsee\n",(0,s.kt)("a",{parentName:"p",href:"/guides/core-concepts/writing-and-organizing-tests#Asset-Files"},"Writing And Organizing Tests"))),(0,s.kt)("h3",{id:"afterscreenshot-plugin-event"},(0,s.kt)("inlineCode",{parentName:"h3"},"after:screenshot")," plugin event"),(0,s.kt)("p",null,"You can get details about any given screenshot and manipulate it after it has\nbeen written to disk with the\n",(0,s.kt)("a",{parentName:"p",href:"/api/plugins/after-screenshot-api"},(0,s.kt)("inlineCode",{parentName:"a"},"after:screenshot")," plugin event"),"."),(0,s.kt)("h3",{id:"Test-Failures"},"Test Failures"),(0,s.kt)("h4",{id:"Automatic-screenshots-on-test-failure"},"Automatic screenshots on test failure"),(0,s.kt)("p",null,"When running through ",(0,s.kt)("inlineCode",{parentName:"p"},"cypress run")," or in\n",(0,s.kt)("a",{parentName:"p",href:"/guides/continuous-integration/introduction"},"Continuous Integration"),", Cypress\nautomatically takes a screenshot when a test fails. You can optionally turn this\noff by setting ",(0,s.kt)("inlineCode",{parentName:"p"},"screenshotOnRunFailure")," to ",(0,s.kt)("inlineCode",{parentName:"p"},"false")," within your\n",(0,s.kt)("a",{parentName:"p",href:"/guides/references/configuration#Screenshots"},(0,s.kt)("inlineCode",{parentName:"a"},"screenshotOnRunFailure"))," or\n",(0,s.kt)("a",{parentName:"p",href:"/api/cypress-api/screenshot-api"},"Cypress.Screenshot.defaults()"),"."),(0,s.kt)("h3",{id:"Viewing-Screenshots"},"Viewing Screenshots"),(0,s.kt)("h4",{id:"Screenshots-in-CI"},"Screenshots in CI"),(0,s.kt)("p",null,"You can see screenshots taken during a CI run in\n",(0,s.kt)("a",{parentName:"p",href:"https://on.cypress.io/cloud"},"Cypress Cloud")," without any extra work."),(0,s.kt)("p",null,"Alternatively, to see screenshots in your Continuous Integration UI, most CI\nproviders document a way to export the screenshots as artifacts and to make them\navailable. Please see their appropriate documentation."),(0,s.kt)("h3",{id:"Asynchronous"},"Asynchronous"),(0,s.kt)("h4",{id:"Understanding-when-the-screenshot-is-taken"},"Understanding when the screenshot is taken"),(0,s.kt)("p",null,"Taking a screenshot is an asynchronous action that takes around ",(0,s.kt)("inlineCode",{parentName:"p"},"100ms")," to\ncomplete. By the time the screenshot is taken, ",(0,s.kt)("em",{parentName:"p"},"it is possible something in your\napplication may have changed"),". It is important to realize that the screenshot\nmay not reflect what your application looked like 100% when the command was\nissued."),(0,s.kt)("p",null,"For example - say a command we wrote timed out:\n",(0,s.kt)("a",{parentName:"p",href:"/api/commands/get"},(0,s.kt)("inlineCode",{parentName:"a"},"cy.get('#element')")),". This causes your test to fail.\nCypress then automatically takes a screenshot when the test fails, but it is\npossible something in your application changed within this ",(0,s.kt)("inlineCode",{parentName:"p"},"100ms")," timeframe.\nHypothetically, your app could render the element you were originally expecting\nto be present. When this happens, the screenshot may provide confusing results.\nIt is unlikely, but theoretically possible."),(0,s.kt)("p",null,"Another potential problem to be aware of is that our own Command Log is using\nReact under the hood and only rendering asynchronously during an animation\nframe. It is possible you will see screenshots taken before our Command Log is\ndone rendering. This means you may not see the ",(0,s.kt)("strong",{parentName:"p"},"error displayed")," in the\nscreenshot. But this is also why we allow taking a video - to show you the\ncomplete failure."),(0,s.kt)("p",null,"We make our best effort to synchronize taking a screenshot with our renderer,\nbut the current state of your application under test could have changed in the\nmeantime and not be an accurate representation of what you want to capture."),(0,s.kt)("h3",{id:"Full-page-captures-and-fixedsticky-elements"},"Full page captures and fixed/sticky elements"),(0,s.kt)("p",null,"When passing ",(0,s.kt)("inlineCode",{parentName:"p"},"fullPage")," to the ",(0,s.kt)("inlineCode",{parentName:"p"},"capture")," option, Cypress scrolls the application\nunder test from top to bottom, takes screenshots at each point and stitches them\ntogether. Due to this, elements that are ",(0,s.kt)("inlineCode",{parentName:"p"},"position: fixed")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"position: sticky"),"\nwill appear multiple times in the final screenshot. To prevent this, in most\ncases you can programmatically change the element to be ",(0,s.kt)("inlineCode",{parentName:"p"},"position: absolute"),"\nbefore the screenshot and change it back afterwards like shown below:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.get('.sticky-header').invoke('css', 'position', 'absolute')\ncy.screenshot()\ncy.get('.sticky-header').invoke('css', 'position', null)\n")),(0,s.kt)("h2",{id:"Rules"},"Rules"),(0,s.kt)("h3",{id:"Requirements"},"Requirements ",(0,s.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Chains-of-Commands"},(0,s.kt)(d,{name:"question-circle",mdxType:"Icon"}))),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"cy.screenshot()")," can be chained off of ",(0,s.kt)("inlineCode",{parentName:"li"},"cy")," or off a command that yields a\nsingle DOM element.")),(0,s.kt)("h3",{id:"Assertions"},"Assertions ",(0,s.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Assertions"},(0,s.kt)(d,{name:"question-circle",mdxType:"Icon"}))),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"cy.screenshot()")," will only run assertions you have chained once, and will not\n",(0,s.kt)("a",{parentName:"li",href:"/guides/core-concepts/retry-ability"},"retry"),".")),(0,s.kt)("h3",{id:"Timeouts"},"Timeouts ",(0,s.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Timeouts"},(0,s.kt)(d,{name:"question-circle",mdxType:"Icon"}))),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"cy.screenshot()")," should never time out.")),(0,s.kt)("admonition",{type:"caution"},(0,s.kt)("p",{parentName:"admonition"},"Because ",(0,s.kt)("inlineCode",{parentName:"p"},"cy.screenshot()")," is asynchronous it is technically possible for there\nto be a timeout while talking to the internal Cypress automation APIs. But for\npractical purposes it should never happen.")),(0,s.kt)("h2",{id:"Command-Log"},"Command Log"),(0,s.kt)("h4",{id:"Take-a-screenshot-with-a-specific-filename"},"Take a screenshot with a specific filename"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.screenshot('my-image')\n")),(0,s.kt)("p",null,"The commands above will display in the Command Log as:"),(0,s.kt)(h,{src:"/img/api/screenshot/command-log-shows-name-of-screenshot-taken.png",alt:"Command Log screenshot",mdxType:"DocsImage"}),(0,s.kt)("p",null,"When clicking on ",(0,s.kt)("inlineCode",{parentName:"p"},"screenshot")," within the command log, the console outputs the\nfollowing:"),(0,s.kt)(h,{src:"/img/api/screenshot/console-logs-exactly-where-screenshot-was-saved-in-file-system.png",alt:"Console Log screenshot",mdxType:"DocsImage"}),(0,s.kt)("h2",{id:"History"},"History"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Version"),(0,s.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"/guides/references/changelog#3-5-0"},"3.5.0")),(0,s.kt)("td",{parentName:"tr",align:null},"Added support for option ",(0,s.kt)("inlineCode",{parentName:"td"},"padding"),".")))),(0,s.kt)("h2",{id:"See-also"},"See also"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/api/plugins/after-screenshot-api"},"After Screenshot API")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/api/cypress-api/screenshot-api"},(0,s.kt)("inlineCode",{parentName:"a"},"Cypress.Screenshot"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/api/commands/debug"},(0,s.kt)("inlineCode",{parentName:"a"},"cy.debug()"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/api/commands/pause"},(0,s.kt)("inlineCode",{parentName:"a"},".pause()"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/guides/cloud/introduction"},"Cypress Cloud")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/guides/cloud/test-replay"},"Test Replay")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/guides/guides/screenshots-and-videos"},"Screenshots and Videos")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/guides/tooling/visual-testing"},"Visual Testing"))))}u.isMDXComponent=!0}}]);