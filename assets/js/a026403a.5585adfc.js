"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[3704],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,i=e.originalType,l=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),m=p(n),u=s,g=m["".concat(l,".").concat(u)]||m[u]||d[u]||i;return n?a.createElement(g,o(o({ref:t},c),{},{components:n})):a.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=n.length,o=new Array(i);o[0]=u;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r[m]="string"==typeof e?e:s,o[1]=r;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3578:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>y,frontMatter:()=>i,metadata:()=>r,toc:()=>p});var a=n(7462),s=(n(7294),n(3905));const i={title:"Visual Testing"},o=void 0,r={unversionedId:"guides/tooling/visual-testing",id:"guides/tooling/visual-testing",title:"Visual Testing",description:"What you'll learn",source:"@site/docs/guides/tooling/visual-testing.mdx",sourceDirName:"guides/tooling",slug:"/guides/tooling/visual-testing",permalink:"/cypress-documentation/guides/tooling/visual-testing",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/guides/tooling/visual-testing.mdx",tags:[],version:"current",lastUpdatedAt:1702621628,formattedLastUpdatedAt:"Dec 15, 2023",frontMatter:{title:"Visual Testing"},sidebar:"guides",previous:{title:"TypeScript",permalink:"/cypress-documentation/guides/tooling/typescript-support"},next:{title:"Advanced Installation",permalink:"/cypress-documentation/guides/references/advanced-installation"}},l={},p=[{value:"Functional vs. visual testing",id:"Functional-vs-visual-testing",level:2},{value:"Tooling",id:"Tooling",level:2},{value:"Open source",id:"Open-source",level:3},{value:"Applitools",id:"Applitools",level:3},{value:"Percy",id:"Percy",level:3},{value:"Happo",id:"Happo",level:3},{value:"Do It Yourself",id:"Do-It-Yourself",level:3},{value:"Best practices",id:"Best-practices",level:2},{value:"Recognize the need for visual testing",id:"Recognize-the-need-for-visual-testing",level:3},{value:"DOM state",id:"DOM-state",level:3},{value:"Timestamps",id:"Timestamps",level:3},{value:"Application state",id:"Application-state",level:3},{value:"Visual diff elements",id:"Visual-diff-elements",level:3},{value:"Component testing",id:"Component-testing",level:3},{value:"See also",id:"See-also",level:2}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",t)},m=c("Icon"),d=c("E2EOrCtTabs"),u=c("DocsImage"),g=c("DocsVideo"),h=c("Badge"),k={toc:p};function y(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("admonition",{type:"info"},(0,s.kt)("h2",{parentName:"admonition",id:"What-youll-learn"},(0,s.kt)(m,{name:"graduation-cap",mdxType:"Icon"})," What you'll learn"),(0,s.kt)("ul",{parentName:"admonition"},(0,s.kt)("li",{parentName:"ul"},"How visual testing complements functional testing"),(0,s.kt)("li",{parentName:"ul"},"How to implement visual diffing yourself or using 3rd party service"),(0,s.kt)("li",{parentName:"ul"},"How to ensure the application is in consistent state before capturing an image"))),(0,s.kt)("h2",{id:"Functional-vs-visual-testing"},"Functional vs. visual testing"),(0,s.kt)("p",null,"Cypress is a ",(0,s.kt)("em",{parentName:"p"},"functional")," test runner. It drives the web application the way a\nuser would, and checks if the app ",(0,s.kt)("em",{parentName:"p"},"functions"),' as expected: if the expected\nmessage appears, an element is removed, or a CSS class is added after the\nappropriate user action. A typical Cypress test, for example, can check if a\ntoggled "Todo" item gets a class of "completed" after the ',(0,s.kt)("inlineCode",{parentName:"p"},".toggle")," is checked:"),(0,s.kt)("visit-mount-example",null,(0,s.kt)(d,{mdxType:"E2EOrCtTabs"},(0,s.kt)("pre",{parentName:"visit-mount-example"},(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"it('completes todo', () => {\n  cy.visit('/') // opens TodoMVC running at \"baseUrl\"\n  cy.get('.new-todo').type('write tests{enter}')\n  cy.contains('.todo-list li', 'write tests').find('.toggle').check()\n\n  cy.contains('.todo-list li', 'write tests').should('have.class', 'completed')\n})\n")),(0,s.kt)("pre",{parentName:"visit-mount-example"},(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"it('completes todo', () => {\n  cy.mount(<Todos />)\n  cy.get('.new-todo').type('write tests{enter}')\n  cy.contains('.todo-list li', 'write tests').find('.toggle').check()\n\n  cy.contains('.todo-list li', 'write tests').should('have.class', 'completed')\n})\n")))),(0,s.kt)(u,{src:"/img/guides/visual-testing/completed-test.gif",alt:"Passing Cypress functional test",mdxType:"DocsImage"}),(0,s.kt)("p",null,"Cypress does NOT see how the page actually looks though. For example, Cypress\nwill not see if the CSS class ",(0,s.kt)("inlineCode",{parentName:"p"},"completed")," grays out the label element and adds a\nstrike-through line."),(0,s.kt)(u,{src:"/img/guides/visual-testing/completed-item.png",alt:"Completed item style",mdxType:"DocsImage"}),(0,s.kt)("p",null,"You could technically write a functional test asserting the CSS properties using\nthe ",(0,s.kt)("a",{parentName:"p",href:"/guides/references/assertions#CSS"},(0,s.kt)("inlineCode",{parentName:"a"},"have.css")," assertion"),", but these may\nquickly become cumbersome to write and maintain, especially when visual styles\nrely on a lot of CSS styles."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"cy.get('.completed').should('have.css', 'text-decoration', 'line-through')\ncy.get('.completed').should('have.css', 'color', 'rgb(217,217,217)')\n")),(0,s.kt)("p",null,"Your visual styles may also rely on more than CSS, perhaps you want to ensure an\nSVG or image has rendered correctly or shapes were correctly drawn to a canvas."),(0,s.kt)("p",null,"Luckily, Cypress gives a stable platform for\n",(0,s.kt)("a",{parentName:"p",href:"/guides/tooling/plugins-guide"},"writing plugins")," that ",(0,s.kt)("em",{parentName:"p"},"can perform visual\ntesting"),"."),(0,s.kt)("p",null,"Typically such plugins take an image snapshot of the entire application under\ntest or a specific element, and then compare the image to a previously approved\nbaseline image. If the images are the same (within a set pixel tolerance), it is\ndetermined that the web application looks the same to the user. If there are\ndifferences, then there has been some change to the DOM layout, fonts, colors or\nother visual properties that needs to be investigated."),(0,s.kt)("p",null,"For example, one can use the\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/meinaart/cypress-plugin-snapshots"},"cypress-plugin-snapshots"),"\nplugin and catch the following visual regression:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-css"},".todo-list li.completed label {\n  color: #d9d9d9;\n  /* removed the line-through */\n}\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"it('completes todo', () => {\n  cy.visit('/')\n  cy.get('.new-todo').type('write tests{enter}')\n  cy.contains('.todo-list li', 'write tests').find('.toggle').check()\n\n  cy.contains('.todo-list li', 'write tests').should('have.class', 'completed')\n\n  // run 'npm i cypress-plugin-snapshots -S'\n  // capture the element screenshot and\n  // compare to the baseline image\n  cy.get('.todoapp').toMatchImageSnapshot({\n    imageConfig: {\n      threshold: 0.001,\n    },\n  })\n})\n")),(0,s.kt)("p",null,"This open source plugin compares the baseline and the current images side by\nside if pixel difference is above the threshold; notice how the baseline image\n(",(0,s.kt)("em",{parentName:"p"},"Expected result"),") has the label text with the line through, while the new\nimage (",(0,s.kt)("em",{parentName:"p"},"Actual result"),") does not have it."),(0,s.kt)(u,{src:"/img/guides/visual-testing/diff.png",alt:"Baseline vs current image",mdxType:"DocsImage"}),(0,s.kt)("p",null,"Like most image comparison tools, the plugin also shows a difference view on\nmouse hover:"),(0,s.kt)(u,{src:"/img/guides/visual-testing/diff-2.png",alt:"Highlighted changes",mdxType:"DocsImage"}),(0,s.kt)("h2",{id:"Tooling"},"Tooling"),(0,s.kt)("p",null,"There are several published, open source plugins, listed in the\n",(0,s.kt)("a",{parentName:"p",href:"/plugins#visual-testing"},"Visual Testing plugins")," section, and several\ncommercial companies have developed visual testing solutions on top of Cypress\nlisted below."),(0,s.kt)("h3",{id:"Open-source"},"Open source"),(0,s.kt)("p",null,"Listed in the ",(0,s.kt)("a",{parentName:"p",href:"/plugins#visual-testing"},"Visual Testing plugins")," section."),(0,s.kt)("h3",{id:"Applitools"},"Applitools"),(0,s.kt)("p",null,"First joint webinar with Applitools"),(0,s.kt)(g,{src:"https://youtube.com/embed/qVRjhABuyG0",mdxType:"DocsVideo"}),(0,s.kt)("p",null,"Second joint webinar with Applitools with a focus on\n",(0,s.kt)("a",{parentName:"p",href:"/guides/core-concepts/testing-types#What-is-Component-Testing"},"Component Testing")),(0,s.kt)(g,{src:"https://youtube.com/embed/Bxh_ebMk1aM",mdxType:"DocsVideo"}),(0,s.kt)(m,{name:"external-link-alt",url:"https://applitools.com/",mdxType:"Icon"}),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Resource"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://applitools.com/cypress"},"Official docs")),(0,s.kt)("td",{parentName:"tr",align:null},"Applitools' Cypress documentation")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://applitools.com/tutorials/cypress.html"},"Tutorial")),(0,s.kt)("td",{parentName:"tr",align:null},"Applitools' Cypress tutorial")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://applitools.com/blog/cypress-applitools-end-to-end-testing"},"Webinar")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("em",{parentName:"td"},"Creating a Flawless User Experience, End-to-End, Functional to Visual \u2013 Practical Hands-on Session"),", a webinar recorded together with Cypress and Applitools")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://glebbahmutov.com/blog/testing-a-chart/"},"Blog")),(0,s.kt)("td",{parentName:"tr",align:null},"Testing a chart with Cypress and Applitools")))),(0,s.kt)("h3",{id:"Percy"},"Percy"),(0,s.kt)(g,{src:"https://youtube.com/embed/MXfZeE9RQDw",mdxType:"DocsVideo"}),(0,s.kt)(m,{name:"external-link-alt",url:"https://percy.io/",mdxType:"Icon"}),(0,s.kt)("admonition",{type:"info"},(0,s.kt)("h3",{parentName:"admonition",id:"Real-World-Example-New"},(0,s.kt)(m,{name:"graduation-cap",mdxType:"Icon"})," Real World Example ",(0,s.kt)(h,{type:"success",mdxType:"Badge"},"New")),(0,s.kt)("p",{parentName:"admonition"},"The Cypress ",(0,s.kt)(m,{name:"github",inline:"true",contentType:"rwa",mdxType:"Icon"})," uses the\n",(0,s.kt)("inlineCode",{parentName:"p"},"cy.percySnapshot()")," command provided by the\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/percy/percy-cypress"},"Cypress Percy plugin")," to take visual\nsnapshots throughout the user journey end-to-end tests"),(0,s.kt)("p",{parentName:"admonition"},"Check out the\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress-realworld-app/tree/develop/cypress/tests/ui"},"Real World App test suites"),"\nto see these Percy and Cypress in action.")),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Resource"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://docs.percy.io/docs/cypress"},"Official docs")),(0,s.kt)("td",{parentName:"tr",align:null},"Percy's Cypress documentation")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://docs.percy.io/docs/cypress-tutorial"},"Tutorial")),(0,s.kt)("td",{parentName:"tr",align:null},"Percy's Cypress tutorial")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://www.youtube.com/watch?v=MXfZeE9RQDw"},"Webinar")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("em",{parentName:"td"},"Cypress + Percy = End-to-end functional and visual testing for the web"),", a webinar recorded together with Cypress and Percy.io")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://www.cypress.io/blog/2019/04/19/webinar-recording-cypress-io-percy-end-to-end-functional-and-visual-testing-for-the-web/"},"Blog")),(0,s.kt)("td",{parentName:"tr",align:null},"The companion blog for the Cypress + Percy webinar")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://slides.com/bahmutov/visual-testing-with-percy"},"Slides")),(0,s.kt)("td",{parentName:"tr",align:null},"The companion slides for the Cypress + Percy webinar")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://glebbahmutov.com/blog/testing-visually/"},"Blog")),(0,s.kt)("td",{parentName:"tr",align:null},"Testing how an application renders a drawing with Cypress and Percy")))),(0,s.kt)("h3",{id:"Happo"},"Happo"),(0,s.kt)(g,{src:"https://youtube.com/embed/C_p12IvN5HU",mdxType:"DocsVideo"}),(0,s.kt)(m,{name:"external-link-alt",url:"https://happo.io/",mdxType:"Icon"}),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Resource"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://docs.happo.io/docs/cypress"},"Official docs")),(0,s.kt)("td",{parentName:"tr",align:null},"Happo's Cypress documentation")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://www.youtube.com/watch?v=C_p12IvN5HU"},"Webinar")),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("em",{parentName:"td"},"Keep your UI Sharp: Ensuring Functional and Visual Quality with Cypress.io + Happo.io"),", a webinar recorded together with Cypress and Happo")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://www.cypress.io/blog/2020/05/27/webcast-recording-keep-your-ui-sharp/"},"Blog")),(0,s.kt)("td",{parentName:"tr",align:null},"The companion blog for the Cypress + Happo webinar")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"https://cypress.slides.com/cypress-io/cypress-and-happo"},"Slides")),(0,s.kt)("td",{parentName:"tr",align:null},"The companion slides for the Cypress + Happo webinar")))),(0,s.kt)("h3",{id:"Do-It-Yourself"},"Do It Yourself"),(0,s.kt)("p",null,"Even if you decide to skip using a 3rd party image storage and comparison\nservice, you can still perform visual testing. Follow these examples"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://medium.com/norwich-node-user-group/visual-regression-testing-with-cypress-io-and-cypress-image-snapshot-99c520ccc595"},"Visual Regression testing with Cypress and cypress-image-snapshot"),"\ntutorial."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://glebbahmutov.com/blog/open-source-visual-testing-of-components/"},"Visual testing for React components using open source tools"),"\nwith companion\n",(0,s.kt)("a",{parentName:"li",href:"https://www.youtube.com/playlist?list=PLP9o9QNnQuAYhotnIDEUQNXuvXL7ZmlyZ"},"videos"),".")),(0,s.kt)("admonition",{type:"caution"},(0,s.kt)("p",{parentName:"admonition"},"You will want to consider the development costs of implementing a visual testing\ntool yourself versus using an external 3rd party provider. Storing, reviewing\nand analyzing image differences are non-trivial tasks and they can quickly\nbecome a chore when going with a DIY solution.")),(0,s.kt)("h2",{id:"Best-practices"},"Best practices"),(0,s.kt)("p",null,"As a general rule there are some best practices when visual testing."),(0,s.kt)("h3",{id:"Recognize-the-need-for-visual-testing"},"Recognize the need for visual testing"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},(0,s.kt)(m,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Assertions that verify style\nproperties")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"cy.get('.completed').should('have.css', 'text-decoration', 'line-through')\n  .and('have.css', 'color', 'rgb(217,217,217)')\ncy.get('.user-info').should('have.css', 'display', 'none')\n...\n")),(0,s.kt)("p",null,"If your end-to-end tests become full of assertions checking visibility, color\nand other style properties, it might be time to start using visual diffing to\nverify the page appearance."),(0,s.kt)("h3",{id:"DOM-state"},"DOM state"),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"\xa0",(0,s.kt)(m,{name:"check-circle",color:"green",mdxType:"Icon"})," ",(0,s.kt)("strong",{parentName:"p"},"Best Practice:")," Take a\nsnapshot after you confirm the page is done changing.")),(0,s.kt)("p",null,"For example, if the snapshot command is ",(0,s.kt)("inlineCode",{parentName:"p"},"cy.mySnapshotCommand"),":"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},(0,s.kt)(m,{name:"exclamation-triangle",color:"red",mdxType:"Icon"})," Incorrect Usage")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"// the web application takes time to add the new item,\n// sometimes it takes the snapshot BEFORE the new item appears\ncy.get('.new-todo').type('write tests{enter}')\ncy.mySnapshotCommand()\n")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},(0,s.kt)(m,{name:"check-circle",color:"green",mdxType:"Icon"})," Correct Usage")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"// use a functional assertion to ensure\n// the web application has re-rendered the page\ncy.get('.new-todo').type('write tests{enter}')\ncy.contains('.todo-list li', 'write tests')\n// great, the new item is displayed,\n// now we can take the snapshot\ncy.mySnapshotCommand()\n")),(0,s.kt)("h3",{id:"Timestamps"},"Timestamps"),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"\xa0",(0,s.kt)(m,{name:"check-circle",color:"green",mdxType:"Icon"})," ",(0,s.kt)("strong",{parentName:"p"},"Best Practice:")," Control the\ntimestamp inside the application under test.")),(0,s.kt)("p",null,"Below we freeze the operating system's time to ",(0,s.kt)("inlineCode",{parentName:"p"},"Jan 1, 2018")," using\n",(0,s.kt)("a",{parentName:"p",href:"/api/commands/clock"},"cy.clock()")," to ensure all images displaying dates and\ntimes match."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"const now = new Date(2018, 1, 1)\n\ncy.clock(now)\n// ... test\ncy.mySnapshotCommand()\n")),(0,s.kt)("h3",{id:"Application-state"},"Application state"),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"\xa0",(0,s.kt)(m,{name:"check-circle",color:"green",mdxType:"Icon"})," ",(0,s.kt)("strong",{parentName:"p"},"Best Practice:")," Use\n",(0,s.kt)("a",{parentName:"p",href:"/api/commands/fixture"},"cy.fixture()")," and network mocking to set the application state.")),(0,s.kt)("p",null,"Below we stub network calls using ",(0,s.kt)("a",{parentName:"p",href:"/api/commands/intercept"},"cy.intercept()")," to\nreturn the same response data for each XHR request. This ensures that the data\ndisplayed in our application images does not change."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"cy.intercept('/api/items', { fixture: 'items' }).as('getItems')\n// ... action\ncy.wait('@getItems')\ncy.mySnapshotCommand()\n")),(0,s.kt)("h3",{id:"Visual-diff-elements"},"Visual diff elements"),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"\xa0",(0,s.kt)(m,{name:"check-circle",color:"green",mdxType:"Icon"})," ",(0,s.kt)("strong",{parentName:"p"},"Best Practice:")," Use visual\ndiffing to check individual DOM elements rather than the entire page.")),(0,s.kt)("p",null,'Targeting specific DOM element will help avoid visual changes from component "X"\nbreaking tests in other unrelated components.'),(0,s.kt)("h3",{id:"Component-testing"},"Component testing"),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"\xa0",(0,s.kt)(m,{name:"check-circle",color:"green",mdxType:"Icon"})," ",(0,s.kt)("strong",{parentName:"p"},"Best Practice:")," Use\n",(0,s.kt)("a",{parentName:"p",href:"/guides/component-testing/overview"},"Component Testing")," to test the individual components\nfunctionality in addition to end-to-end and visual tests.")),(0,s.kt)("p",null,"If you are working on React components, read\n",(0,s.kt)("a",{parentName:"p",href:"https://glebbahmutov.com/blog/open-source-visual-testing-of-components/"},"Visual testing for React components using open source tools"),",\nbrowse ",(0,s.kt)("a",{parentName:"p",href:"https://slides.com/bahmutov/i-see-what-is-going-on"},"slides"),", and watch\nthe\n",(0,s.kt)("a",{parentName:"p",href:"https://www.youtube.com/playlist?list=PLP9o9QNnQuAYhotnIDEUQNXuvXL7ZmlyZ"},"companion videos"),"."),(0,s.kt)("h2",{id:"See-also"},"See also"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/api/plugins/after-screenshot-api"},"After Screenshot API")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/api/commands/screenshot"},"cy.screenshot()")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/api/cypress-api/screenshot-api"},"Cypress.Screenshot")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/guides/tooling/plugins-guide"},"Plugins")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/plugins#visual-testing"},"Visual Testing Plugins")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/api/plugins/writing-a-plugin"},"Writing a Plugin")),(0,s.kt)("li",{parentName:"ul"},"\xa0",(0,s.kt)(m,{name:"github",contentType:"rwa",mdxType:"Icon"})," is a full stack example\napplication that demonstrates ",(0,s.kt)("strong",{parentName:"li"},"best practices and scalable strategies with\nCypress in practical and realistic scenarios"),"."),(0,s.kt)("li",{parentName:"ul"},"Read the blog post\n",(0,s.kt)("a",{parentName:"li",href:"https://www.cypress.io/blog/2020/10/02/debug-a-flaky-visual-regression-test/"},"Debug a Flaky Visual Regression Test")),(0,s.kt)("li",{parentName:"ul"},"Read the blog post\n",(0,s.kt)("a",{parentName:"li",href:"https://glebbahmutov.com/blog/canvas-testing/"},"Canvas Visual Testing with Retries"))))}y.isMDXComponent=!0}}]);