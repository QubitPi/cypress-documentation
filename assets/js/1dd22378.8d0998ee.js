"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[4183],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=o,h=m["".concat(l,".").concat(u)]||m[u]||c[u]||r;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3681:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>k,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const r={title:"window",slug:"/api/commands/window"},i=void 0,s={unversionedId:"api/queries/window",id:"api/queries/window",title:"window",description:"Get the window object of the page that is currently active.",source:"@site/docs/api/queries/window.mdx",sourceDirName:"api/queries",slug:"/api/commands/window",permalink:"/api/commands/window",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/queries/window.mdx",tags:[],version:"current",lastUpdatedAt:1717543563,formattedLastUpdatedAt:"Jun 4, 2024",frontMatter:{title:"window",slug:"/api/commands/window"},sidebar:"api",previous:{title:"url",permalink:"/api/commands/url"},next:{title:"Assertions Reference",permalink:"/api/assertions/assertions-reference"}},l={},p=[{value:"Syntax",id:"Syntax",level:2},{value:"Usage",id:"Usage",level:3},{value:"Arguments",id:"Arguments",level:3},{value:'Yields <Icon name="question-circle"/>',id:"Yields",level:3},{value:"Examples",id:"Examples",level:2},{value:"No Args",id:"No-Args",level:3},{value:"Yield the remote window object",id:"Yield-the-remote-window-object",level:4},{value:"Check a custom property",id:"Check-a-custom-property",level:4},{value:"Start tests when app is ready",id:"Start-tests-when-app-is-ready",level:3},{value:"Options",id:"Options",level:3},{value:"Passes timeout through to <code>.should()</code> assertion",id:"Passes-timeout-through-to-should-assertion",level:4},{value:"Notes",id:"Notes",level:2},{value:"Cypress uses 2 different windows.",id:"Cypress-uses-2-different-windows",level:3},{value:"Rules",id:"Rules",level:2},{value:'Requirements <Icon name="question-circle"/>',id:"Requirements",level:3},{value:'Assertions <Icon name="question-circle"/>',id:"Assertions",level:3},{value:'Timeouts <Icon name="question-circle"/>',id:"Timeouts",level:3},{value:"Command Log",id:"Command-Log",level:2},{value:"History",id:"History",level:2},{value:"See also",id:"See-also",level:2}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},m=d("Icon"),c=d("E2EOrCtTabs"),u=d("DocsImage"),h={toc:p};function k(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Get the ",(0,o.kt)("inlineCode",{parentName:"p"},"window")," object of the page that is currently active."),(0,o.kt)("h2",{id:"Syntax"},"Syntax"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.window()\ncy.window(options)\n")),(0,o.kt)("h3",{id:"Usage"},"Usage"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)(m,{name:"check-circle",color:"green",mdxType:"Icon"})," Correct Usage")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.window()\n")),(0,o.kt)("h3",{id:"Arguments"},"Arguments"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)(m,{name:"angle-right",mdxType:"Icon"})," options")," ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"(Object)"))),(0,o.kt)("p",null,"Pass in an options object to change the default behavior of ",(0,o.kt)("inlineCode",{parentName:"p"},"cy.window()"),"."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Option"),(0,o.kt)("th",{parentName:"tr",align:null},"Default"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"log")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"true")),(0,o.kt)("td",{parentName:"tr",align:null},"Displays the command in the ",(0,o.kt)("a",{parentName:"td",href:"/guides/core-concepts/cypress-app#Command-Log"},"Command log"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"timeout")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/guides/references/configuration#Timeouts"},(0,o.kt)("inlineCode",{parentName:"a"},"defaultCommandTimeout"))),(0,o.kt)("td",{parentName:"tr",align:null},"Time to wait for ",(0,o.kt)("inlineCode",{parentName:"td"},"cy.window()")," to resolve before ",(0,o.kt)("a",{parentName:"td",href:"#Timeouts"},"timing out"))))),(0,o.kt)("h3",{id:"Yields"},"Yields ",(0,o.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Subject-Management"},(0,o.kt)(m,{name:"question-circle",mdxType:"Icon"}))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cy.window()")," yields the ",(0,o.kt)("inlineCode",{parentName:"li"},"window")," object."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cy.window()")," is a query, and it is ",(0,o.kt)("em",{parentName:"li"},"safe")," to chain further commands.")),(0,o.kt)("h2",{id:"Examples"},"Examples"),(0,o.kt)("h3",{id:"No-Args"},"No Args"),(0,o.kt)("h4",{id:"Yield-the-remote-window-object"},"Yield the remote window object"),(0,o.kt)("visit-mount-example",null,(0,o.kt)(c,{mdxType:"E2EOrCtTabs"},(0,o.kt)("pre",{parentName:"visit-mount-example"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"cy.visit('http://localhost:8080/app')\ncy.window().then((win) => {\n  // win is the remote window\n})\n")),(0,o.kt)("pre",{parentName:"visit-mount-example"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"cy.mount(<MyComponent />)\ncy.window().then((win) => {\n  // win is the remote window\n})\n")))),(0,o.kt)("h4",{id:"Check-a-custom-property"},"Check a custom property"),(0,o.kt)("p",null,"If the application sets a custom property, like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"window.tags = {\n  foo: 'bar',\n}\n")),(0,o.kt)("p",null,"Our test can confirm the property was properly set."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.window().its('tags.foo').should('equal', 'bar')\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:")," Cypress commands are asynchronous, so you cannot check a property\nvalue before the Cypress commands ran."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"it('equals bar', () => {\n  let foo\n\n  cy.window().then((win) => {\n    foo = win.tags.foo\n  })\n\n  // variable \"foo\" is still undefined\n  // because the above \"then\" callback\n  // has not been executed yet\n  expect(foo).to.equal('bar') // test fails\n})\n")),(0,o.kt)("p",null,"Instead, use ",(0,o.kt)("a",{parentName:"p",href:"/api/commands/then"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.then()"))," callback to check the value."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"it('equals bar', () => {\n  let foo\n\n  cy.window()\n    .then((win) => {\n      foo = win.tags.foo\n    })\n    .then(() => {\n      // variable \"foo\" has been set\n      expect(foo).to.equal('bar') // test passes\n    })\n})\n")),(0,o.kt)("h3",{id:"Start-tests-when-app-is-ready"},"Start tests when app is ready"),(0,o.kt)("p",null,'If an application takes a while to start, it might "signal" its readiness by\nsetting a property that Cypress can wait for.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'// app.js\n// only set property "appReady" if Cypress is running tests\nif (window.Cypress) {\n  window.appReady = true\n}\n')),(0,o.kt)("p",null,"Cypress can wait for the property ",(0,o.kt)("inlineCode",{parentName:"p"},"window.appReady")," to be ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," before every\ntest"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// spec.cy.js\nbeforeEach(() => {\n  cy.visit('/')\n  cy.window().should('have.property', 'appReady', true)\n})\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("strong",null,"When Can The Test Start?"),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{parentName:"p",href:"https://www.cypress.io/blog/2018/02/05/when-can-the-test-start/"},"This blog post"),"\nexplains how to use ",(0,o.kt)("inlineCode",{parentName:"p"},"cy.window()")," to spy on the DOM ",(0,o.kt)("inlineCode",{parentName:"p"},"prototype")," to detect when\nthe application starts adding event listeners to the DOM elements. When this\nhappens for the first time, Cypress knows that the application under test has\nstarted and the tests can begin."),(0,o.kt)("p",{parentName:"admonition"},"See\n",(0,o.kt)("a",{parentName:"p",href:"https://glebbahmutov.com/blog/set-flag-to-start-tests/"},"Set flag to start tests"),"\nfor more examples.")),(0,o.kt)("h3",{id:"Options"},"Options"),(0,o.kt)("h4",{id:"Passes-timeout-through-to-should-assertion"},"Passes timeout through to ",(0,o.kt)("a",{parentName:"h4",href:"/api/commands/should"},(0,o.kt)("inlineCode",{parentName:"a"},".should()"))," assertion"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.window({ timeout: 10000 }).should('have.property', 'foo')\n")),(0,o.kt)("h2",{id:"Notes"},"Notes"),(0,o.kt)("h3",{id:"Cypress-uses-2-different-windows"},"Cypress uses 2 different windows."),(0,o.kt)("p",null,"Let's say you want to check the type of the events. You might write code like\nbelow:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"it('test', (done) => {\n  cy.get('#test-input').then((jQueryElement) => {\n    let elemHtml = jQueryElement.get(0)\n\n    elemHtml.addEventListener('keydown', (event) => {\n      expect(event instanceof KeyboardEvent).to.be.true\n      done()\n    })\n  })\n\n  cy.get('#test-input').type('A')\n})\n")),(0,o.kt)("p",null,"It fails. But the interesting thing is that the type of ",(0,o.kt)("inlineCode",{parentName:"p"},"event")," is\n",(0,o.kt)("inlineCode",{parentName:"p"},"KeyboardEvent")," when you ",(0,o.kt)("inlineCode",{parentName:"p"},"console.log(event)"),"."),(0,o.kt)("p",null,"It's because Cypress uses an ",(0,o.kt)("inlineCode",{parentName:"p"},"iframe")," to load the application under test. In\nother words, the ",(0,o.kt)("inlineCode",{parentName:"p"},"KeyboardEvent")," used in the the code above and the\n",(0,o.kt)("inlineCode",{parentName:"p"},"KeyboardEvent")," class from which the ",(0,o.kt)("inlineCode",{parentName:"p"},"event")," variable is constructed are\ndifferent ",(0,o.kt)("inlineCode",{parentName:"p"},"KeyboardEvent"),"s."),(0,o.kt)("p",null,"That's why the test should be written like this."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"it('should trigger KeyboardEvent with .type inside Cypress event listener', (done) => {\n  cy.window().then((win) => {\n    cy.get('#test-input').then((jQueryElement) => {\n      let elemHtml = jQueryElement.get(0)\n\n      elemHtml.addEventListener('keydown', (event) => {\n        expect(event instanceof win['KeyboardEvent']).to.be.true\n        done()\n      })\n    })\n  })\n\n  cy.get('#test-input').type('A')\n})\n")),(0,o.kt)("h2",{id:"Rules"},"Rules"),(0,o.kt)("h3",{id:"Requirements"},"Requirements ",(0,o.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Chains-of-Commands"},(0,o.kt)(m,{name:"question-circle",mdxType:"Icon"}))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cy.window()")," requires being chained off of ",(0,o.kt)("inlineCode",{parentName:"li"},"cy"),".")),(0,o.kt)("h3",{id:"Assertions"},"Assertions ",(0,o.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Assertions"},(0,o.kt)(m,{name:"question-circle",mdxType:"Icon"}))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cy.window()")," will automatically ",(0,o.kt)("a",{parentName:"li",href:"/guides/core-concepts/retry-ability"},"retry"),"\nuntil all chained assertions have passed")),(0,o.kt)("h3",{id:"Timeouts"},"Timeouts ",(0,o.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Timeouts"},(0,o.kt)(m,{name:"question-circle",mdxType:"Icon"}))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cy.window()")," can time out waiting for assertions you've added to pass.")),(0,o.kt)("h2",{id:"Command-Log"},"Command Log"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"Get the window"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.window()\n")),(0,o.kt)("p",null,"The commands above will display in the Command Log as:"),(0,o.kt)(u,{src:"/img/api/window/window-command-log-for-cypress-tests.png",alt:"Command Log window",mdxType:"DocsImage"}),(0,o.kt)("p",null,"When clicking on ",(0,o.kt)("inlineCode",{parentName:"p"},"window")," within the command log, the console outputs the\nfollowing:"),(0,o.kt)(u,{src:"/img/api/window/console-shows-the-applications-window-object-being-tested.png",alt:"Console Log window",mdxType:"DocsImage"}),(0,o.kt)("h2",{id:"History"},"History"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Version"),(0,o.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/guides/references/changelog#0-20-0"},"0.20.0")),(0,o.kt)("td",{parentName:"tr",align:null},"Can call ",(0,o.kt)("a",{parentName:"td",href:"/api/commands/focus"},".focus()")," and ",(0,o.kt)("a",{parentName:"td",href:"/api/commands/blur"},".blur()")," on ",(0,o.kt)("inlineCode",{parentName:"td"},"cy.window()"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/guides/references/changelog#0-11-6"},"0.11.6")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"cy.window()")," logs to Command Log")))),(0,o.kt)("h2",{id:"See-also"},"See also"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/api/commands/visit"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.visit()"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/api/commands/document"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.document()"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/api/commands/its"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.its()"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/bahmutov/test-todomvc-using-app-actions#intellisense"},"Adding custom properties to the global ",(0,o.kt)("inlineCode",{parentName:"a"},"window")," with the right TypeScript type")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://glebbahmutov.com/blog/set-flag-to-start-tests/"},"Set flag to start tests"))))}k.isMDXComponent=!0}}]);