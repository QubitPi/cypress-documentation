"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[2085],{5837:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>t,metadata:()=>a,toc:()=>l});var i=n(5893),r=n(1151);const t={title:"Cypress.Promise | Cypress Documentation",description:"Cypress automatically includes Bluebird and exposes it as Cypress.Promise.",sidebar_label:"Cypress.Promise"},o="Cypress.Promise",a={id:"api/utilities/promise",title:"Cypress.Promise | Cypress Documentation",description:"Cypress automatically includes Bluebird and exposes it as Cypress.Promise.",source:"@site/docs/api/utilities/promise.mdx",sourceDirName:"api/utilities",slug:"/api/utilities/promise",permalink:"/api/utilities/promise",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/utilities/promise.mdx",tags:[],version:"current",lastUpdatedAt:1746793276,formattedLastUpdatedAt:"May 9, 2025",frontMatter:{title:"Cypress.Promise | Cypress Documentation",description:"Cypress automatically includes Bluebird and exposes it as Cypress.Promise.",sidebar_label:"Cypress.Promise"},sidebar:"api",previous:{title:"Cypress.minimatch",permalink:"/api/utilities/minimatch"},next:{title:"Cypress.sinon",permalink:"/api/utilities/sinon"}},c={},l=[{value:"Syntax",id:"Syntax",level:2},{value:"Usage",id:"Usage",level:3},{value:"Examples",id:"Examples",level:2},{value:"Basic Promise",id:"Basic-Promise",level:3},{value:"Waiting for Promises",id:"Waiting-for-Promises",level:3},{value:"Notes",id:"Notes",level:2},{value:"Rejected test promises do not fail tests",id:"Rejected-test-promises-do-not-fail-tests",level:3},{value:"See also",id:"See-also",level:2}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components},{Icon:n,ProductHeading:t}=s;return n||u("Icon",!0),t||u("ProductHeading",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t,{product:"app"}),"\n",(0,i.jsx)(s.h1,{id:"CypressPromise",children:"Cypress.Promise"}),"\n",(0,i.jsxs)(s.p,{children:["Cypress automatically includes\n",(0,i.jsx)(s.a,{href:"https://github.com/petkaantonov/bluebird",children:"Bluebird"})," and exposes it as\n",(0,i.jsx)(s.code,{children:"Cypress.Promise"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"Instantiate a new bluebird promise."}),"\n",(0,i.jsx)(s.h2,{id:"Syntax",children:"Syntax"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:"new Cypress.Promise(fn)\n"})}),"\n",(0,i.jsx)(s.h3,{id:"Usage",children:"Usage"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(n,{name:"check-circle",color:"green"})," ",(0,i.jsx)(s.strong,{children:"Correct Usage"})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:"new Cypress.Promise((resolve, reject) => { ... })\n"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(n,{name:"exclamation-triangle",color:"red"})," ",(0,i.jsx)(s.strong,{children:"Incorrect Usage"})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:"new cy.Promise(...)  // Errors, cannot be chained off 'cy'\n"})}),"\n",(0,i.jsx)(s.h2,{id:"Examples",children:"Examples"}),"\n",(0,i.jsxs)(s.p,{children:["Use ",(0,i.jsx)(s.code,{children:"Cypress.Promise"})," to create promises. Cypress is promise aware so if you\nreturn a promise from inside of commands like ",(0,i.jsx)(s.a,{href:"/api/commands/then",children:(0,i.jsx)(s.code,{children:".then()"})}),",\nCypress will not continue until those promises resolve."]}),"\n",(0,i.jsx)(s.h3,{id:"Basic-Promise",children:"Basic Promise"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:"cy.get('button').then(($button) => {\n  return new Cypress.Promise((resolve, reject) => {\n    // do something custom here\n  })\n})\n"})}),"\n",(0,i.jsx)(s.h3,{id:"Waiting-for-Promises",children:"Waiting for Promises"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:"it('waits for promises to resolve', () => {\n  let waited = false\n\n  function waitOneSecond() {\n    // return a promise that resolves after 1 second\n    return new Cypress.Promise((resolve, reject) => {\n      setTimeout(() => {\n        // set waited to true\n        waited = true\n\n        // resolve with 'foo' string\n        resolve('foo')\n      }, 1000)\n    })\n  }\n\n  cy.wrap(null).then(() => {\n    // return a promise to cy.then() that\n    // is awaited until it resolves\n    return waitOneSecond().then((str) => {\n      expect(str).to.eq('foo')\n      expect(waited).to.be.true\n    })\n  })\n})\n"})}),"\n",(0,i.jsx)(s.h2,{id:"Notes",children:"Notes"}),"\n",(0,i.jsx)(s.h3,{id:"Rejected-test-promises-do-not-fail-tests",children:"Rejected test promises do not fail tests"}),"\n",(0,i.jsx)(s.p,{children:"If the test code has an unhandled rejected promise, it does not automatically\nfail the test. If you do want to fail the test if there is an unhandled rejected\npromise in the test code you have to do one of two things:"}),"\n",(0,i.jsxs)(s.p,{children:["If you use ",(0,i.jsx)(s.code,{children:"Cypress.Promise"})," in your test code, register a callback using\nBluebird's API"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:"Cypress.Promise.onPossiblyUnhandledRejection((error, promise) => {\n  throw error\n})\n"})}),"\n",(0,i.jsxs)(s.p,{children:["If you use native built-in promises in your test code, register an event\nlistener on the test ",(0,i.jsx)(s.code,{children:"window"})," object:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-javascript",children:"window.addEventListener('unhandledrejection', (event) => {\n  throw event.reason\n})\n"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Note:"})," because this is the test ",(0,i.jsx)(s.code,{children:"window"})," object, such listeners are NOT reset\nbefore every test. You can register such listeners once using the ",(0,i.jsx)(s.code,{children:"before"})," hook\nin the spec file."]}),"\n",(0,i.jsx)(s.h2,{id:"See-also",children:"See also"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"/app/references/bundled-libraries",children:"Bundled Libraries"})}),"\n",(0,i.jsxs)(s.li,{children:["The recipe ",(0,i.jsx)(s.a,{href:"/app/references/recipes#Fundamentals",children:"Handling errors"})]}),"\n"]})]})}function p(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}function u(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},1151:(e,s,n)=>{n.d(s,{Z:()=>a,a:()=>o});var i=n(7294);const r={},t=i.createContext(r);function o(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);