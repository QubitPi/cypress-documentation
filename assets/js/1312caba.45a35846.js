"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[9941],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),l=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(p.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(t),m=o,d=u["".concat(p,".").concat(m)]||u[m]||f[m]||i;return t?r.createElement(d,a(a({ref:n},c),{},{components:t})):r.createElement(d,a({ref:n},c))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4732:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=t(7462),o=(t(7294),t(3905));const i={},a=void 0,s={unversionedId:"partials/component-testing-config",id:"partials/component-testing-config",title:"component-testing-config",description:"Component Testing Config",source:"@site/docs/partials/component-testing-config.md",sourceDirName:"partials",slug:"/partials/component-testing-config",permalink:"/cypress-documentation/partials/component-testing-config",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/partials/component-testing-config.md",tags:[],version:"current",frontMatter:{}},p={},l=[{value:"Component Testing Config",id:"Component-Testing-Config",level:2},{value:"Custom Dev Server",id:"Custom-Dev-Server",level:3},{value:"Custom Index File",id:"Custom-Index-File",level:3},{value:"Spec Pattern for Component Tests",id:"Spec-Pattern-for-Component-Tests",level:3},{value:"Additional Config",id:"Additional-Config",level:3}],c={toc:l};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"Component-Testing-Config"},"Component Testing Config"),(0,o.kt)("p",null,"Below are a few additional configuration values that are specific to component\ntesting."),(0,o.kt)("h3",{id:"Custom-Dev-Server"},"Custom Dev Server"),(0,o.kt)("p",null,"A custom function can be passed into the ",(0,o.kt)("inlineCode",{parentName:"p"},"devServer")," option, which allows the\nuse of other dev servers not provided by Cypress out of the box. These can be\nfrom the Cypress community, preview builds not included with the app, or a\ncustom one you create."),(0,o.kt)("p",null,"The function's signature takes in a\n",(0,o.kt)("a",{parentName:"p",href:"/guides/references/configuration"},"Cypress Configuration")," object as its only\nparameter and returns either an instance of a ",(0,o.kt)("inlineCode",{parentName:"p"},"devServer")," or a promise that\nresolves to a ",(0,o.kt)("inlineCode",{parentName:"p"},"devServer")," instance."),(0,o.kt)("cypress-config-file",null,(0,o.kt)("template",{js:!0},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  component: {\n    devServer(cypressConfig) {\n      // return devServer instance or a promise that resolves to\n      // a dev server here\n      return {\n        port: 1234,\n        close: () => {},\n      }\n    },\n  },\n})\n"))),(0,o.kt)("template",{ts:!0},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  component: {\n    devServer(cypressConfig: CypressConfiguration) {\n      // return devServer instance or a promise that resolves to\n      // a dev server here\n      return {\n        port: 1234,\n        close: () => {},\n      }\n    },\n  },\n})\n")))),(0,o.kt)("h3",{id:"Custom-Index-File"},"Custom Index File"),(0,o.kt)("p",null,"By default, Cypress renders your components into an HTML file located at\n",(0,o.kt)("inlineCode",{parentName:"p"},"cypress/support/component-index.html"),"."),(0,o.kt)("p",null,"The index file allows you to add in global assets, such as styles, fonts, and\nexternal scripts."),(0,o.kt)("p",null,"You can provide an alternative path to the file using the ",(0,o.kt)("inlineCode",{parentName:"p"},"indexHtmlFile")," option\nin the ",(0,o.kt)("a",{parentName:"p",href:"/guides/references/configuration#component"},"component config")," options:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n  component: {\n    devServer,\n    indexHtmlFile: '/custom/path/to/component-index.html'\n  }\n}\n")),(0,o.kt)("h3",{id:"Spec-Pattern-for-Component-Tests"},"Spec Pattern for Component Tests"),(0,o.kt)("p",null,"By default, Cypress looks for spec files anywhere in your project with an\nextension of ",(0,o.kt)("inlineCode",{parentName:"p"},".cy.js"),", ",(0,o.kt)("inlineCode",{parentName:"p"},".cy.jsx"),", ",(0,o.kt)("inlineCode",{parentName:"p"},".cy.ts"),", or ",(0,o.kt)("inlineCode",{parentName:"p"},".cy.tsx"),". However, you can\nchange this behavior for component tests with a custom ",(0,o.kt)("inlineCode",{parentName:"p"},"specPattern")," value. In\nthe following example, we've configured Cypress to look for spec files with\nthose same extensions, but only in the ",(0,o.kt)("inlineCode",{parentName:"p"},"src")," folder or any of its\nsubdirectories."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n  component: {\n    specPattern: 'src/**/*.cy.{js,jsx,ts,tsx}'\n  }\n}\n")),(0,o.kt)("h3",{id:"Additional-Config"},"Additional Config"),(0,o.kt)("p",null,"For more information on all the available configuration options, see the\n",(0,o.kt)("a",{parentName:"p",href:"/guides/references/configuration"},"configuration reference"),"."))}u.isMDXComponent=!0}}]);