"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[6147],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),h=o,m=c["".concat(l,".").concat(h)]||c[h]||d[h]||s;return n?a.createElement(m,r(r({ref:t},u),{},{components:n})):a.createElement(m,r({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,r=new Array(s);r[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:o,r[1]=i;for(var p=2;p<s;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},3743:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),o=n(7294),s=n(6668);function r(e){const t=e.map((e=>({...e,parentIndex:-1,children:[]}))),n=Array(7).fill(-1);t.forEach(((e,t)=>{const a=n.slice(2,e.level);e.parentIndex=Math.max(...a),n[e.level]=t}));const a=[];return t.forEach((e=>{const{parentIndex:n,...o}=e;n>=0?t[n].children.push(o):a.push(o)})),a}function i(e){let{toc:t,minHeadingLevel:n,maxHeadingLevel:a}=e;return t.flatMap((e=>{const t=i({toc:e.children,minHeadingLevel:n,maxHeadingLevel:a});return function(e){return e.level>=n&&e.level<=a}(e)?[{...e,children:t}]:t}))}function l(e){const t=e.getBoundingClientRect();return t.top===t.bottom?l(e.parentNode):t}function p(e,t){let{anchorTopOffset:n}=t;const a=e.find((e=>l(e).top>=n));if(a){return function(e){return e.top>0&&e.bottom<window.innerHeight/2}(l(a))?a:e[e.indexOf(a)-1]??null}return e[e.length-1]??null}function u(){const e=(0,o.useRef)(0),{navbar:{hideOnScroll:t}}=(0,s.L)();return(0,o.useEffect)((()=>{e.current=t?0:document.querySelector(".navbar").clientHeight}),[t]),e}function c(e){const t=(0,o.useRef)(void 0),n=u();(0,o.useEffect)((()=>{if(!e)return()=>{};const{linkClassName:a,linkActiveClassName:o,minHeadingLevel:s,maxHeadingLevel:r}=e;function i(){const e=function(e){return Array.from(document.getElementsByClassName(e))}(a),i=function(e){let{minHeadingLevel:t,maxHeadingLevel:n}=e;const a=[];for(let o=t;o<=n;o+=1)a.push(`h${o}.anchor`);return Array.from(document.querySelectorAll(a.join()))}({minHeadingLevel:s,maxHeadingLevel:r}),l=p(i,{anchorTopOffset:n.current}),u=e.find((e=>l&&l.id===function(e){return decodeURIComponent(e.href.substring(e.href.indexOf("#")+1))}(e)));e.forEach((e=>{!function(e,n){n?(t.current&&t.current!==e&&t.current.classList.remove(o),e.classList.add(o),t.current=e):e.classList.remove(o)}(e,e===u)}))}return document.addEventListener("scroll",i),document.addEventListener("resize",i),i(),()=>{document.removeEventListener("scroll",i),document.removeEventListener("resize",i)}}),[e,n])}function d(e){let{toc:t,className:n,linkClassName:a,isChild:s}=e;return t.length?o.createElement("ul",{className:s?void 0:n},t.map((e=>o.createElement("li",{key:e.id},o.createElement("a",{href:`#${e.id}`,className:a??void 0,dangerouslySetInnerHTML:{__html:e.value}}),o.createElement(d,{isChild:!0,toc:e.children,className:n,linkClassName:a}))))):null}const h=o.memo(d);function m(e){let{toc:t,className:n="table-of-contents table-of-contents__left-border",linkClassName:l="table-of-contents__link",linkActiveClassName:p,minHeadingLevel:u,maxHeadingLevel:d,...m}=e;const y=(0,s.L)(),g=u??y.tableOfContents.minHeadingLevel,f=d??y.tableOfContents.maxHeadingLevel,k=function(e){let{toc:t,minHeadingLevel:n,maxHeadingLevel:a}=e;return(0,o.useMemo)((()=>i({toc:r(t),minHeadingLevel:n,maxHeadingLevel:a})),[t,n,a])}({toc:t,minHeadingLevel:g,maxHeadingLevel:f});return c((0,o.useMemo)((()=>{if(l&&p)return{linkClassName:l,linkActiveClassName:p,minHeadingLevel:g,maxHeadingLevel:f}}),[l,p,g,f])),o.createElement(h,(0,a.Z)({toc:k,className:n,linkClassName:l},m))}},9784:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),o=n(3743);const s="tableOfContentsInline_prmo";function r(e){let{toc:t,minHeadingLevel:n,maxHeadingLevel:r}=e;return a.createElement("div",{className:s},a.createElement(o.Z,{toc:t,minHeadingLevel:n,maxHeadingLevel:r,className:"table-of-contents",linkClassName:null}))}function i(e){return a.createElement("div",{className:"inlineTOC"},a.createElement(r,e))}},3549:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>y,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var a=n(7462),o=(n(7294),n(3905)),s=n(9784);const r={title:"General Questions",hide_table_of_contents:!0,sidebar_position:20},i=void 0,l={unversionedId:"faq/questions/general-questions-faq",id:"faq/questions/general-questions-faq",title:"General Questions",description:"General Cypress Questions",source:"@site/docs/faq/questions/general-questions-faq.mdx",sourceDirName:"faq/questions",slug:"/faq/questions/general-questions-faq",permalink:"/cypress-documentation/faq/questions/general-questions-faq",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/faq/questions/general-questions-faq.mdx",tags:[],version:"current",lastUpdatedAt:1702622965,formattedLastUpdatedAt:"Dec 15, 2023",sidebarPosition:20,frontMatter:{title:"General Questions",hide_table_of_contents:!0,sidebar_position:20},sidebar:"faq",previous:{title:"Using Cypress",permalink:"/cypress-documentation/faq/questions/using-cypress-faq"},next:{title:"Cypress Cloud",permalink:"/cypress-documentation/faq/questions/cloud-faq"}},p={},u=[{value:"General Cypress Questions",id:"General-Cypress-Questions",level:2},{value:'<Icon name="angle-right" /> Is Cypress free and open source?',id:"Is-Cypress-free-and-open-source",level:3},{value:'<Icon name="angle-right" /> What operating systems do you support?',id:"What-operating-systems-do-you-support",level:3},{value:'<Icon name="angle-right" /> Do you support native mobile apps?',id:"Do-you-support-native-mobile-apps",level:3},{value:'<Icon name="angle-right" /> How is this different from &#39;X&#39; testing tool?',id:"How-is-this-different-from-X-testing-tool",level:3},{value:"Mocha",id:"Mocha",level:4},{value:"Karma",id:"Karma",level:4},{value:"Capybara",id:"Capybara",level:4},{value:"Protractor",id:"Protractor",level:4},{value:'<Icon name="angle-right" /> Do you support X language or X framework?',id:"Do-you-support-X-language-or-X-framework",level:3},{value:'<Icon name="angle-right" /> Can I run Cypress on another browser other than Chrome?',id:"Can-I-run-Cypress-on-another-browser-other-than-Chrome",level:3},{value:'<Icon name="angle-right" /> Will Cypress work in my CI provider?',id:"Will-Cypress-work-in-my-CI-provider",level:3},{value:'<Icon name="angle-right" /> Does Cypress require me to change any of my existing code?',id:"Does-Cypress-require-me-to-change-any-of-my-existing-code",level:3},{value:'<Icon name="angle-right" /> Does Cypress use Selenium / Webdriver?',id:"Does-Cypress-use-Selenium--Webdriver",level:3},{value:'<Icon name="angle-right" /> If Cypress runs in the browser, doesn&#39;t that mean it&#39;s sandboxed?',id:"If-Cypress-runs-in-the-browser-doesnt-that-mean-its-sandboxed",level:3},{value:'<Icon name="angle-right" /> We use WebSockets; will Cypress work with that?',id:"We-use-WebSockets-will-Cypress-work-with-that",level:3},{value:'<Icon name="angle-right" /> We have the most complex most outrageous authentication system ever; will Cypress work with that?',id:"We-have-the-most-complex-most-outrageous-authentication-system-ever-will-Cypress-work-with-that",level:3},{value:'<Icon name="angle-right" /> Is it possible to use cypress on <code>.jspa</code>?',id:"Is-it-possible-to-use-cypress-on-jspa",level:3},{value:'<Icon name="angle-right" /> Can I use Cypress to script user-actions on an external site like <code>gmail.com</code>?',id:"Can-I-use-Cypress-to-script-user-actions-on-an-external-site-like-gmailcom",level:3},{value:'<Icon name="angle-right" /> Is there code coverage?',id:"Is-there-code-coverage",level:3},{value:'<Icon name="angle-right" /> Are there driver bindings in my language?',id:"Are-there-driver-bindings-in-my-language",level:3},{value:'<Icon name="angle-right" /> What resources do you recommend to learn JavaScript before writing Cypress tests?',id:"What-resources-do-you-recommend-to-learn-JavaScript-before-writing-Cypress-tests",level:3},{value:'<Icon name="angle-right" /> So what benefits would one get for converting one&#39;s unit tests from Karma or Jest to Cypress?',id:"So-what-benefits-would-one-get-for-converting-ones-unit-tests-from-Karma-or-Jest-to-Cypress",level:3},{value:'<Icon name="angle-right" /> What&#39;s the difference between a Spec, Test, and a Test Suite?',id:"Whats-the-difference-between-a-Spec-Test-and-a-Test-Suite",level:3},{value:'<Icon name="angle-right" /> When should I write a End-to-End tests and when should I write Component Tests?',id:"When-should-I-write-a-End-to-End-tests-and-when-should-I-write-Component-Tests",level:3},{value:'<Icon name="angle-right" /> When should I write a unit test and when should I write an end-to-end test?',id:"When-should-I-write-a-unit-test-and-when-should-I-write-an-end-to-end-test",level:3},{value:'<Icon name="angle-right" /> How do I convince my company to use Cypress?',id:"How-do-I-convince-my-company-to-use-Cypress",level:3},{value:'<Icon name="angle-right" /> How can I find out about new versions of Cypress?',id:"How-can-I-find-out-about-new-versions-of-Cypress",level:3},{value:'<Icon name="angle-right" /> How often are Cypress versions released?',id:"How-often-are-Cypress-versions-released",level:3},{value:'<Icon name="angle-right" /> What information is captured or transmitted when using Cypress?',id:"What-information-is-captured-or-transmitted-when-using-Cypress",level:3},{value:'<Icon name="angle-right" /> Can I write API tests using Cypress? <E2EOnlyBadge />',id:"Can-I-write-API-tests-using-Cypress",level:3}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},d=c("Icon"),h=c("E2EOnlyBadge"),m={toc:u};function y(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(s.Z,{toc:u,mdxType:"TOCInline"}),(0,o.kt)("h2",{id:"General-Cypress-Questions"},"General Cypress Questions"),(0,o.kt)("h3",{id:"Is-Cypress-free-and-open-source"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," Is Cypress free and open source?"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/guides/core-concepts/cypress-app"},"Cypress")," is a free, downloadable and open\nsource (MIT license) application. This is always free to use.\n",(0,o.kt)("a",{parentName:"p",href:"/guides/cloud/introduction"},"Cypress Cloud")," is a web application that offers a\nvariety of billing plans (including a free, open source plan) for when you want\nto record your test runs in CI."),(0,o.kt)("p",null,"Please see our ",(0,o.kt)("a",{parentName:"p",href:"https://www.cypress.io/pricing"},"Pricing Page")," for more details."),(0,o.kt)("h3",{id:"What-operating-systems-do-you-support"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," What operating systems do you support?"),(0,o.kt)("p",null,"You can ",(0,o.kt)("a",{parentName:"p",href:"/guides/getting-started/installing-cypress"},"install Cypress")," on Mac,\nLinux, and Windows. For additional information, please see our\n",(0,o.kt)("a",{parentName:"p",href:"/guides/getting-started/installing-cypress#System-requirements"},"System requirements"),"."),(0,o.kt)("h3",{id:"Do-you-support-native-mobile-apps"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," Do you support native mobile apps?"),(0,o.kt)("p",null,"Cypress will never be able to run on a native mobile app, but we can test some\nfunctionality of mobile web browsers and test mobile applications that are\ndeveloped in a browser, such as with\n",(0,o.kt)("a",{parentName:"p",href:"https://ionicframework.com/"},"the Ionic framework"),"."),(0,o.kt)("p",null,"Currently you can control the viewport with the\n",(0,o.kt)("a",{parentName:"p",href:"/api/commands/viewport"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.viewport()"))," command to test responsive, mobile\nviews in a website or web application. You can also mimic certain behaviors like\nswiping using ",(0,o.kt)("a",{parentName:"p",href:"/api/cypress-api/custom-commands"},"custom commands"),"."),(0,o.kt)("p",null,"You can read about testing mobile applications with Ionic and Cypress\n",(0,o.kt)("a",{parentName:"p",href:"https://www.cypress.io/blog/2020/07/08/end-to-end-testing-mobile-apps-with-ionic-and-cypress/"},"here"),"\nand see how we manage testing the mobile viewport in the\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress-realworld-app"},"Cypress Real World App"),"."),(0,o.kt)("h3",{id:"How-is-this-different-from-X-testing-tool"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," How is this different from 'X' testing tool?"),(0,o.kt)("p",null,"Cypress is a hybrid application/framework/service all rolled into one. It takes\na little bit of other testing tools, brings them together and improves on them."),(0,o.kt)("h4",{id:"Mocha"},"Mocha"),(0,o.kt)("p",null,"Mocha is a testing framework for JavaScript. ",(0,o.kt)("a",{parentName:"p",href:"http://mochajs.org/"},"Mocha")," gives\nyou the ",(0,o.kt)("inlineCode",{parentName:"p"},"it"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"describe"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"beforeEach")," methods. Cypress isn't ",(0,o.kt)("strong",{parentName:"p"},"different")," from\nMocha, it actually ",(0,o.kt)("strong",{parentName:"p"},"uses")," Mocha under the hood. All of your tests will be\nwritten on top of Mocha's ",(0,o.kt)("inlineCode",{parentName:"p"},"bdd")," interface."),(0,o.kt)("h4",{id:"Karma"},"Karma"),(0,o.kt)("p",null,"A unit testing runner for JavaScript, ",(0,o.kt)("a",{parentName:"p",href:"http://karma-runner.github.io/"},"Karma"),",\nworks with either ",(0,o.kt)("a",{parentName:"p",href:"https://jasmine.github.io/"},"Jasmine"),",\n",(0,o.kt)("a",{parentName:"p",href:"http://mochajs.org/"},"Mocha"),", or any other JavaScript testing framework."),(0,o.kt)("p",null,"Karma also watches your JavaScript files, live reloads when they change, and is\nalso the ",(0,o.kt)("inlineCode",{parentName:"p"},"reporter")," for your tests failing / passing. It runs from the command\nline."),(0,o.kt)("p",null,"Cypress essentially replaces Karma because it does all of this already and much\nmore."),(0,o.kt)("h4",{id:"Capybara"},"Capybara"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Ruby")," specific tool that allows you to write integration tests for your web\napplication is ",(0,o.kt)("a",{parentName:"p",href:"http://teamcapybara.github.io/capybara/"},"Capybara"),". In the Rails\nworld, this is the ",(0,o.kt)("em",{parentName:"p"},"go-to")," tool for testing your application. It uses\n",(0,o.kt)("a",{parentName:"p",href:"https://SauceLabs.com/"},"Sauce Labs")," (or another headless driver) to interact\nwith browsers. Its API consists of commands that query for DOM elements, perform\nuser actions, navigate around, etc."),(0,o.kt)("p",null,"Cypress essentially replaces Capybara because it does all of these things and\nmuch more. The difference is that instead of testing your application in a\nGUI-less console, you would see your application at all times. You'd never have\nto take a screenshot to debug because all commands instantly provide you the\nstate of your application while they run. Upon any command failing, you'll get a\nhuman-readable error explaining why it failed. There's no \"guessing\" when\ndebugging."),(0,o.kt)("p",null,"Oftentimes Capybara begins to not work as well in complex JavaScript\napplications. Additionally, trying to TDD your application is often difficult.\nYou often have to resort to writing your application code first (typically\nmanually refreshing your browser after changes) until you get it working. From\nthere you write tests, but lose the entire value of TDD."),(0,o.kt)("h4",{id:"Protractor"},"Protractor"),(0,o.kt)("p",null,"Using ",(0,o.kt)("a",{parentName:"p",href:"http://www.protractortest.org/"},"Protractor")," provides a nice Promise-based\ninterface on top of Selenium, which makes it less complicated to deal with\nasynchronous code. Protractor comes with all of the features of Capybara and\nessentially suffers from the same problems."),(0,o.kt)("p",null,"Cypress replaces Protractor because it does all of these things and much more.\nOne major difference is that Cypress enables you to write your unit tests and\nintegration tests in the same tool, as opposed to splitting up this work across\nboth Karma and Protractor."),(0,o.kt)("p",null,"Also, Protractor is very much focused on ",(0,o.kt)("inlineCode",{parentName:"p"},"AngularJS"),", whereas Cypress is\ndesigned to work with any JavaScript framework. Protractor, because it's based\non Selenium, is still pretty slow, and is prohibitive when trying to TDD your\napplication. Cypress, on the other hand, runs at the speed your browser and\napplication are capable of serving and rendering; there is no additional bloat."),(0,o.kt)("h3",{id:"Do-you-support-X-language-or-X-framework"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," Do you support X language or X framework?"),(0,o.kt)("p",null,"Any and all. Ruby, Node, C#, PHP - none of that matters. Cypress tests anything\nthat runs in the context of a browser. It is back end, front end, language and\nframework agnostic."),(0,o.kt)("p",null,"You'll write your tests in JavaScript, but beyond that Cypress works everywhere."),(0,o.kt)("h3",{id:"Can-I-run-Cypress-on-another-browser-other-than-Chrome"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," Can I run Cypress on another browser other than Chrome?"),(0,o.kt)("p",null,"You can read about our currently available browsers\n",(0,o.kt)("a",{parentName:"p",href:"/guides/guides/launching-browsers"},"here"),"."),(0,o.kt)("h3",{id:"Will-Cypress-work-in-my-CI-provider"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," Will Cypress work in my CI provider?"),(0,o.kt)("p",null,"Cypress works in any ",(0,o.kt)("a",{parentName:"p",href:"/guides/continuous-integration/introduction"},"CI provider"),"."),(0,o.kt)("h3",{id:"Does-Cypress-require-me-to-change-any-of-my-existing-code"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," Does Cypress require me to change any of my existing code?"),(0,o.kt)("p",null,"No. But if you're wanting to test parts of your application that are not easily\ntestable, you'll want to refactor those situations (as you would for any\ntesting)."),(0,o.kt)("h3",{id:"Does-Cypress-use-Selenium--Webdriver"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," Does Cypress use Selenium / Webdriver?"),(0,o.kt)("p",null,"No. In fact Cypress' architecture is very different from Selenium in a few\ncritical ways:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Cypress runs in the context of the browser. With Cypress it's easier to\ninspect what is running in the browser, but harder to talk to the outside\nworld. In Selenium it's the exact opposite. Selenium runs outside of the\nbrowser where your application is running (though Cypress is adding more\ncommands every day that give you access to the outside world - like\n",(0,o.kt)("a",{parentName:"li",href:"/api/commands/request"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.request()")),", ",(0,o.kt)("a",{parentName:"li",href:"/api/commands/exec"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.exec()")),",\nand ",(0,o.kt)("a",{parentName:"li",href:"/api/commands/task"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.task()")),")."),(0,o.kt)("li",{parentName:"ul"},"With Selenium you get either 100% simulated events (with Selenium RC) or 100%\nnative events (with Selenium WebDriver). With Cypress, you get both. For the\nmost part we use simulated events. However we do use automation APIs for\nthings like Cookies where we extend outside of the JavaScript sandbox and\ninteract with the underlying browser APIs. This gives us flexibility to\ndetermine which type of event to use in specific situations. Native event\nsupport is on our ",(0,o.kt)("a",{parentName:"li",href:"/guides/references/roadmap"},"roadmap"),".")),(0,o.kt)("h3",{id:"If-Cypress-runs-in-the-browser-doesnt-that-mean-its-sandboxed"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," If Cypress runs in the browser, doesn't that mean it's sandboxed?"),(0,o.kt)("p",null,"Yes, technically; it's sandboxed and has to follow the same rules as every other\nbrowser. That's actually a good thing because it doesn't require a browser\nextension, and it naturally will work across all browsers (which enables cross\nbrowser testing)."),(0,o.kt)("p",null,"But Cypress is actually way beyond a basic JavaScript application running in the\nbrowser. It is also a desktop application and communicates with back end web\nservices."),(0,o.kt)("p",null,"All of these technologies together are coordinated and enable Cypress to work,\nwhich extends its capabilities far outside of the browser sandbox. Without\nthese, Cypress would not work at all. For the vast majority of your web\ndevelopment, Cypress will work fine, and already ",(0,o.kt)("em",{parentName:"p"},"does")," work."),(0,o.kt)("h3",{id:"We-use-WebSockets-will-Cypress-work-with-that"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," We use WebSockets; will Cypress work with that?"),(0,o.kt)("p",null,"Yes."),(0,o.kt)("h3",{id:"We-have-the-most-complex-most-outrageous-authentication-system-ever-will-Cypress-work-with-that"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," We have the most complex most outrageous authentication system ever; will Cypress work with that?"),(0,o.kt)("p",null,"If you're using some complex thumb-print, retinal-scan, time-based,\nkey-changing, microphone, audial, decoding mechanism to log in your users, then\nno, Cypress won't work with that. But seriously, Cypress is a ",(0,o.kt)("em",{parentName:"p"},"development"),"\ntool, which helps you test your web applications. If your application is doing\n100x things to make it extremely difficult to access, Cypress won't magically\nmake it any easier."),(0,o.kt)("p",null,"Because Cypress is a development tool, you can always make your application more\naccessible while in your development environment. If you want, disable complex\nsteps in your authentication systems while you're in your testing environment.\nAfter all, that's why we have different environments! Normally you already have\na development environment, a testing environment, a staging environment, and a\nproduction environment. So expose the parts of your system you want accessible\nin each appropriate environment."),(0,o.kt)("p",null,"In doing so, Cypress may not be able to give you 100% coverage without you\nchanging anything, but that's okay. Use different tools to test the less\naccessible parts of your application, and let Cypress test the other 99%."),(0,o.kt)("p",null,"Remember, Cypress won't make a non-testable application suddenly testable. It's\non your shoulders to architect your code in an accessible manner."),(0,o.kt)("h3",{id:"Is-it-possible-to-use-cypress-on-jspa"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," Is it possible to use cypress on ",(0,o.kt)("inlineCode",{parentName:"h3"},".jspa"),"?"),(0,o.kt)("p",null,"Yes. Cypress works on anything rendered to a browser."),(0,o.kt)("h3",{id:"Can-I-use-Cypress-to-script-user-actions-on-an-external-site-like-gmailcom"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," Can I use Cypress to script user-actions on an external site like ",(0,o.kt)("inlineCode",{parentName:"h3"},"gmail.com"),"?"),(0,o.kt)("p",null,"No. There are already lots of tools to do that. Using Cypress to test against a\n3rd party application is not its intended use. It ",(0,o.kt)("em",{parentName:"p"},"may")," work but will defeat the\npurpose of why it was created. You use Cypress ",(0,o.kt)("em",{parentName:"p"},"while")," you develop your\napplication, it helps you write your tests."),(0,o.kt)("h3",{id:"Is-there-code-coverage"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," Is there code coverage?"),(0,o.kt)("p",null,"There is a plugin and detailed documentation on how to get end-to-end, unit and\nfull stack code coverage."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Read our ",(0,o.kt)("a",{parentName:"li",href:"https://on.cypress.io/code-coverage"},"Code Coverage guide")),(0,o.kt)("li",{parentName:"ul"},"Use the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/cypress-io/code-coverage"},"@cypress/code-coverage"),"\nplugin")),(0,o.kt)("p",null,"You may also find the following resources helpful when writing end-to-end tests:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://glebbahmutov.com/blog/element-coverage/"},"element coverage")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://glebbahmutov.com/blog/hyperapp-state-machine/"},"application state coverage"))),(0,o.kt)("h3",{id:"Are-there-driver-bindings-in-my-language"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," Are there driver bindings in my language?"),(0,o.kt)("p",null,"Cypress does ",(0,o.kt)("em",{parentName:"p"},"not")," utilize WebDriver for testing, so it does not use or have any\nnotion of driver bindings. If your language can be somehow transpiled to\nJavaScript, then you can configure\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress/tree/develop/npm/webpack-preprocessor"},"Cypress webpack preprocessor"),"\nor\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress-browserify-preprocessor"},"Cypress Browserify preprocessor"),"\nto transpile your tests to JavaScript that Cypress can run."),(0,o.kt)("h3",{id:"What-resources-do-you-recommend-to-learn-JavaScript-before-writing-Cypress-tests"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," What resources do you recommend to learn JavaScript before writing Cypress tests?"),(0,o.kt)("p",null,"We hope that Cypress makes test writing simple and fun, even for people with a\nminimal knowledge of JavaScript. If you would like to develop your JS skills, we\nrecommend the following free online resources:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Online tutorial ",(0,o.kt)("a",{parentName:"li",href:"https://gitbookio.gitbooks.io/JavaScript"},"Learn Javascript"),"\nwith small exercises"),(0,o.kt)("li",{parentName:"ul"},"Book ",(0,o.kt)("a",{parentName:"li",href:"https://eloquentjavascript.net/"},"Eloquent JavaScript")),(0,o.kt)("li",{parentName:"ul"},"Book ",(0,o.kt)("a",{parentName:"li",href:"http://read.humanjavascript.com/"},"Human JavaScript")),(0,o.kt)("li",{parentName:"ul"},"an entire collection of free JavaScript books at the\n",(0,o.kt)("a",{parentName:"li",href:"https://freefrontend.com/javascript-books/"},"Free Frontend")," site"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://javascript.info/"},"The Modern JavaScript Tutorial")," teaches you both\nJavaScript and HTML programming, and is available in several translations")),(0,o.kt)("p",null,"You can also learn JavaScript by watching these videos:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=PkZNo7MFNFg"},"Learn JavaScript - Full Course for Beginners"),"\nfrom freeCodeCamp"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.codecademy.com/learn/introduction-to-javascript"},"Learn JavaScript"),"\nby CodeAcademy")),(0,o.kt)("h3",{id:"So-what-benefits-would-one-get-for-converting-ones-unit-tests-from-Karma-or-Jest-to-Cypress"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," So what benefits would one get for converting one's unit tests from Karma or Jest to Cypress?"),(0,o.kt)("p",null,"Unit tests are not something we are really trying to solve right now. Most of\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"cy")," API commands are useless in unit tests. The biggest benefit of writing\nunit tests in Cypress is that they run in a browser, which has debugger support\nbuilt in."),(0,o.kt)("p",null,'We have internally experimented at doing DOM based component unit testing in\nCypress - and that has the possibility of being an excellent "sweet spot" for\nunit tests. You\'d get full DOM support, screenshot support, snapshot testing,\nand you could then use other ',(0,o.kt)("inlineCode",{parentName:"p"},"cy")," commands (if need be). But as I mentioned this\nisn't something we're actively pushing; it remains a thing that's possible if we\nwanted to go down that route."),(0,o.kt)("p",null,'With that said - we actually believe the best form of testing in Cypress is a\ncombination of a "unit test" mixed with an "e2e test". We don\'t believe in a\n"hands off" approach. We want you to modify the state of your application, take\nshortcuts as much as possible (because you have native access to all objects\nincluding your app). In other words, we want you to think in unit tests while\nyou write integration tests.'),(0,o.kt)("h3",{id:"Whats-the-difference-between-a-Spec-Test-and-a-Test-Suite"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," What's the difference between a Spec, Test, and a Test Suite?"),(0,o.kt)("p",null,"The terms ",(0,o.kt)("em",{parentName:"p"},"spec"),", ",(0,o.kt)("em",{parentName:"p"},"test"),", and ",(0,o.kt)("em",{parentName:"p"},"test suite")," have specific meanings. Here's how they are differentiated in Cypress:"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("u",null,"Spec"))," A single test file that contains a set of test cases or individual tests. Each spec file typically focuses on testing a specific feature, functionality, or aspect of the application under test. Specs define the test scenarios, interactions with the application, and assertions to verify expected behavior. Spec files are written in JavaScript or TypeScript and have a ",(0,o.kt)("inlineCode",{parentName:"p"},".js")," or ",(0,o.kt)("inlineCode",{parentName:"p"},".ts")," extension."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("u",null,"Test"))," An individual test case within a spec file. It represents a specific scenario or behavior that needs to be tested. A test typically consists of a series of actions performed on the application being tested, such as interacting with UI elements, submitting forms, or making assertions to validate the expected outcomes. Cypress provides a rich set of built-in commands and APIs to facilitate writing tests and interacting with the application in a declarative manner."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("u",null,"Test Suite"))," A collection of spec files that are grouped together. It allows you to organize your tests based on different criteria, such as functional areas, modules, or specific features. A test suite can include multiple spec files, each containing one or more tests. By grouping related tests together in a test suite, you can organize and manage your tests more effectively. Cypress provides options to run individual spec files, multiple spec files, or the entire test suite during test execution."),(0,o.kt)("p",null,"Common examples are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Smoke"),": Designed to quickly check if the basic functionalities of an application are working as expected. They are not exhaustive but aim to catch major issues early in the development process."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Critical path"),": Similar to smoke tests but are specifically focused on the critical paths or workflows within an application. They identify and test the most important user journeys or workflows that users frequently perform."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"UI"),": Designed to simulate user interactions with the application's user interface. They cover a broad range of user scenarios, including navigating through different pages, interacting with UI elements, and validating the visual aspects of the application."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"API"),": Focused on testing the backend or server-side of an application by making requests to its APIs (Application Programming Interfaces). These tests validate the functionality, reliability, and performance of the APIs that the application relies on.")),(0,o.kt)("h3",{id:"When-should-I-write-a-End-to-End-tests-and-when-should-I-write-Component-Tests"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," When should I write a End-to-End tests and when should I write Component Tests?"),(0,o.kt)("p",null,"For more information on how to choose a Cypress testing type, we recommend this ",(0,o.kt)("a",{parentName:"p",href:"/guides/core-concepts/testing-types"},"Testing Types Guide"),"."),(0,o.kt)("h3",{id:"When-should-I-write-a-unit-test-and-when-should-I-write-an-end-to-end-test"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," When should I write a unit test and when should I write an end-to-end test?"),(0,o.kt)("p",null,"We believe unit tests and end-to-end tests have differences that should guide\nyour choice."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Unit tests"),(0,o.kt)("th",{parentName:"tr",align:null},"End-to-end tests"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Focus on code"),(0,o.kt)("td",{parentName:"tr",align:null},"Focus on the features")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Should be kept short"),(0,o.kt)("td",{parentName:"tr",align:null},"Can be long")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Examine the returned result of actions"),(0,o.kt)("td",{parentName:"tr",align:null},"Examine side effect of actions: DOM, storage, network, file system, database")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Important to developer workflow"),(0,o.kt)("td",{parentName:"tr",align:null},"Important to end user's workflow")))),(0,o.kt)("p",null,"In addition to the above differences, below are a few rules of thumb to decide\nwhen to write a unit test and when to write an end-to-end test."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If the code you are trying to test is called from other code, use a unit test."),(0,o.kt)("li",{parentName:"ul"},"If the code is going be called from the external system, like a browser, use\nan end-to-end test."),(0,o.kt)("li",{parentName:"ul"},"If a unit test requires a lot of mocking and you have to bring tools like\n",(0,o.kt)("inlineCode",{parentName:"li"},"jsdom"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"enzyme"),", or ",(0,o.kt)("inlineCode",{parentName:"li"},"sinon.js")," to simulate a real world environment, you may\nwant to rewrite it as an end-to-end test."),(0,o.kt)("li",{parentName:"ul"},"If an end-to-end test does ",(0,o.kt)("em",{parentName:"li"},"not")," go through the browser and instead calls the\ncode directly, you probably want to rewrite it as a unit test")),(0,o.kt)("p",null,"Finally, unit and end-to-end tests are not ",(0,o.kt)("em",{parentName:"p"},"that")," different and have common\nfeatures. Good tests:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Focus on and test only one thing."),(0,o.kt)("li",{parentName:"ul"},"Are flake-free and do not fail randomly."),(0,o.kt)("li",{parentName:"ul"},"Give you confidence to refactor code and add new features."),(0,o.kt)("li",{parentName:"ul"},"Are able to run both locally and on a\n",(0,o.kt)("a",{parentName:"li",href:"/guides/continuous-integration/introduction"},"continuous integration")," server.")),(0,o.kt)("p",null,"Certainly, unit and end-to-end tests are NOT in opposition to each other and are\ncomplementary tools in your toolbox."),(0,o.kt)("h3",{id:"How-do-I-convince-my-company-to-use-Cypress"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," How do I convince my company to use Cypress?"),(0,o.kt)("p",null,"First, be honest with yourself -\n",(0,o.kt)("a",{parentName:"p",href:"/guides/overview/why-cypress"},"is Cypress the right tool"),' for your company and\nyour project? We believe that the best approach is a "bottoms up" approach,\nwhere you can demonstrate how Cypress solves your company\'s particular needs.\nImplement a prototype with your project to see how it feels. Test a couple of\ncommon user stories. Identify if there are any technical blockers. Show the\nprototype to others before proceeding any further. If you can demonstrate the\nbenefits of using Cypress as a developer tool for your project to other\nengineers, then Cypress will likely be more quickly adopted.'),(0,o.kt)("h3",{id:"How-can-I-find-out-about-new-versions-of-Cypress"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," How can I find out about new versions of Cypress?"),(0,o.kt)("p",null,"We publish our releases at GitHub and Npm, together with the releases we also\npublish a changelog with the principal changes, fixes, and updates. You can\nfollow through these links:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/cypress-io/cypress/releases"},"GitHub (Releases & changelog)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/cypress"},"npm (Releases)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/guides/references/changelog"},"Changelog at Cypress Docs"))),(0,o.kt)("h3",{id:"How-often-are-Cypress-versions-released"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," How often are Cypress versions released?"),(0,o.kt)("p",null,"We schedule releases of Cypress on Monday every two weeks. This new version\nincludes any bugfixes and/or features that have been completed by that time. You\ncan see all issues merged into the default code branch but not yet released by\nlooking at the issues with the label\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cypress-io/cypress/issues?q=label%3A%22stage%3A+pending+release%22+is%3Aclosed"},"stage: pending release"),"."),(0,o.kt)("p",null,"We schedule major releases with breaking changes approximately every 3 months."),(0,o.kt)("p",null,"If there is a significant bug outside of our release schedule then we release a\npatch as soon as possible."),(0,o.kt)("h3",{id:"What-information-is-captured-or-transmitted-when-using-Cypress"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," What information is captured or transmitted when using Cypress?"),(0,o.kt)("p",null,"Cypress runs locally so no data is sent to Cypress aside from exception data,\nwhich can be disabled using the instructions\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.cypress.io/guides/references/advanced-installation#Opt-out-of-sending-exception-data-to-Cypress"},"here"),"."),(0,o.kt)("h3",{id:"Can-I-write-API-tests-using-Cypress"},(0,o.kt)(d,{name:"angle-right",mdxType:"Icon"})," Can I write API tests using Cypress? ",(0,o.kt)(h,{mdxType:"E2EOnlyBadge"})),(0,o.kt)("p",null,"Cypress is mainly designed to run end-to-end and component tests, but if you\nneed to write a few tests that call the backend API using the\n",(0,o.kt)("a",{parentName:"p",href:"/api/commands/request"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.request()"))," command ... who can stop you?"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"it('adds a todo', () => {\n  cy.request({\n    url: '/todos',\n    method: 'POST',\n    body: {\n      title: 'Write REST API',\n    },\n  })\n    .its('body')\n    .should('deep.contain', {\n      title: 'Write REST API',\n      completed: false,\n    })\n})\n")),(0,o.kt)("p",null,"Take a look at our ",(0,o.kt)(d,{name:"github",inline:"true",contentType:"rwa",mdxType:"Icon"})," that\nuses quite a few such tests to verify the backend APIs."),(0,o.kt)("p",null,"You can verify the responses using the built-in assertions and perform multiple\ncalls. You can even write E2E tests that combine UI commands with API testing as\nneeded:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"it('adds todos', () => {\n  // drive the application through its UI\n  cy.visit('/')\n  cy.get('.new-todo')\n    .type('write E2E tests{enter}')\n    .type('add API tests as needed{enter}')\n  // now confirm the server has 2 todo items\n  cy.request('/todos')\n    .its('body')\n    .should('have.length', 2)\n    .and((items) => {\n      // confirm the returned items\n    })\n})\n")),(0,o.kt)("p",null,"Take a look at\n",(0,o.kt)("a",{parentName:"p",href:"https://www.cypress.io/blog/2017/11/07/add-gui-to-your-e2e-api-tests/"},"Add GUI to your E2E API tests"),"\nblog post, then at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/bahmutov/cy-api"},"cy-api")," plugin that\npipes the request and response objects into Cypress GUI for easier debugging."),(0,o.kt)("p",null,"A good strategy for writing targeted API tests is to use them to reach the\nhard-to-test code not covered by other tests. You can find such places in the\ncode using the ",(0,o.kt)("a",{parentName:"p",href:"/guides/tooling/code-coverage"},"code coverage")," as a guide. Watch\nthe\n",(0,o.kt)("a",{parentName:"p",href:"https://www.cypress.io/blog/2021/01/22/webcast-recording-ship-safer-code-with-cypress-and-codecov/"},"Ship safer code with Cypress and Codecov"),"\nwebinar where we show how to apply this strategy and reach the 100% fullstack\ncode coverage via mostly E2E tests and a few targeted API and unit tests."))}y.isMDXComponent=!0}}]);