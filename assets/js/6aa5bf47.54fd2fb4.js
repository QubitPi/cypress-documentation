"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[3840],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=l(t),d=a,g=u["".concat(s,".").concat(d)]||u[d]||f[d]||i;return t?r.createElement(g,p(p({ref:n},c),{},{components:t})):r.createElement(g,p({ref:n},c))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,p=new Array(i);p[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[u]="string"==typeof e?e:a,p[1]=o;for(var l=2;l<i;l++)p[l]=t[l];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6323:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>p,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var r=t(7462),a=(t(7294),t(3905));const i={title:"Before Spec API"},p=void 0,o={unversionedId:"api/plugins/before-spec-api",id:"api/plugins/before-spec-api",title:"Before Spec API",description:"The before:spec event fires before a spec file is run. When running cypress",source:"@site/docs/api/plugins/before-spec-api.mdx",sourceDirName:"api/plugins",slug:"/api/plugins/before-spec-api",permalink:"/api/plugins/before-spec-api",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/plugins/before-spec-api.mdx",tags:[],version:"current",lastUpdatedAt:1717543864,formattedLastUpdatedAt:"Jun 4, 2024",frontMatter:{title:"Before Spec API"},sidebar:"api",previous:{title:"Before Run API",permalink:"/api/plugins/before-run-api"},next:{title:"Browser Launch API",permalink:"/api/plugins/browser-launch-api"}},s={},l=[{value:"Syntax",id:"Syntax",level:2},{value:"Usage",id:"Usage",level:2},{value:"Log the relative spec path to stdout before the spec is run",id:"Log-the-relative-spec-path-to-stdout-before-the-spec-is-run",level:3},{value:"See also",id:"See-also",level:2}],c=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",n)},u=c("WarningSetupNodeEvents"),f=c("CypressConfigFileTabs"),d=c("Icon"),g={toc:l};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"before:spec")," event fires before a spec file is run. When running cypress\nvia ",(0,a.kt)("inlineCode",{parentName:"p"},"cypress open"),", the event will fire when the browser launches."),(0,a.kt)("h2",{id:"Syntax"},"Syntax"),(0,a.kt)(u,{mdxType:"WarningSetupNodeEvents"}),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"\u26a0\ufe0f When running via ",(0,a.kt)("inlineCode",{parentName:"p"},"cypress open"),", the ",(0,a.kt)("inlineCode",{parentName:"p"},"before:spec")," event only fires if the\n",(0,a.kt)("a",{parentName:"p",href:"/guides/references/configuration#Experiments"},"experimentalInteractiveRunEvents flag"),"\nis enabled.")),(0,a.kt)("cypress-config-plugin-example",null,(0,a.kt)(f,{mdxType:"CypressConfigFileTabs"},(0,a.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('before:spec', (spec) => {\n        /* ... */\n      })\n    },\n  },\n})\n")),(0,a.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('before:spec', (spec) => {\n        /* ... */\n      })\n    },\n  },\n})\n")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)(d,{name:"angle-right",mdxType:"Icon"})," spec")," ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"(Object)"))),(0,a.kt)("p",null,"Details of the spec file, including the following properties:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Property"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"name")),(0,a.kt)("td",{parentName:"tr",align:null},"The base name of the spec file (e.g. ",(0,a.kt)("inlineCode",{parentName:"td"},"login.cy.js"),")")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"relative")),(0,a.kt)("td",{parentName:"tr",align:null},"The path to the spec file, relative to the project root (e.g. ",(0,a.kt)("inlineCode",{parentName:"td"},"cypress/e2e/login.cy.js"),")")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"absolute")),(0,a.kt)("td",{parentName:"tr",align:null},"The absolute path to the spec file (e.g. ",(0,a.kt)("inlineCode",{parentName:"td"},"/Users/janelane/my-app/cypress/e2e/login.cy.js"),")")))),(0,a.kt)("h2",{id:"Usage"},"Usage"),(0,a.kt)("p",null,"You can return a promise from the ",(0,a.kt)("inlineCode",{parentName:"p"},"before:spec")," event handler and it will be\nawaited before Cypress proceeds running the spec."),(0,a.kt)("h3",{id:"Log-the-relative-spec-path-to-stdout-before-the-spec-is-run"},"Log the relative spec path to stdout before the spec is run"),(0,a.kt)("cypress-config-plugin-example",null,(0,a.kt)(f,{mdxType:"CypressConfigFileTabs"},(0,a.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { defineConfig } = require('cypress')\n\nmodule.exports = defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('before:spec', (spec) => {\n        // spec will look something like this:\n        // {\n        //   name: 'login.cy.js',\n        //   relative: 'cypress/e2e/login.cy.js',\n        //   absolute: '/Users/janelane/app/cypress/e2e/login.cy.js',\n        // }\n        console.log('Running', spec.relative)\n      })\n    },\n  },\n})\n")),(0,a.kt)("pre",{parentName:"cypress-config-plugin-example"},(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { defineConfig } from 'cypress'\n\nexport default defineConfig({\n  // setupNodeEvents can be defined in either\n  // the e2e or component configuration\n  e2e: {\n    setupNodeEvents(on, config) {\n      on('before:spec', (spec) => {\n        // spec will look something like this:\n        // {\n        //   name: 'login.cy.js',\n        //   relative: 'cypress/e2e/login.cy.js',\n        //   absolute: '/Users/janelane/app/cypress/e2e/login.cy.js',\n        // }\n        console.log('Running', spec.relative)\n      })\n    },\n  },\n})\n")))),(0,a.kt)("h2",{id:"See-also"},"See also"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/plugins/after-spec-api"},"After Spec API")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/plugins/before-run-api"},"Before Run API")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/plugins/after-run-api"},"After Run API")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/guides/tooling/plugins-guide"},"Plugins Guide")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/plugins/writing-a-plugin"},"Writing a Plugin"))))}m.isMDXComponent=!0}}]);