"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[8646],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var r=a.createContext({}),s=function(e){var t=a.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(r.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,r=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(n),k=o,u=m["".concat(r,".").concat(k)]||m[k]||d[k]||i;return n?a.createElement(u,l(l({ref:t},p),{},{components:n})):a.createElement(u,l({ref:t},p))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=k;var c={};for(var r in t)hasOwnProperty.call(t,r)&&(c[r]=t[r]);c.originalType=e,c[m]="string"==typeof e?e:o,l[1]=c;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},9027:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var a=n(7462),o=(n(7294),n(3905));const i={title:"clock"},l=void 0,c={unversionedId:"api/commands/clock",id:"api/commands/clock",title:"clock",description:"cy.clock() overrides native global functions related to time allowing them to",source:"@site/docs/api/commands/clock.mdx",sourceDirName:"api/commands",slug:"/api/commands/clock",permalink:"/cypress-documentation/api/commands/clock",draft:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/api/commands/clock.mdx",tags:[],version:"current",lastUpdatedAt:1696481464,formattedLastUpdatedAt:"Oct 5, 2023",frontMatter:{title:"clock"},sidebar:"api",previous:{title:"clearLocalStorage",permalink:"/cypress-documentation/api/commands/clearlocalstorage"},next:{title:"debug",permalink:"/cypress-documentation/api/commands/debug"}},r={},s=[{value:"Syntax",id:"Syntax",level:2},{value:"Usage",id:"Usage",level:3},{value:"Arguments",id:"Arguments",level:3},{value:'Yields <Icon name="question-circle"/>',id:"Yields",level:3},{value:"Examples",id:"Examples",level:2},{value:"No Args",id:"No-Args",level:3},{value:"Create a clock and use it to trigger a <code>setInterval</code>",id:"Create-a-clock-and-use-it-to-trigger-a-setInterval",level:4},{value:"Access the clock object to synchronously move time",id:"Access-the-clock-object-to-synchronously-move-time",level:4},{value:"Access the clock object to restore native functions",id:"Access-the-clock-object-to-restore-native-functions",level:4},{value:"Now",id:"Now",level:3},{value:"Specify a now timestamp",id:"Specify-a-now-timestamp",level:4},{value:"Function names",id:"Function-names",level:3},{value:"Specify which functions to override",id:"Specify-which-functions-to-override",level:4},{value:"<code>Using cy.clock()</code> with <code>cy.tick()</code>",id:"Using-cyclock-with-cytick",level:4},{value:"Restore clock",id:"Restore-clock",level:3},{value:"Change current system time",id:"Change-current-system-time",level:3},{value:"Notes",id:"Notes",level:2},{value:"iframes",id:"iframes",level:3},{value:"iframes not supported",id:"iframes-not-supported",level:4},{value:"Behavior",id:"Behavior",level:3},{value:"clock behavior before <code>cy.mount()</code>",id:"clock-behavior-before-cymount",level:4},{value:"clock behavior before <code>cy.visit()</code>",id:"clock-behavior-before-cyvisit",level:4},{value:"Rules",id:"Rules",level:2},{value:'Requirements <Icon name="question-circle"/>',id:"Requirements",level:3},{value:'Assertions <Icon name="question-circle"/>',id:"Assertions",level:3},{value:'Timeouts <Icon name="question-circle"/>',id:"Timeouts",level:3},{value:"Command Log",id:"Command-Log",level:2},{value:"History",id:"History",level:2},{value:"See also",id:"See-also",level:2}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},m=p("Icon"),d=p("E2EOrCtTabs"),k=p("DocsImage"),u={toc:s};function h(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"cy.clock()")," overrides native global functions related to time allowing them to\nbe controlled synchronously via ",(0,o.kt)("a",{parentName:"p",href:"/api/commands/tick"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.tick()"))," or the yielded\n",(0,o.kt)("inlineCode",{parentName:"p"},"clock")," object. This includes controlling:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"setTimeout")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"clearTimeout")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"setInterval")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"clearInterval")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Date")," Objects")),(0,o.kt)("p",null,"The clock starts at the unix epoch (timestamp of 0). This means that when you\ninstantiate ",(0,o.kt)("inlineCode",{parentName:"p"},"new Date")," in your application, it will have a time of\n",(0,o.kt)("inlineCode",{parentName:"p"},"January 1st, 1970"),"."),(0,o.kt)("h2",{id:"Syntax"},"Syntax"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.clock()\ncy.clock(now)\ncy.clock(now, functionNames)\ncy.clock(options)\ncy.clock(now, options)\ncy.clock(now, functionNames, options)\n")),(0,o.kt)("h3",{id:"Usage"},"Usage"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)(m,{name:"check-circle",color:"green",mdxType:"Icon"})," Correct Usage")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.clock()\n")),(0,o.kt)("h3",{id:"Arguments"},"Arguments"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)(m,{name:"angle-right",mdxType:"Icon"})," now")," ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"(number)"))),(0,o.kt)("p",null,"A timestamp specifying where the clock should start."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)(m,{name:"angle-right",mdxType:"Icon"})," functionNames")," ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"(Array)"))),(0,o.kt)("p",null,"Name of native functions that clock should override."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)(m,{name:"angle-right",mdxType:"Icon"})," options")," ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"(Object)"))),(0,o.kt)("p",null,"Pass in an options object to change the default behavior of ",(0,o.kt)("inlineCode",{parentName:"p"},"cy.clock()"),"."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Option"),(0,o.kt)("th",{parentName:"tr",align:null},"Default"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"log")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"true")),(0,o.kt)("td",{parentName:"tr",align:null},"Displays the command in the ",(0,o.kt)("a",{parentName:"td",href:"/guides/core-concepts/cypress-app#Command-Log"},"Command log"))))),(0,o.kt)("h3",{id:"Yields"},"Yields ",(0,o.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Subject-Management"},(0,o.kt)(m,{name:"question-circle",mdxType:"Icon"}))),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"cy.clock()")," yields a ",(0,o.kt)("inlineCode",{parentName:"p"},"clock")," object with the following methods:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"clock.tick(milliseconds)"))),(0,o.kt)("p",{parentName:"li"},"Move the clock the specified number of ",(0,o.kt)("inlineCode",{parentName:"p"},"milliseconds"),". Any timers within the\naffected range of time will be called.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"clock.restore()"))),(0,o.kt)("p",{parentName:"li"},"Restore all overridden native functions. This is automatically called between\ntests, so should not generally be needed.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"clock.setSystemTime(now)"))),(0,o.kt)("p",{parentName:"li"},"Change the system time to the new ",(0,o.kt)("inlineCode",{parentName:"p"},"now"),". Now can be a timestamp, date object,\nor not passed in which defaults to 0. No timers will be called, nor will the\ntime left before they trigger change."))),(0,o.kt)("p",null,"You can also access the ",(0,o.kt)("inlineCode",{parentName:"p"},"clock")," object via ",(0,o.kt)("inlineCode",{parentName:"p"},"this.clock")," in a\n",(0,o.kt)("a",{parentName:"p",href:"/api/commands/then"},(0,o.kt)("inlineCode",{parentName:"a"},".then()"))," callback."),(0,o.kt)("h2",{id:"Examples"},"Examples"),(0,o.kt)("h3",{id:"No-Args"},"No Args"),(0,o.kt)("h4",{id:"Create-a-clock-and-use-it-to-trigger-a-setInterval"},"Create a clock and use it to trigger a ",(0,o.kt)("inlineCode",{parentName:"h4"},"setInterval")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"// your app code\nlet seconds = 0\n\nsetInterval(() => {\n  $('#seconds-elapsed').text(++seconds + ' seconds')\n}, 1000)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.clock()\ncy.visit('/index.html')\ncy.tick(1000)\ncy.get('#seconds-elapsed').should('have.text', '1 seconds')\ncy.tick(1000)\ncy.get('#seconds-elapsed').should('have.text', '2 seconds')\n")),(0,o.kt)("h4",{id:"Access-the-clock-object-to-synchronously-move-time"},"Access the clock object to synchronously move time"),(0,o.kt)("p",null,"In most cases, it's easier to use ",(0,o.kt)("a",{parentName:"p",href:"/api/commands/tick"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.tick()"))," to move\ntime, but you can also use the ",(0,o.kt)("inlineCode",{parentName:"p"},"clock")," object yielded by ",(0,o.kt)("inlineCode",{parentName:"p"},"cy.clock()"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.clock().then((clock) => {\n  clock.tick(1000)\n})\n")),(0,o.kt)("p",null,"You can call ",(0,o.kt)("inlineCode",{parentName:"p"},"cy.clock()")," again for this purpose later in a chain if necessary."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.clock()\ncy.get('input').type('Jane Lane')\ncy.clock().then((clock) => {\n  clock.tick(1000)\n})\n")),(0,o.kt)("p",null,"The clock object is also available via ",(0,o.kt)("inlineCode",{parentName:"p"},"this.clock")," in any\n",(0,o.kt)("a",{parentName:"p",href:"/api/commands/then"},(0,o.kt)("inlineCode",{parentName:"a"},".then()"))," callback."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.clock()\ncy.get('form').then(($form) => {\n  this.clock.tick(1000)\n  // do something with $form ...\n})\n")),(0,o.kt)("h4",{id:"Access-the-clock-object-to-restore-native-functions"},"Access the clock object to restore native functions"),(0,o.kt)("p",null,"In general, it should not be necessary to manually restore the native functions\nthat ",(0,o.kt)("inlineCode",{parentName:"p"},"cy.clock()")," overrides since this is done automatically between tests. But\nif you need to, the ",(0,o.kt)("inlineCode",{parentName:"p"},"clock")," object yield has a ",(0,o.kt)("inlineCode",{parentName:"p"},".restore()")," method."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.clock().then((clock) => {\n  clock.restore()\n})\n")),(0,o.kt)("p",null,"Or via ",(0,o.kt)("inlineCode",{parentName:"p"},"this.clock"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.clock()\ncy.get('.timer').then(($timer) => {\n  this.clock.restore()\n  // do something with $timer ...\n})\n")),(0,o.kt)("h3",{id:"Now"},"Now"),(0,o.kt)("h4",{id:"Specify-a-now-timestamp"},"Specify a now timestamp"),(0,o.kt)("visit-mount-example",null,(0,o.kt)(d,{mdxType:"E2EOrCtTabs"},(0,o.kt)("pre",{parentName:"visit-mount-example"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const now = new Date(2021, 3, 14) // month is 0-indexed\n\ncy.clock(now)\ncy.visit('/index.html')\ncy.get('#date').should('have.value', '04/14/2021')\n")),(0,o.kt)("pre",{parentName:"visit-mount-example"},(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const now = new Date(2021, 3, 14) // month is 0-indexed\n\ncy.clock(now)\ncy.mount(<DatePicker id=\"date\" />)\ncy.get('#date').should('have.value', '04/14/2021')\n")))),(0,o.kt)("h3",{id:"Function-names"},"Function names"),(0,o.kt)("h4",{id:"Specify-which-functions-to-override"},"Specify which functions to override"),(0,o.kt)("p",null,"This example below will only override ",(0,o.kt)("inlineCode",{parentName:"p"},"setTimeout")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"clearTimeout")," and leave\nthe other time-related functions as they are."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.clock(null, ['setTimeout', 'clearTimeout'])\n")),(0,o.kt)("p",null,"Note that you must specify ",(0,o.kt)("inlineCode",{parentName:"p"},"Date")," in order to override the current datetime. The\nexample below affects the current datetime without affecting scheduled timers."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.clock(Date.UTC(2018, 10, 30), ['Date'])\n")),(0,o.kt)("h4",{id:"Using-cyclock-with-cytick"},(0,o.kt)("inlineCode",{parentName:"h4"},"Using cy.clock()")," with ",(0,o.kt)("inlineCode",{parentName:"h4"},"cy.tick()")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{parentName:"p",href:"/examples/recipes#Stubbing-and-spying"},"Check out our example recipe testing spying, stubbing and time."))),(0,o.kt)("h3",{id:"Restore-clock"},"Restore clock"),(0,o.kt)("p",null,"You can restore the clock and allow your application to resume normally without\nmanipulating native global functions related to time. This is automatically\ncalled between tests."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.clock()\ncy.visit('http://localhost:3333')\ncy.get('#search').type('Acme Company')\ncy.tick(1000)\n// more test code here\n\n// restore the clock\ncy.clock().then((clock) => {\n  clock.restore()\n})\n// more test code here\n")),(0,o.kt)("p",null,"You could also restore by using ",(0,o.kt)("a",{parentName:"p",href:"/api/commands/invoke"},".invoke()")," to invoke the\n",(0,o.kt)("inlineCode",{parentName:"p"},"restore")," function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"cy.clock().invoke('restore')\n")),(0,o.kt)("h3",{id:"Change-current-system-time"},"Change current system time"),(0,o.kt)("p",null,"Here we test that a timer still looks good if it has run for an hour, without\ntriggering an hours worth of setInterval or requestAnimationFrame timers and\noverloading our CPU."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.clock(0)\ncy.visit('http://localhost:3333')\ncy.clock().then((clock) => {\n  clock.setSystemTime(60 * 60 * 1000 - 60);\n  // setSystemTime doesn't trigger any timers, so we run the last frame\n  // with tick to trigger a callback to update the timer.\n  clock.tick(60);\n})\ncy.get('#timer').should(...) // assert that it fits within the screen etc.\n// more test code here\n")),(0,o.kt)("p",null,"You could also change the system time by using ",(0,o.kt)("a",{parentName:"p",href:"/api/commands/invoke"},".invoke()"),"\nto invoke the ",(0,o.kt)("inlineCode",{parentName:"p"},"setSystemTime")," function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"cy.clock().invoke('setSystemTime', 60 * 60 * 1000)\n")),(0,o.kt)("h2",{id:"Notes"},"Notes"),(0,o.kt)("h3",{id:"iframes"},"iframes"),(0,o.kt)("h4",{id:"iframes-not-supported"},"iframes not supported"),(0,o.kt)("p",null,"Note that ",(0,o.kt)("inlineCode",{parentName:"p"},"cy.clock()")," only applies to the ",(0,o.kt)("inlineCode",{parentName:"p"},"top")," window on a web page. It will\nnot override the time functions of any ",(0,o.kt)("inlineCode",{parentName:"p"},"iframe")," embedded on the page."),(0,o.kt)("h3",{id:"Behavior"},"Behavior"),(0,o.kt)("h4",{id:"clock-behavior-before-cymount"},"clock behavior before ",(0,o.kt)("inlineCode",{parentName:"h4"},"cy.mount()")),(0,o.kt)("p",null,"Using the ",(0,o.kt)("a",{parentName:"p",href:"/api/commands/mount"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.mount()"))," command in a Cypress Component\nTest will render your component but does not affect the behavior of the page or\nwindow object. This means you can ",(0,o.kt)("inlineCode",{parentName:"p"},"mount")," directly after calling ",(0,o.kt)("inlineCode",{parentName:"p"},"cy.clock()")," to\ntest the component against any changes you've made to the yielded clock object."),(0,o.kt)("h4",{id:"clock-behavior-before-cyvisit"},"clock behavior before ",(0,o.kt)("inlineCode",{parentName:"h4"},"cy.visit()")),(0,o.kt)("p",null,"If you call ",(0,o.kt)("inlineCode",{parentName:"p"},"cy.clock()")," before visiting a page with\n",(0,o.kt)("a",{parentName:"p",href:"/api/commands/visit"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.visit()")),", the page's native global functions will be\noverridden on window load, before any of your app code runs. So even if\n",(0,o.kt)("inlineCode",{parentName:"p"},"setTimeout"),", for example, is called on page load, it can still be controlled\nvia ",(0,o.kt)("a",{parentName:"p",href:"/api/commands/tick"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.tick()")),". This also applies if, during the course\nof a test, the page under test is reloaded or changed."),(0,o.kt)("h2",{id:"Rules"},"Rules"),(0,o.kt)("h3",{id:"Requirements"},"Requirements ",(0,o.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Chains-of-Commands"},(0,o.kt)(m,{name:"question-circle",mdxType:"Icon"}))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cy.clock()")," requires being chained off of ",(0,o.kt)("inlineCode",{parentName:"li"},"cy"),".")),(0,o.kt)("h3",{id:"Assertions"},"Assertions ",(0,o.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Assertions"},(0,o.kt)(m,{name:"question-circle",mdxType:"Icon"}))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cy.clock()")," is a utility command."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cy.clock()")," will not run assertions. Assertions will pass through as if this\ncommand did not exist.")),(0,o.kt)("h3",{id:"Timeouts"},"Timeouts ",(0,o.kt)("a",{parentName:"h3",href:"/guides/core-concepts/introduction-to-cypress#Timeouts"},(0,o.kt)(m,{name:"question-circle",mdxType:"Icon"}))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cy.clock()")," cannot time out.")),(0,o.kt)("h2",{id:"Command-Log"},"Command Log"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Create a clock and tick it 1 second")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"cy.clock()\ncy.tick(1000)\n")),(0,o.kt)("p",null,"The command above will display in the Command Log as:"),(0,o.kt)(k,{src:"/img/api/clock/clock-displays-in-command-log.png",alt:"Command Log clock",mdxType:"DocsImage"}),(0,o.kt)("p",null,"When clicking on the ",(0,o.kt)("inlineCode",{parentName:"p"},"clock")," command within the command log, the console outputs\nthe following:"),(0,o.kt)(k,{src:"/img/api/clock/clock-displays-methods-replaced-in-console.png",alt:"console.log clock command",mdxType:"DocsImage"}),(0,o.kt)("h2",{id:"History"},"History"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Version"),(0,o.kt)("th",{parentName:"tr",align:null},"Changes"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/guides/references/changelog#10-7-0"},"10.7.0")),(0,o.kt)("td",{parentName:"tr",align:null},"Added ",(0,o.kt)("inlineCode",{parentName:"td"},"setSystemTime")," to yielded clock object")))),(0,o.kt)("h2",{id:"See-also"},"See also"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/api/commands/spy"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.spy()"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/api/commands/stub"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.stub()"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/api/commands/tick"},(0,o.kt)("inlineCode",{parentName:"a"},"cy.tick()"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/guides/guides/stubs-spies-and-clocks"},"Guide: Stubs, Spies and Clocks")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/examples/recipes#Stubbing-and-spying"},"Recipe: Stubbing, Spying"))))}h.isMDXComponent=!0}}]);