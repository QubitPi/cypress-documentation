"use strict";(self.webpackChunkcypress_docusaurus_ts=self.webpackChunkcypress_docusaurus_ts||[]).push([[8818],{1179:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var t=n(5893),i=n(1151);const o={title:"Test Isolation",sidebar_position:35},a=void 0,r={id:"guides/core-concepts/test-isolation",title:"Test Isolation",description:"What you'll learn",source:"@site/docs/guides/core-concepts/test-isolation.mdx",sourceDirName:"guides/core-concepts",slug:"/guides/core-concepts/test-isolation",permalink:"/guides/core-concepts/test-isolation",draft:!1,unlisted:!1,editUrl:"https://github.com/cypress-io/cypress-documentation/tree/main/docs/guides/core-concepts/test-isolation.mdx",tags:[],version:"current",lastUpdatedAt:1728610821,formattedLastUpdatedAt:"Oct 11, 2024",sidebarPosition:35,frontMatter:{title:"Test Isolation",sidebar_position:35},sidebar:"guides",previous:{title:"Writing and Organizing Tests",permalink:"/guides/core-concepts/writing-and-organizing-tests"},next:{title:"Retry-ability",permalink:"/guides/core-concepts/retry-ability"}},l={},d=[{value:"<Icon></Icon> What you&#39;ll learn",id:"What-youll-learn",level:2},{value:"What is Test Isolation?",id:"What-is-Test-Isolation",level:2},{value:"Test Isolation in End-to-End Testing",id:"Test-Isolation-in-End-to-End-Testing",level:2},{value:"Test Isolation Enabled",id:"Test-Isolation-Enabled",level:3},{value:"Test Isolation Disabled",id:"Test-Isolation-Disabled",level:3},{value:"Quick Comparison",id:"Quick-Comparison",level:3},{value:"Test Isolation in Component Testing",id:"Test-Isolation-in-Component-Testing",level:2},{value:"Test Isolation Trade-offs",id:"Test-Isolation-Trade-offs",level:2}];function c(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components},{Icon:n}=s;return n||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Icon",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.admonition,{type:"info",children:[(0,t.jsxs)(s.h2,{id:"What-youll-learn",children:[(0,t.jsx)(n,{name:"graduation-cap"})," What you'll learn"]}),(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"What is test isolation"}),"\n",(0,t.jsx)(s.li,{children:"How it impacts E2E Testing vs Component Testing"}),"\n",(0,t.jsx)(s.li,{children:"Test isolation trade-offs"}),"\n"]})]}),"\n",(0,t.jsx)(s.h2,{id:"What-is-Test-Isolation",children:"What is Test Isolation?"}),"\n",(0,t.jsx)(s.admonition,{type:"tip",children:(0,t.jsxs)(s.p,{children:[(0,t.jsx)(n,{name:"check-circle",color:"green"})," ",(0,t.jsx)(s.strong,{children:"Best Practice:"})," Tests should always\nbe able to be run independently from one another ",(0,t.jsx)(s.strong,{children:"and still pass"}),"."]})}),"\n",(0,t.jsx)(s.p,{children:"As stated in our mission, we hold ourselves accountable to champion a testing\nprocess that actually works, and have built Cypress to guide developers towards\nwriting independent tests from the start."}),"\n",(0,t.jsxs)(s.p,{children:["We do this by cleaning up state ",(0,t.jsx)(s.em,{children:"before"})," each test to ensure that the operation\nof one test does not affect another test later on. The goal for each test should\nbe to ",(0,t.jsx)(s.strong,{children:"reliably pass"})," whether run in isolation or consecutively with other\ntests. Having tests that depend on the state of an earlier test can potentially\ncause nondeterministic test failures which make debugging challenging."]}),"\n",(0,t.jsx)(s.p,{children:"Cypress will start each test with a clean test slate by restoring and clearing\nall:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/api/commands/as",children:"aliases"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/api/commands/clock",children:"clock mocks"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/api/commands/intercept",children:"intercepts"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/api/commands/spy",children:"spies"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/api/commands/stub",children:"stubs"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"/api/commands/viewport",children:"viewport changes"})}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["In addition to a clean test slate, Cypress also believes in running tests in a\nclean browser context such that the application or component under test behaves\nconsistently when run. This behavior is described as ",(0,t.jsx)(s.code,{children:"testIsolation"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["The test isolation is a global configuration and can be overridden for\nend-to-end testing at the ",(0,t.jsx)(s.code,{children:"describe"})," level with the\n",(0,t.jsx)(s.a,{href:"/guides/references/configuration#e2e",children:(0,t.jsx)(s.code,{children:"testIsolation"})})," option."]}),"\n",(0,t.jsx)(s.h2,{id:"Test-Isolation-in-End-to-End-Testing",children:"Test Isolation in End-to-End Testing"}),"\n",(0,t.jsx)(s.p,{children:"Cypress supports enabling or disabling test isolation in end-to-end testing to\ndescribe if a suite of tests should run in a clean browser context or not."}),"\n",(0,t.jsx)(s.h3,{id:"Test-Isolation-Enabled",children:"Test Isolation Enabled"}),"\n",(0,t.jsxs)(s.p,{children:["When test isolation is enabled, Cypress resets the browser context ",(0,t.jsx)(s.em,{children:"before"})," each\ntest by:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["clearing the dom state by visiting ",(0,t.jsx)(s.code,{children:"about:blank"})]}),"\n",(0,t.jsxs)(s.li,{children:["clearing ",(0,t.jsx)(s.a,{href:"/api/cypress-api/cookies",children:"cookies"})," in all domains"]}),"\n",(0,t.jsxs)(s.li,{children:["clearing\n",(0,t.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage",children:(0,t.jsx)(s.code,{children:"localStorage"})}),"\nin all domains"]}),"\n",(0,t.jsxs)(s.li,{children:["clearing\n",(0,t.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage",children:(0,t.jsx)(s.code,{children:"sessionStorage"})}),"\nin all domains"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Because the test starts in a fresh browser context, you must re-visit your\napplication and perform the series of interactions needed to build the dom and\nbrowser state for each test."}),"\n",(0,t.jsxs)(s.p,{children:["Additionally, the ",(0,t.jsx)(s.a,{href:"/api/commands/session",children:(0,t.jsx)(s.code,{children:"cy.session()"})})," command will inherit\nthis configuration and will clear the page and current browser context when\nestablishing a browser session. This is so tests can reliably pass when run\nstandalone or in a randomized order."]}),"\n",(0,t.jsx)(s.h3,{id:"Test-Isolation-Disabled",children:"Test Isolation Disabled"}),"\n",(0,t.jsxs)(s.p,{children:["When test isolation is disabled, Cypress will not alter the browser context\nbefore the test starts. The page does not clear between tests and cookies, local\nstorage and session storage will be available across tests in that suite.\nAdditionally, the ",(0,t.jsx)(s.a,{href:"/api/commands/session",children:(0,t.jsx)(s.code,{children:"cy.session()"})})," command will only\nclear the current browser context when establishing the browser session - the\ncurrent page is not cleared."]}),"\n",(0,t.jsx)(s.h3,{id:"Quick-Comparison",children:"Quick Comparison"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"testIsolation"}),(0,t.jsx)(s.th,{children:"beforeEach test"}),(0,t.jsx)(s.th,{children:"cy.session()"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"true"})}),(0,t.jsxs)(s.td,{children:["- clears page by visiting ",(0,t.jsx)(s.code,{children:"about:blank"}),(0,t.jsx)("br",{}),"- clears cookies in all domains",(0,t.jsx)("br",{}),"- local storage in all domains",(0,t.jsx)("br",{}),"- session storage in all domains"]}),(0,t.jsxs)(s.td,{children:["- clears page by visiting ",(0,t.jsx)(s.code,{children:"about:blank"}),(0,t.jsx)("br",{}),"- clears cookies in all domains",(0,t.jsx)("br",{}),"- local storage in all domains",(0,t.jsx)("br",{}),"- session storage in all domains"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:"does not alter the current browser context"}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)("br",{}),"- clears cookies in all domains",(0,t.jsx)("br",{}),"- local storage in all domains",(0,t.jsx)("br",{}),"- session storage in all domains"]})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"Test-Isolation-in-Component-Testing",children:"Test Isolation in Component Testing"}),"\n",(0,t.jsx)(s.p,{children:"Cypress does not support configuring the test isolation behavior in component\ntesting."}),"\n",(0,t.jsxs)(s.p,{children:["When running component tests, Cypress always resets the browser context ",(0,t.jsx)(s.em,{children:"before"}),"\neach test by:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"unmounting the rendered component under test"}),"\n",(0,t.jsxs)(s.li,{children:["clearing ",(0,t.jsx)(s.a,{href:"/api/cypress-api/cookies",children:"cookies"})," in all domains"]}),"\n",(0,t.jsxs)(s.li,{children:["clearing\n",(0,t.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage",children:(0,t.jsx)(s.code,{children:"localStorage"})}),"\nin all domains"]}),"\n",(0,t.jsxs)(s.li,{children:["clearing\n",(0,t.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage",children:(0,t.jsx)(s.code,{children:"sessionStorage"})}),"\nin all domains"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"Test-Isolation-Trade-offs",children:"Test Isolation Trade-offs"}),"\n",(0,t.jsx)(s.p,{children:'It is important to note that disabling test isolation may improve the overall\nperformance of end-to-end tests, however, it can also cause state to "leak"\nbetween tests. This can make later tests dependent on the results of earlier\ntests, and potentially cause misleading test failures. It is important to be\nextremely mindful of how tests are written when using this mode, and ensure that\ntests continue to run independently of one another.'}),"\n",(0,t.jsxs)(s.p,{children:["The best way to ensure your tests are independent is to add a ",(0,t.jsx)(s.code,{children:".only()"})," to your\ntest and verify it can run successfully without the test before it."]})]})}function h(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>r,a:()=>a});var t=n(7294);const i={},o=t.createContext(i);function a(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);